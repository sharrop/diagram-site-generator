{
  "AppUsageDataAnalytics": {
    "name": "AppUsageDataAnalytics",
    "domain": "Analytics"
  },
  "BillingAccountAnalytics": {
    "name": "BillingAccountAnalytics",
    "domain": "Analytics"
  },
  "BillingSubscriptionAnalytics": {
    "name": "BillingSubscriptionAnalytics",
    "domain": "Analytics"
  },
  "CustomerAnalytics": {
    "name": "CustomerAnalytics",
    "domain": "Analytics"
  },
  "CustomerHealthStatsAnalytics": {
    "name": "CustomerHealthStatsAnalytics",
    "domain": "Analytics"
  },
  "CustomerInteractionAnalytics": {
    "name": "CustomerInteractionAnalytics",
    "domain": "Analytics"
  },
  "DeviceAnalytics": {
    "name": "DeviceAnalytics",
    "domain": "Analytics"
  },
  "EligibilityOfferAnalytics": {
    "name": "EligibilityOfferAnalytics",
    "domain": "Analytics"
  },
  "eNodeBAnalytics": {
    "name": "eNodeBAnalytics",
    "domain": "Analytics"
  },
  "eUICCProfileAnalytics": {
    "name": "eUICCProfileAnalytics",
    "domain": "Analytics"
  },
  "eUICCUsageAnalytics": {
    "name": "eUICCUsageAnalytics",
    "domain": "Analytics"
  },
  "HLRSubscriberAnalytics": {
    "name": "HLRSubscriberAnalytics",
    "domain": "Analytics"
  },
  "InvoiceLineItemAnalytics": {
    "name": "InvoiceLineItemAnalytics",
    "domain": "Analytics"
  },
  "IOTObservationAnalytics": {
    "name": "IOTObservationAnalytics",
    "domain": "Analytics"
  },
  "IOTPropertyAnalytics": {
    "name": "IOTPropertyAnalytics",
    "domain": "Analytics"
  },
  "LocationAnalytics": {
    "name": "LocationAnalytics",
    "domain": "Analytics"
  },
  "MobileDataXDRAnalytics": {
    "name": "MobileDataXDRAnalytics",
    "domain": "Analytics"
  },
  "NetworkQualityAnalytics": {
    "name": "NetworkQualityAnalytics",
    "domain": "Analytics"
  },
  "OrderLineItemAnalytics": {
    "name": "OrderLineItemAnalytics",
    "domain": "Analytics"
  },
  "PaymentAnalytics": {
    "name": "PaymentAnalytics",
    "domain": "Analytics"
  },
  "PointofSaleAnalytics": {
    "name": "PointofSaleAnalytics",
    "domain": "Analytics"
  },
  "PricePlanAnalytics": {
    "name": "PricePlanAnalytics",
    "domain": "Analytics"
  },
  "ProductUsageAnalytics": {
    "name": "ProductUsageAnalytics",
    "domain": "Analytics"
  },
  "PublictransportationJourneyAnalytics": {
    "name": "PublictransportationJourneyAnalytics",
    "domain": "Analytics"
  },
  "PublicTransportLineAnalytics": {
    "name": "PublicTransportLineAnalytics",
    "domain": "Analytics"
  },
  "PublicTransportStationAnalytics": {
    "name": "PublicTransportStationAnalytics",
    "domain": "Analytics"
  },
  "PurchaseActivityAnalytics": {
    "name": "PurchaseActivityAnalytics",
    "domain": "Analytics"
  },
  "RatedEventAnalytics": {
    "name": "RatedEventAnalytics",
    "domain": "Analytics"
  },
  "RatingBillingPostpaidXDRAnalytics": {
    "name": "RatingBillingPostpaidXDRAnalytics",
    "domain": "Analytics"
  },
  "RatingBillingPrepaidXDRAnalytics": {
    "name": "RatingBillingPrepaidXDRAnalytics",
    "domain": "Analytics"
  },
  "SensorAnalytics": {
    "name": "SensorAnalytics",
    "domain": "Analytics"
  },
  "SMSCXDRAnalytics": {
    "name": "SMSCXDRAnalytics",
    "domain": "Analytics"
  },
  "SocialMediaAnalytics": {
    "name": "SocialMediaAnalytics",
    "domain": "Analytics"
  },
  "SwitchXDRAnalytics": {
    "name": "SwitchXDRAnalytics",
    "domain": "Analytics"
  },
  "ThingAnalytics": {
    "name": "ThingAnalytics",
    "domain": "Analytics"
  },
  "WorkforceAnalytics": {
    "name": "WorkforceAnalytics",
    "domain": "Analytics"
  },
  "AbstractEnvironment": {
    "name": "AbstractEnvironment",
    "domain": "Common",
    "description": "A managed abstract environment resource"
  },
  "AbstractEnvironmentDefinition": {
    "name": "AbstractEnvironmentDefinition",
    "domain": "Common",
    "description": "Abstract environment definition"
  },
  "AbstractEnvironmentRef": {
    "name": "AbstractEnvironmentRef",
    "domain": "Common",
    "description": "A reference to a managed test abstract environment resource"
  },
  "Address": {
    "name": "Address",
    "domain": "Common",
    "description": "Structured textual way of describing how to find a Property in an urban area (country properties are often\ndefined differently).\nNote : Address corresponds to SID UrbanPropertyAddress"
  },
  "Addressable": {
    "name": "Addressable",
    "domain": "Common",
    "description": "Base schema for adressable entities"
  },
  "AddressRef": {
    "name": "AddressRef",
    "domain": "Common"
  },
  "AdhocCollection": {
    "name": "AdhocCollection",
    "domain": "Common",
    "description": ""
  },
  "AdministrativeState": {
    "name": "AdministrativeState",
    "domain": "Common",
    "description": "This is enumeration for Administrative state"
  },
  "AiModel": {
    "name": "AiModel",
    "domain": "Common",
    "description": "AiModel is a base class for defining the AiModel hierarchy"
  },
  "AiModelSpecification": {
    "name": "AiModelSpecification",
    "domain": "Common",
    "description": "AiModelSpecification is a class that offers characteristics to describe a type of service.\nFunctionally, it acts as a template by which Services may be instantiated. By sharing the same  specification, these services would therefore share the same set of characteristics."
  },
  "AlgorithmParams": {
    "name": "AlgorithmParams",
    "domain": "Common"
  },
  "AlgorithmThresholdRule": {
    "name": "AlgorithmThresholdRule",
    "domain": "Common",
    "description": "A threshold rule that is a reference to an algorithm"
  },
  "AlternateGeographicAddress": {
    "name": "AlternateGeographicAddress",
    "domain": "Common"
  },
  "Anomaly": {
    "name": "Anomaly",
    "domain": "Common",
    "description": "Anomaly is an entity that describes an unxpected behavior of an entity or system "
  },
  "AnomalyConsequence": {
    "name": "AnomalyConsequence",
    "domain": "Common",
    "description": "A target/threshold crossing or a target/threshold ceased to be crossing results in a consequence."
  },
  "AnomalyIndicator": {
    "name": "AnomalyIndicator",
    "domain": "Common",
    "description": "AnomalyIndicator indicates an anomaly indicator instance."
  },
  "AnomalyIndicatorSpecification": {
    "name": "AnomalyIndicatorSpecification",
    "domain": "Common",
    "description": "AnomalySpecification is a class that offers characteristics to describe a type of anomaly.\nFunctionally, it acts as a template by which anomalies may be instantiated. By sharing the same specification, these anomaly instances would therefore share the same set of characteristics."
  },
  "AnomalyIndicatorSpecRelationship": {
    "name": "AnomalyIndicatorSpecRelationship",
    "domain": "Common",
    "description": "Linked Anomaly Indicator Specification to the one containing this attribute"
  },
  "AnomalySpecification": {
    "name": "AnomalySpecification",
    "domain": "Common",
    "description": "AnomalySpecification is a class that offers characteristics to describe a type of anomaly.\nFunctionally, it acts as a template by which anomalies may be instantiated. By sharing the same specification, these anomaly instances would therefore share the same set of characteristics."
  },
  "AnomalyThreshold": {
    "name": "AnomalyThreshold",
    "domain": "Common",
    "description": "A threshold base entity containing threshold rules."
  },
  "Any": {
    "name": "Any",
    "domain": "Common"
  },
  "ApplicableTimePeriod": {
    "name": "ApplicableTimePeriod",
    "domain": "Common",
    "description": "The period of time for which Capacity or CapacityDemand applies."
  },
  "Area": {
    "name": "Area",
    "domain": "Common",
    "description": "Area corresponds to a geographic area as a city, a locality, a district, etc."
  },
  "AssetGroup": {
    "name": "AssetGroup",
    "domain": "Common",
    "description": "Defines a group of assets (entities) to which access can be controlled. Specific subclasses allow definition in various ways (list of entities, queries, ownership by customer, etc.)"
  },
  "AssetUserRole": {
    "name": "AssetUserRole",
    "domain": "Common",
    "description": "The AssetUserRole is the detailed information concerning an individual user role"
  },
  "Association": {
    "name": "Association",
    "domain": "Common",
    "description": "Association is the class that describes a relationship between two or more entities or entity specifications based on a given association specification (relationship type). The role of each endpoint in the relationship is given by an association role. The type of endpoints in the relationship should match the ones as defined in the corresponding association role specification.\n A relationship between entity/ entity specifications may be governed by conditions and rules which are addressed by constraint references in this resource. Constraints for a relationship may include new rules and conditions in addition to those defined for the corresponding association specification"
  },
  "AssociationRole": {
    "name": "AssociationRole",
    "domain": "Common",
    "description": "This embedded object represents the role and type of each entity involved in a relationship."
  },
  "AssociationRoleSpec": {
    "name": "AssociationRoleSpec",
    "domain": "Common",
    "description": "This embedded object represents the role and type of each entity involved in a relationship."
  },
  "AssociationRoleSpecification": {
    "name": "AssociationRoleSpecification",
    "domain": "Common",
    "description": "This embedded object represents the role and type of each entity involved in a relationship."
  },
  "AssociationSpecification": {
    "name": "AssociationSpecification",
    "domain": "Common",
    "description": "AssociationSpecification is an association class that describes a type of relationship between two entities. This is a generic construct that may be used to describe relationship types and roles. The role and type of each entity in the relationship is given by an association role specification. Two role specifications are embedded in the association specification."
  },
  "AssociationSpecificationRef": {
    "name": "AssociationSpecificationRef",
    "domain": "Common",
    "description": "reference to an AssociationSpecification object"
  },
  "AssociationSpecRef": {
    "name": "AssociationSpecRef",
    "domain": "Common",
    "description": "reference to an AssociationSpecification object"
  },
  "Attachment": {
    "name": "Attachment",
    "domain": "Common",
    "description": "Complements the description of an element (for instance a product) through video, pictures..."
  },
  "AttachmentRef": {
    "name": "AttachmentRef",
    "domain": "Common",
    "description": "Attachment reference. An attachment complements the description of an element (for instance a product) through video, pictures"
  },
  "AttachmentRefOrValue": {
    "name": "AttachmentRefOrValue",
    "domain": "Common",
    "description": "An attachment by value or by reference. An attachment complements the description of an element, for example through a document, a video, a picture."
  },
  "Attribute": {
    "name": "Attribute",
    "domain": "Common"
  },
  "AttributeValuePair": {
    "name": "AttributeValuePair",
    "domain": "Common"
  },
  "AvailabilityCheck": {
    "name": "AvailabilityCheck",
    "domain": "Common"
  },
  "BaseEvent": {
    "name": "BaseEvent",
    "domain": "Common",
    "description": "Base event with common attributes."
  },
  "BasePlusEvent": {
    "name": "BasePlusEvent",
    "domain": "Common",
    "description": "Base event with common attributes."
  },
  "BestAchievableOutcome": {
    "name": "BestAchievableOutcome",
    "domain": "Common",
    "description": ""
  },
  "BestIntent": {
    "name": "BestIntent",
    "domain": "Common",
    "description": "An Best Intent instance is the formal description of all expectations including requirements, goals, and constraints given to a technical system"
  },
  "BooleanArrayCharacteristic": {
    "name": "BooleanArrayCharacteristic",
    "domain": "Common",
    "description": "A characteristic which the value is a boolean array"
  },
  "BooleanArrayCharacteristicValueSpecification": {
    "name": "BooleanArrayCharacteristicValueSpecification",
    "domain": "Common",
    "description": "A specification for a characteristic for which the value is an array booleans"
  },
  "BooleanCharacteristic": {
    "name": "BooleanCharacteristic",
    "domain": "Common",
    "description": "A characteristic which value is a boolean"
  },
  "BooleanCharacteristicValueSpecification": {
    "name": "BooleanCharacteristicValueSpecification",
    "domain": "Common",
    "description": "A specification for a characteristic for which the value is a boolean"
  },
  "BusinessInteraction": {
    "name": "BusinessInteraction",
    "domain": "Common"
  },
  "CalendarEventRef": {
    "name": "CalendarEventRef",
    "domain": "Common",
    "description": "Reference of a CalendarEvent"
  },
  "CalendarPeriod": {
    "name": "CalendarPeriod",
    "domain": "Common"
  },
  "CancelOrder": {
    "name": "CancelOrder",
    "domain": "Common",
    "description": "A Order cancel is a type of task which  can  be used to place a request to cancel an order"
  },
  "CancelReservation": {
    "name": "CancelReservation",
    "domain": "Common",
    "description": "A Cancel Reservation is a type of task which  can  be used to place a request to cancel a reservation"
  },
  "Capacity": {
    "name": "Capacity",
    "domain": "Common",
    "description": "Specific ability of an entity measured in quantity and units of quantity over an extended period."
  },
  "CapacityAmount": {
    "name": "CapacityAmount",
    "domain": "Common",
    "description": "Quantity that defines the Capacity."
  },
  "CapacityRef": {
    "name": "CapacityRef",
    "domain": "Common"
  },
  "CapacitySpecRef": {
    "name": "CapacitySpecRef",
    "domain": "Common"
  },
  "ChangeRequest": {
    "name": "ChangeRequest",
    "domain": "Common",
    "description": "Change Request is a type of request which can be used for the management and control of Change Management process \n -within a service provider organisation or \n -between a customer and a service provider or \n -between a service provider and a partner and vice versa."
  },
  "ChangeRequestCharacteristic": {
    "name": "ChangeRequestCharacteristic",
    "domain": "Common",
    "description": "Characteristics of the change request to instantiate or to modify"
  },
  "ChangeRequestRef": {
    "name": "ChangeRequestRef",
    "domain": "Common",
    "description": "Reference to a Change Request"
  },
  "ChangeRequestRefOrValue": {
    "name": "ChangeRequestRefOrValue",
    "domain": "Common",
    "description": "A Service to be created defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Service entity and not the RelatedServiceRefOrValue class itself"
  },
  "ChangeRequestRelationship": {
    "name": "ChangeRequestRelationship",
    "domain": "Common"
  },
  "ChangeRequestSpecification": {
    "name": "ChangeRequestSpecification",
    "domain": "Common",
    "description": "Defines a set of attributes related to Change Request."
  },
  "ChangeRequestStatusType": {
    "name": "ChangeRequestStatusType",
    "domain": "Common",
    "description": "Possible values for the state of the change request"
  },
  "Channel": {
    "name": "Channel",
    "domain": "Common",
    "description": "The channel to which the resource reference to. e.g. channel for selling product offerings, channel for opening a trouble ticket etc.."
  },
  "ChannelRef": {
    "name": "ChannelRef",
    "domain": "Common",
    "description": "The channel to which the resource reference to. e.g. channel for selling product offerings, channel for opening a trouble ticket etc.."
  },
  "Characteristic": {
    "name": "Characteristic",
    "domain": "Common",
    "description": "Describes a given characteristic of an object or entity through a name/value pair."
  },
  "CharacteristicRelationship": {
    "name": "CharacteristicRelationship",
    "domain": "Common",
    "description": "Another Characteristic that is related to the current Characteristic."
  },
  "CharacteristicSpecification": {
    "name": "CharacteristicSpecification",
    "domain": "Common",
    "description": "This class defines a characteristic specification."
  },
  "CharacteristicSpecificationBase": {
    "name": "CharacteristicSpecificationBase",
    "domain": "Common",
    "description": "This class defines a characteristic specification."
  },
  "CharacteristicSpecificationRelationship": {
    "name": "CharacteristicSpecificationRelationship",
    "domain": "Common",
    "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among Characteristic specifications. The specification characteristic is embedded within the specification whose ID and href are in this entity, and identified by its ID."
  },
  "CharacteristicValueSpecification": {
    "name": "CharacteristicValueSpecification",
    "domain": "Common",
    "description": "specification of a value (number or text or an object) that can be assigned to a Characteristic."
  },
  "CheckPermission": {
    "name": "CheckPermission",
    "domain": "Common",
    "description": "The CheckPermission task entity verifies that the security principal in context can carry out the action. If permission is granted, 200 is returned, if denied, 403 is returned. If party role or user is present in input, these are used, otherwise the security principal is deduced from the HTTP Authorization header."
  },
  "CollectionType": {
    "name": "CollectionType",
    "domain": "Common",
    "description": "This is enumeration for CollectionType state"
  },
  "Comment": {
    "name": "Comment",
    "domain": "Common",
    "description": "Indicates the comments entered on the alarm."
  },
  "CommonComponents": {
    "name": "CommonComponents",
    "domain": "Common"
  },
  "CommunicationMessage": {
    "name": "CommunicationMessage",
    "domain": "Common",
    "description": "Communication message means a notification approach in the format of a message which can be dispatched (sent) to the certain user by the system with the content which can be felt and understood by the recipient. The user can be either a final customer or a customer service agent. The message can reach the customer in different interaction channels, including: email, short message, mobile app notification (push)."
  },
  "CommunicationMessageStateType": {
    "name": "CommunicationMessageStateType",
    "domain": "Common",
    "description": "Communication message state type"
  },
  "CommunicationRequestCharacteristic": {
    "name": "CommunicationRequestCharacteristic",
    "domain": "Common",
    "description": "The values of parameters which are used in the content if the content contains them."
  },
  "CompAtomicConfigurationSpecRelationship": {
    "name": "CompAtomicConfigurationSpecRelationship",
    "domain": "Common",
    "description": "A type of ConfgSpecRelationship that represents a group of ConfigurationSpecifications that are used to configure an ConfigurationSpecification that is made up of other ConfigurationSpecfications"
  },
  "CompressionEnumType": {
    "name": "CompressionEnumType",
    "domain": "Common",
    "description": "Enumeration of supported compressions. All extensions allowed."
  },
  "CompressionType": {
    "name": "CompressionType",
    "domain": "Common",
    "description": "File compression type."
  },
  "ConcreteEnvironmentMetaModel": {
    "name": "ConcreteEnvironmentMetaModel",
    "domain": "Common",
    "description": "A managed concrete environment resource metamodel resource"
  },
  "ConcreteEnvironmentMetaModelDefinition": {
    "name": "ConcreteEnvironmentMetaModelDefinition",
    "domain": "Common",
    "description": "Test environment metamodel definition"
  },
  "ConcreteEnvironmentMetaModelRef": {
    "name": "ConcreteEnvironmentMetaModelRef",
    "domain": "Common",
    "description": "A reference to a managed concrete environtment resource metamodel resource"
  },
  "Configuration": {
    "name": "Configuration",
    "domain": "Common",
    "description": "A representation of how a Resource, Service, or Product operates or functions in terms of characteristics and related Resource(s), Product(s), Service(s)"
  },
  "ConfigurationRef": {
    "name": "ConfigurationRef",
    "domain": "Common",
    "description": ""
  },
  "ConfigurationRefOrValue": {
    "name": "ConfigurationRefOrValue",
    "domain": "Common",
    "description": "A Configuration to be created, defined by value or existing defined by reference"
  },
  "ConfigurationRelationship": {
    "name": "ConfigurationRelationship",
    "domain": "Common",
    "description": "A relationship between two Configurations"
  },
  "ConfigurationSpecification": {
    "name": "ConfigurationSpecification",
    "domain": "Common",
    "description": "The definition of how a Resource, Service, or Product operates or functions in terms of CharacteristicSpecification(s) and related ResourceSpec(s), ProductSpec(s), ServiceSpec(s)."
  },
  "ConfigurationSpecificationRef": {
    "name": "ConfigurationSpecificationRef",
    "domain": "Common",
    "description": ""
  },
  "ConfigurationSpecRelationship": {
    "name": "ConfigurationSpecRelationship",
    "domain": "Common",
    "description": "A relationship between two ConfigurationSpecifications"
  },
  "Consequence": {
    "name": "Consequence",
    "domain": "Common",
    "description": "A threshold crossing or a threshold ceased to be crossing results in a Performance consequence."
  },
  "ConstraintRef": {
    "name": "ConstraintRef",
    "domain": "Common",
    "description": "Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec."
  },
  "ContactMedium": {
    "name": "ContactMedium",
    "domain": "Common",
    "description": "Indicates the contact medium that could be used to contact the party."
  },
  "ContainedItemRef": {
    "name": "ContainedItemRef",
    "domain": "Common",
    "description": "Describes a specific item contained in a parent element"
  },
  "ContentType": {
    "name": "ContentType",
    "domain": "Common",
    "description": "Base64 content structure."
  },
  "DataFilterAttribute": {
    "name": "DataFilterAttribute",
    "domain": "Common",
    "description": "give an attribute used for filtering"
  },
  "DataFilterAttributeStringArray": {
    "name": "DataFilterAttributeStringArray",
    "domain": "Common",
    "description": "An array of attribute names for filtering"
  },
  "DataFilterMap": {
    "name": "DataFilterMap",
    "domain": "Common",
    "description": "entity to Describe a given filter attributes/fields set using a mapping by type/template."
  },
  "DataFilterMapItem": {
    "name": "DataFilterMapItem",
    "domain": "Common",
    "description": "definition of a field used for filtering template with the associated attributes."
  },
  "DataFilterRangeBound": {
    "name": "DataFilterRangeBound",
    "domain": "Common",
    "description": "A boundary definition of the range."
  },
  "DataFilterTemplate": {
    "name": "DataFilterTemplate",
    "domain": "Common",
    "description": "Abstract entity to Describe a given filter template,\n a filter template can be used in two ways:\n1) as a straight filter definition\n2) as a way to specify the acceptable value for a field for filtering"
  },
  "DataFilterTemplateBoolean": {
    "name": "DataFilterTemplateBoolean",
    "domain": "Common",
    "description": "A filter representing a boolean value template. the template can be used two ways:\n1) as filtering so the collected data will only contains attribute value corresponding to 'criteria'\n2) as limit for querying so the only value acceptable for the attibute are the values define by 'criteria'"
  },
  "DataFilterTemplateRange": {
    "name": "DataFilterTemplateRange",
    "domain": "Common",
    "description": "A filter representing a range value template. the template can be used two ways:\n1) as filtering so the collected data will only contains data's with the attribute values which are inside the lower and upper bound\n2) as limit, so the only value acceptable for querying  using an attibute are the attribute value inside the lower and upper bound"
  },
  "DataFilterTemplateRegex": {
    "name": "DataFilterTemplateRegex",
    "domain": "Common",
    "description": "A filter representing a Regex pattern value template. the template can be used two ways:\n1) as filtering so the collected data will only contains data's with the attribute values which satisfies the regex pattern in 'criteria'\n2) as limit, so the only value acceptable for querying  using an attibute are the attribute value satisfying the regex pattern in 'criteria'"
  },
  "DayOfMonthRecurrence": {
    "name": "DayOfMonthRecurrence",
    "domain": "Common",
    "description": ""
  },
  "DayOfWeekRecurrence": {
    "name": "DayOfWeekRecurrence",
    "domain": "Common",
    "description": ""
  },
  "DiagnoseIncident": {
    "name": "DiagnoseIncident",
    "domain": "Common",
    "description": "A stage in the incident lifecycle. The purpose of diagnosis is to identify a workaround for an incident (ITIL Service Operation). \nDiagnosing Incidents by Incident SN"
  },
  "DigitalIdentityContactMedium": {
    "name": "DigitalIdentityContactMedium",
    "domain": "Common",
    "description": "Indicates the contact medium that could be used to contact the party."
  },
  "DistributedLedger": {
    "name": "DistributedLedger",
    "domain": "Common"
  },
  "DistributedLedgerRef": {
    "name": "DistributedLedgerRef",
    "domain": "Common",
    "description": "Reference to a DistributedLedger resource"
  },
  "DLDataFabric": {
    "name": "DLDataFabric",
    "domain": "Common",
    "description": "Provides the definition of a Data Fabric endpoint for a Distributed Ledger implementation"
  },
  "DLExchange": {
    "name": "DLExchange",
    "domain": "Common",
    "description": "Provides the definition of a Distributed Ledger exchange"
  },
  "DLExchangeRate": {
    "name": "DLExchangeRate",
    "domain": "Common",
    "description": "Provides an exhange rate for a currency pair within an exchange parent with a validity period"
  },
  "DLImplementation": {
    "name": "DLImplementation",
    "domain": "Common",
    "description": "Provides the definition of a Distributed Ledger technology implemementation"
  },
  "DLTransaction": {
    "name": "DLTransaction",
    "domain": "Common",
    "description": "Provides the definition of a Distributed Ledger transaction request and lifecycle"
  },
  "Document": {
    "name": "Document",
    "domain": "Common",
    "description": "A Document describes the meta-data of a Document - such as the name, creationDate and lifecycle status.\nThe (typically binary) body of this document (such as a Word.doc, PDF, Video clip, or Image) will be held in the associated Attachment(s) either by Ref or Value. If by value - the binary content is held in the Attachment.content. If by reference, the Attachment.url might point to a (file:) or remote (http:) pointer to the Document media.\n\nA Document may be associated with a DocumentSpecification, which will detail the characteristics of that type of Document (an Image may have a width, height and format; a Video may have a length and format).\nA Document has a collection of RelatedParty's, for roles such as author, reviewer, publisher; and a lifecycle status to take the document through a simple set of production stages."
  },
  "DocumentAttachment": {
    "name": "DocumentAttachment",
    "domain": "Common",
    "description": "Attachment refers to extensions or additional parts that is or may be attached to something (agreements, contracts, appointments) to perform a particular function. They can be communication attachments, documents and other."
  },
  "DocumentRef": {
    "name": "DocumentRef",
    "domain": "Common"
  },
  "DocumentRelationship": {
    "name": "DocumentRelationship",
    "domain": "Common",
    "description": "Another document that is related to the current document;"
  },
  "DocumentSpecification": {
    "name": "DocumentSpecification",
    "domain": "Common",
    "description": "A DocumentSpecification provides the characteristics and constraints that describe a particular type of Document. It follows the EntitySpecification pattern, so allows you to define the characteristics expected, as well as the nature of the values of those characteristics (eg: integer range [valueFrom/valueTo], regular JsonLdExpression or unitOfMeasure)."
  },
  "DocumentSpecificationRef": {
    "name": "DocumentSpecificationRef",
    "domain": "Common",
    "description": "A DocumentSpecificationRef provides a reference to a DocumentSpefication"
  },
  "DocumentSpecificationRefOrValue": {
    "name": "DocumentSpecificationRefOrValue",
    "domain": "Common",
    "description": "A DocumentSpecificationRefOrValue where you can select between a DocumentSpecification (by Value) or a DocumentSpecificationRef (by Reference)"
  },
  "DocumentSpecificationStatusType": {
    "name": "DocumentSpecificationStatusType",
    "domain": "Common",
    "description": "Possible values for the status of a DocumentSpecification"
  },
  "DocumentStatusType": {
    "name": "DocumentStatusType",
    "domain": "Common",
    "description": "Possible values for the status of a Document"
  },
  "Duration": {
    "name": "Duration",
    "domain": "Common",
    "description": "A time interval in a given unit of time"
  },
  "Edge": {
    "name": "Edge",
    "domain": "Common",
    "description": "Edge is a directed edge connecting vertices in a directed Graph."
  },
  "EdgeCollectionRef": {
    "name": "EdgeCollectionRef",
    "domain": "Common",
    "description": "Graph edge collection reference"
  },
  "EdgeRef": {
    "name": "EdgeRef",
    "domain": "Common"
  },
  "EdgeSpecification": {
    "name": "EdgeSpecification",
    "domain": "Common",
    "description": "A directed Edge connects Vertices in a Graph.\nAn EdgeSpecification is a base class that represents a generic means for implementing a particular type of Edge. In essence, an EdgeSpecification defines the common attributes and relationships of a set of related Edges, while Edge defines a specific instance that is based on a particular EdgeSpecification."
  },
  "EdgeSpecificationCharacteristic": {
    "name": "EdgeSpecificationCharacteristic",
    "domain": "Common",
    "description": "This class defines the characteristic features of an edge specification. Every EdgeSpecification has a variety of important attributes, methods, constraints, and relationships, which distinguish an edge specification from other edge specifications."
  },
  "EdgeSpecificationCharacteristicRelationship": {
    "name": "EdgeSpecificationCharacteristicRelationship",
    "domain": "Common",
    "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among EdgeSpecificationCharacteristics. The specification characteristic is embedded within the specification whose ID and href are in this entity, and identified by its ID."
  },
  "EdgeSpecificationRef": {
    "name": "EdgeSpecificationRef",
    "domain": "Common",
    "description": "A directed Edge connects Vertices in a Graph.\nAn EdgeSpecification is a base class that represents a generic means for implementing a particular type of Edge. In essence, an EdgeSpecification defines the common attributes and relationships of a set of related Edges, while Edge defines a specific instance that is based on a particular EdgeSpecification."
  },
  "EmailMedium": {
    "name": "EmailMedium",
    "domain": "Common",
    "description": "Describes an email that could be used to contact a party (an individual or an organization)"
  },
  "Entitlement": {
    "name": "Entitlement",
    "domain": "Common",
    "description": "An Entitlement defines access levels to operate over a given function that can be included in an asset."
  },
  "Entity": {
    "name": "Entity",
    "domain": "Common",
    "description": "Base entity schema for use in TMForum Open-APIs"
  },
  "EntityAttachment": {
    "name": "EntityAttachment",
    "domain": "Common",
    "description": "Complements the description of an entity through video, pictures..."
  },
  "EntityCatalog": {
    "name": "EntityCatalog",
    "domain": "Common",
    "description": "The root entity for entity catalog management. An entity catalog can be defined as a collection of entity catalog items and arranging them in a particular manner based on the need.\nIn comparison to Product, Service and Resource catalogs, the entity catalog is intended for the purpose of providing any TMF data model entity to consumers via a catalog, with its specification and policy providing governance over its content. Even Entity catalog may have an overlap with Product, Service or Resource catalog, it does not replace them. It is primarily intended to address those entities which may not be addressed by any of Product, Service or Resource catalog.\nAn entity catalog comprises of a list of RootEntities made available through EntityCatalogItems. This API addresses only RootEntity extended items as EntitySpecification. An entity catalog typically includes name, description and time period that it is valid for."
  },
  "EntityCatalogItem": {
    "name": "EntityCatalogItem",
    "domain": "Common",
    "description": "An EntityCatalogItem is an entity that allows any ProductOffering, ServiceCandidate, ResourceCandidate, or even any object inheriting from RootEntity, to be available to a catalog. The CatalogSpecification and Policy of the catalog governs the content of the EntityCatalogItem. This API addresses only EntitySpecification items extended from RootEntity as EntityCatalogItem.\nThe EntityCatalogItem resource (JSON format) represents a set of characteristics that define the values given by the EntityCatalogItem."
  },
  "EntityCatalogItemRef": {
    "name": "EntityCatalogItemRef",
    "domain": "Common",
    "description": "reference to EntityCatalogItem object"
  },
  "EntityCategory": {
    "name": "EntityCategory",
    "domain": "Common",
    "description": "The (entity) category resource is used to group entity catalog items in logical containers. Categories can contain other categories.\nResource IDs for categories are strings and are defined by the catalog application."
  },
  "EntityCategoryRef": {
    "name": "EntityCategoryRef",
    "domain": "Common",
    "description": "Reference to Entity Category object. The (entity) category resource is used to group entity catalog items in logical containers. Categories can contain other categories.\nResource IDs for categories are strings and are defined by the catalog application."
  },
  "EntityManagement": {
    "name": "EntityManagement",
    "domain": "Common",
    "description": "Describes the management aspects of an Entity"
  },
  "EntityRef": {
    "name": "EntityRef",
    "domain": "Common",
    "description": "Entity reference schema to be use for all entityRef class."
  },
  "EntityRefOrValue": {
    "name": "EntityRefOrValue",
    "domain": "Common",
    "description": "Entity reference schema to be use for all entityRef class OrValue to provide information via POST"
  },
  "EntityRelationship": {
    "name": "EntityRelationship",
    "domain": "Common",
    "description": "A uni-directionmal relationship from this entity to a target entity instance"
  },
  "EntitySchemaRef": {
    "name": "EntitySchemaRef",
    "domain": "Common",
    "description": "The reference object to the schema and type of target entity which is described by an entity specification"
  },
  "EntitySpecification": {
    "name": "EntitySpecification",
    "domain": "Common",
    "description": "EntitySpecification is a class that offers characteristics to describe a type of entity. Entities are generic constructs that may be used to describe bespoke business entities that are not effectively covered by the existing SID model.\nFunctionally, the entity specification acts as a template by which entities may be instantiated and described. By sharing the same specification, these entities would therefore share the same set of characteristics.\nNote: The \u00e2\u20ac\u02dcconfigurable\u00e2\u20ac\u2122 attribute on the specCharacteristics determines if an entity instantiated from the entity specification can override the value of the attribute. When set to false, the entity instance may not define a value that differs from the value in the specification."
  },
  "EntitySpecificationRef": {
    "name": "EntitySpecificationRef",
    "domain": "Common",
    "description": "reference to an EntitySpecification object"
  },
  "EntitySpecificationRelationship": {
    "name": "EntitySpecificationRelationship",
    "domain": "Common",
    "description": "A migration, substitution, dependency or exclusivity relationship between/among entity specifications."
  },
  "EntitySpecRelationship": {
    "name": "EntitySpecRelationship",
    "domain": "Common",
    "description": "A migration, substitution, dependency or exclusivity relationship between/among entity specifications."
  },
  "EntityValue": {
    "name": "EntityValue",
    "domain": "Common",
    "description": "Base entity value  schema for use in TMForum Open-APIs"
  },
  "Error": {
    "name": "Error",
    "domain": "Common",
    "description": "Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)"
  },
  "ErrorMessage": {
    "name": "ErrorMessage",
    "domain": "Common",
    "description": "represents an Error"
  },
  "Event": {
    "name": "Event",
    "domain": "Common",
    "description": "event with common attributes."
  },
  "EventRef": {
    "name": "EventRef",
    "domain": "Common",
    "description": "Events linked with service problem"
  },
  "Execution": {
    "name": "Execution",
    "domain": "Common",
    "description": "The base for all Execution resources"
  },
  "ExecutionStateType": {
    "name": "ExecutionStateType",
    "domain": "Common",
    "description": "Possible values for the state of the execution"
  },
  "Expectation": {
    "name": "Expectation",
    "domain": "Common",
    "description": "Expectation represents an intent expectation"
  },
  "ExpectationSpecification": {
    "name": "ExpectationSpecification",
    "domain": "Common",
    "description": "ExpectationSpecification is a class that offers characteristics to describe a type of expectation."
  },
  "ExpectationTarget": {
    "name": "ExpectationTarget",
    "domain": "Common",
    "description": "ExpectationTarget represents an expectation target"
  },
  "ExportJob": {
    "name": "ExportJob",
    "domain": "Common",
    "description": "Represents a task used to export resources to a file"
  },
  "Expression": {
    "name": "Expression",
    "domain": "Common",
    "description": "Expression is the ontology-encoded form of the Intent"
  },
  "Extensible": {
    "name": "Extensible",
    "domain": "Common",
    "description": "Base Extensible schema for use in TMForum Open-APIs"
  },
  "ExternalIdentifier": {
    "name": "ExternalIdentifier",
    "domain": "Common",
    "description": "An identification of an entity that is owned by or originates in a software system different from the current system, for example a ProductOrder handed off from a commerce platform into an order handling system. The structure identifies the system itself, the nature of the entity within the system (e.g. class name) and the unique ID of the entity within the system. It is anticipated that multiple external IDs can be held for a single entity, e.g. if the entity passed through multiple systems on the way to the current system. In this case the consumer is expected to sequence the IDs in the array in reverse order of provenance, i.e. most recent system first in the list."
  },
  "ExternalReference": {
    "name": "ExternalReference",
    "domain": "Common",
    "description": "External reference of the individual or reference in other system"
  },
  "Extract": {
    "name": "Extract",
    "domain": "Common"
  },
  "Feature": {
    "name": "Feature",
    "domain": "Common",
    "description": "Configuration feature."
  },
  "FeatureRelationship": {
    "name": "FeatureRelationship",
    "domain": "Common",
    "description": "Configuration feature"
  },
  "FeatureSpecification": {
    "name": "FeatureSpecification",
    "domain": "Common",
    "description": "Specification for resource, service or product features"
  },
  "FeatureSpecificationCharacteristic": {
    "name": "FeatureSpecificationCharacteristic",
    "domain": "Common",
    "description": "Configuration feature characteristic specification."
  },
  "FeatureSpecificationCharacteristicRelationship": {
    "name": "FeatureSpecificationCharacteristicRelationship",
    "domain": "Common",
    "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among FeatureSpecificationCharacteristics."
  },
  "FeatureSpecificationRelationship": {
    "name": "FeatureSpecificationRelationship",
    "domain": "Common",
    "description": "Relationship between feature specifications"
  },
  "FederatedIdentity": {
    "name": "FederatedIdentity",
    "domain": "Common",
    "description": "#TODO"
  },
  "FileDescriptor": {
    "name": "FileDescriptor",
    "domain": "Common",
    "description": ""
  },
  "FileDocument": {
    "name": "FileDocument",
    "domain": "Common",
    "description": "A document accompanying an entity"
  },
  "FileTransferData": {
    "name": "FileTransferData",
    "domain": "Common",
    "description": ""
  },
  "FileTransferStatus": {
    "name": "FileTransferStatus",
    "domain": "Common",
    "description": ""
  },
  "FilterAssetGroup": {
    "name": "FilterAssetGroup",
    "domain": "Common",
    "description": "Defines a group of assets (entities) to which access can be controlled, using a filter JsonLdExpression. Any entities matching the filter are implicitly included in the group. The embedded example implies all Products owned by a specific customer"
  },
  "FloatArrayCharacteristic": {
    "name": "FloatArrayCharacteristic",
    "domain": "Common",
    "description": "A characteristic which the value is a number array of format float"
  },
  "FloatArrayCharacteristicValueSpecification": {
    "name": "FloatArrayCharacteristicValueSpecification",
    "domain": "Common",
    "description": "A specification for a characteristic for which the value is a number array of format floating point"
  },
  "FloatCharacteristic": {
    "name": "FloatCharacteristic",
    "domain": "Common",
    "description": "A characteristic which value is a float number"
  },
  "FloatCharacteristicValueSpecification": {
    "name": "FloatCharacteristicValueSpecification",
    "domain": "Common",
    "description": "A specification for a characteristic for which the value is a floating point number"
  },
  "FUTURE_Characteristic": {
    "name": "FUTURE_Characteristic",
    "domain": "Common"
  },
  "GeneralTestArtifact": {
    "name": "GeneralTestArtifact",
    "domain": "Common",
    "description": "A managed general test artifact resource"
  },
  "GeneralTestArtifactDefinition": {
    "name": "GeneralTestArtifactDefinition",
    "domain": "Common",
    "description": "General test artifact definition"
  },
  "GeneralTestArtifactRef": {
    "name": "GeneralTestArtifactRef",
    "domain": "Common",
    "description": "A reference to a managed general test artifact resource"
  },
  "GeographicAddress": {
    "name": "GeographicAddress",
    "domain": "Common",
    "description": "Structured textual way of describing how to find a Property in an urban area (country properties are often defined differently).\nNote : Address corresponds to SID UrbanPropertyAddress"
  },
  "GeographicAddressRef": {
    "name": "GeographicAddressRef",
    "domain": "Common",
    "description": "The place at which the change request has occurred."
  },
  "GeographicAddressValidation": {
    "name": "GeographicAddressValidation",
    "domain": "Common",
    "description": "This resource is used to manage address validation request and response"
  },
  "GeographicLocation": {
    "name": "GeographicLocation",
    "domain": "Common",
    "description": "A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of Point (addresses and locations), MultiPoint, LineString (streets, highways and boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the @type attribute to specify which of these is being specified by the geometry attribute."
  },
  "GeographicLocationRef": {
    "name": "GeographicLocationRef",
    "domain": "Common"
  },
  "GeographicLocationRefOrValue": {
    "name": "GeographicLocationRefOrValue",
    "domain": "Common",
    "description": "A GeographicLocation is a pure-virtual super-class to the GeoJSON-aligned geometries of Point (addresses and locations), MultiPoint, LineString (streets, highways and boundaries), MultiLineString and Polygon (countries, provinces, tracts of land). Use the @type attribute to specify which of these is being specified by the geometry attribute."
  },
  "GeographicPoint": {
    "name": "GeographicPoint",
    "domain": "Common",
    "description": "A GeographicPoint defines a geographic point through coordinates."
  },
  "GeographicSite": {
    "name": "GeographicSite",
    "domain": "Common"
  },
  "GeographicSiteRef": {
    "name": "GeographicSiteRef",
    "domain": "Common"
  },
  "GeographicSiteRelationship": {
    "name": "GeographicSiteRelationship",
    "domain": "Common"
  },
  "GeographicSubAddress": {
    "name": "GeographicSubAddress",
    "domain": "Common",
    "description": "Representation of a GeographicSubAddress \nIt is used for addressing within a property in an urban area (country properties are often defined differently). It may refer to a building, a building cluster, or a floor of a multistory building."
  },
  "GeoJSON": {
    "name": "GeoJSON",
    "domain": "Common"
  },
  "GeoJsonLineString": {
    "name": "GeoJsonLineString",
    "domain": "Common",
    "description": "Container for GeoJson LineString: A collection of Points forming a connected line"
  },
  "GeoJsonMultiLineString": {
    "name": "GeoJsonMultiLineString",
    "domain": "Common",
    "description": "A container for GeoJSON MultiLineString: A collection of distinct LineStrings"
  },
  "GeoJsonMultiPoint": {
    "name": "GeoJsonMultiPoint",
    "domain": "Common",
    "description": "Container for GeoJSON MultiPoint: A collection of Points"
  },
  "GeoJsonPoint": {
    "name": "GeoJsonPoint",
    "domain": "Common",
    "description": "Container for a GeoJSON Point: A single position"
  },
  "GeoJsonPolygon": {
    "name": "GeoJsonPolygon",
    "domain": "Common",
    "description": "Container for GeoJSON Polygon: An array of linear rings"
  },
  "Granularity": {
    "name": "Granularity",
    "domain": "Common",
    "description": "Sampling rate of the collection or production of performance indicators."
  },
  "Graph": {
    "name": "Graph",
    "domain": "Common",
    "description": "Graph is a directed graph representing edges connecting vertices."
  },
  "GraphRef": {
    "name": "GraphRef",
    "domain": "Common"
  },
  "GraphRelationship": {
    "name": "GraphRelationship",
    "domain": "Common",
    "description": "A relationship between Graphs."
  },
  "GSMACommons": {
    "name": "GSMACommons",
    "domain": "Common"
  },
  "HeaderItem": {
    "name": "HeaderItem",
    "domain": "Common",
    "description": "An item typically included in a request or response"
  },
  "HourPeriod": {
    "name": "HourPeriod",
    "domain": "Common"
  },
  "Hub": {
    "name": "Hub",
    "domain": "Common",
    "description": "A Hub is used to subscribe to an event notification"
  },
  "ImpactEntity": {
    "name": "ImpactEntity",
    "domain": "Common",
    "description": "A reference to an imapcted entity"
  },
  "ImpactEntityRef": {
    "name": "ImpactEntityRef",
    "domain": "Common",
    "description": "Defines the entities (product, service, resource, and other related objects) which will be impacted while the change \nrequest is executed."
  },
  "ImpactType": {
    "name": "ImpactType",
    "domain": "Common",
    "description": "Possible values for the impact of an Incident"
  },
  "ImportJob": {
    "name": "ImportJob",
    "domain": "Common",
    "description": "Represents a task used to import resources from a file"
  },
  "Incident": {
    "name": "Incident",
    "domain": "Common",
    "description": "An Incident is a record of an event that has altered the operational state of a entity (Resource, Service or Customers Product). An incident represents an issue that needs to be diagnosed and resolved."
  },
  "IncidentAckStateType": {
    "name": "IncidentAckStateType",
    "domain": "Common",
    "description": "Possible values for the ack state of an Incident"
  },
  "IncidentRef": {
    "name": "IncidentRef",
    "domain": "Common",
    "description": "Incident reference."
  },
  "IncidentStateType": {
    "name": "IncidentStateType",
    "domain": "Common",
    "description": "Possible values for the state of an Incident"
  },
  "IncidentTask": {
    "name": "IncidentTask",
    "domain": "Common",
    "description": "Incident task on the incident, for example : diagnose, repair etc"
  },
  "IncidentType": {
    "name": "IncidentType",
    "domain": "Common",
    "description": "Possible values for the type of an Incident"
  },
  "IndicatorSpecificationRef": {
    "name": "IndicatorSpecificationRef",
    "domain": "Common"
  },
  "IndicatorType": {
    "name": "IndicatorType",
    "domain": "Common",
    "description": "This is enumeration for Indicator Type"
  },
  "IntegerArrayCharacteristic": {
    "name": "IntegerArrayCharacteristic",
    "domain": "Common",
    "description": "A characteristic which the value is a number array of format integer"
  },
  "IntegerArrayCharacteristicValueSpecification": {
    "name": "IntegerArrayCharacteristicValueSpecification",
    "domain": "Common",
    "description": "A specification for a characteristic for which the value is a number array of format integer"
  },
  "IntegerCharacteristic": {
    "name": "IntegerCharacteristic",
    "domain": "Common",
    "description": "A characteristic which value is an integer number"
  },
  "IntegerCharacteristicValueSpecification": {
    "name": "IntegerCharacteristicValueSpecification",
    "domain": "Common",
    "description": "A specification for a characteristic for which the value is an integer number"
  },
  "Intent": {
    "name": "Intent",
    "domain": "Common",
    "description": "An Intent instance is the formal description of all expectations including requirements, goals, and constraints given to a technical system"
  },
  "IntentRef": {
    "name": "IntentRef",
    "domain": "Common",
    "description": "Intent reference, for when Intent is used by other entities"
  },
  "IntentRefOrValue": {
    "name": "IntentRefOrValue",
    "domain": "Common",
    "description": "Intent Ref (if Intent already exists) or Value (if Intent be created or its details be presented)"
  },
  "IntentReport": {
    "name": "IntentReport",
    "domain": "Common",
    "description": "IntentReport is the mechanism to report back to Intent owner on an Intents status"
  },
  "IntentSpecification": {
    "name": "IntentSpecification",
    "domain": "Common",
    "description": "IntentSpecification is a class that offers characteristics to describe a type of intent.\nFunctionally, it acts as a template by which intents may be instantiated. By sharing the same specification, these services would therefore share the same set of characteristics."
  },
  "IntentSpecificationRelationship": {
    "name": "IntentSpecificationRelationship",
    "domain": "Common",
    "description": "A  substitution, dependency or exclusivity relationship between/among intentspecifications."
  },
  "ItemRef": {
    "name": "ItemRef",
    "domain": "Common",
    "description": "Describes a specific item contained in a parent element"
  },
  "JeopardyAlert": {
    "name": "JeopardyAlert",
    "domain": "Common",
    "description": "A JeopardyAlert represents a predicted exception during a process that may cause a risk to complete successfully the process."
  },
  "JobStateType": {
    "name": "JobStateType",
    "domain": "Common",
    "description": "Valid values for the state of a batch job (e.g. catalog import)"
  },
  "JsonLdExpression": {
    "name": "JsonLdExpression",
    "domain": "Common",
    "description": "JsonLdExpression is the ontology-encoded form of the Intent"
  },
  "JSONPathAssetGroup": {
    "name": "JSONPathAssetGroup",
    "domain": "Common",
    "description": "Defines a group of assets (entities) to which access can be controlled, using a JSON Path JsonLdExpression. Any entities matching the JSON Path JsonLdExpression are implicitly included in the group. The embedded example implies all TroubleTickets with status Pending"
  },
  "JSONPathQueryJsonLdExpression": {
    "name": "JSONPathQueryJsonLdExpression",
    "domain": "Common",
    "description": "JSONPath query JsonLdExpressions (draft-ietf-jsonpath-base-02)"
  },
  "JudgeIntent": {
    "name": "JudgeIntent",
    "domain": "Common",
    "description": "An Judge Intent instance is the formal description of all expectations including requirements, goals, and constraints given to a technical system"
  },
  "License": {
    "name": "License",
    "domain": "Common"
  },
  "LineString": {
    "name": "LineString",
    "domain": "Common",
    "description": "GeoJSON: A collection of Points forming a connected line"
  },
  "ListAssetGroup": {
    "name": "ListAssetGroup",
    "domain": "Common",
    "description": "Defines a group of assets (entities) to which access can be controlled, using an explicit list of entity references"
  },
  "LocationCharacteristic": {
    "name": "LocationCharacteristic",
    "domain": "Common",
    "description": "Name/value pairs, used to extra characterized the Area (e.g. if a standard\ncode set has been defined for the GeographicArea type, etc.)"
  },
  "LocationCommons": {
    "name": "LocationCommons",
    "domain": "Common"
  },
  "ManagedArtifact": {
    "name": "ManagedArtifact",
    "domain": "Common",
    "description": "General information about a managed artifact"
  },
  "ManagedArtifactStateType": {
    "name": "ManagedArtifactStateType",
    "domain": "Common",
    "description": "Possible values for the state of a managed artifact: 'incomplete', 'beta', 'stable', 'deprecated'"
  },
  "ManagedEntity": {
    "name": "ManagedEntity",
    "domain": "Common",
    "description": "ManagedEntity represents an entity that describes the common set of attributes shared by all concrete entities (e.g. Resource, Service, ..) in the Entity Inventory. A ManagedEntity may concern a simple concept, such as a logical point of communication, or a complex concept, such as an Application or System "
  },
  "ManagementDomain": {
    "name": "ManagementDomain",
    "domain": "Common"
  },
  "ManagementInfo": {
    "name": "ManagementInfo",
    "domain": "Common",
    "description": "This is an abstract base class that is used to represent entities that represent management information obtained in a managed environment."
  },
  "ManagementInfoDetail": {
    "name": "ManagementInfoDetail",
    "domain": "Common"
  },
  "ManagementInfoDetailHTTP": {
    "name": "ManagementInfoDetailHTTP",
    "domain": "Common"
  },
  "ManagementInfoDetailNETCONF": {
    "name": "ManagementInfoDetailNETCONF",
    "domain": "Common"
  },
  "ManagementInfoDetailSNMP": {
    "name": "ManagementInfoDetailSNMP",
    "domain": "Common"
  },
  "ManagementJob": {
    "name": "ManagementJob",
    "domain": "Common",
    "description": ""
  },
  "ManagementMethod": {
    "name": "ManagementMethod",
    "domain": "Common",
    "description": "Describes a method for managing an object"
  },
  "ManagementMethodHTTP": {
    "name": "ManagementMethodHTTP",
    "domain": "Common",
    "description": "Describes an HTTP method for managing an object"
  },
  "ManagementMethodNETCONF": {
    "name": "ManagementMethodNETCONF",
    "domain": "Common",
    "description": "Describes a NETCONF method for managing an object"
  },
  "ManagementMethodSNMP": {
    "name": "ManagementMethodSNMP",
    "domain": "Common",
    "description": "Describes an SNMP method for managing an object"
  },
  "MapArrayCharacteristic": {
    "name": "MapArrayCharacteristic",
    "domain": "Common",
    "description": "A characteristic which value is a string"
  },
  "MapArrayCharacteristicValueSpecification": {
    "name": "MapArrayCharacteristicValueSpecification",
    "domain": "Common",
    "description": "A specification for a characteristic for which the value is an array of mapped objects"
  },
  "MapCharacteristic": {
    "name": "MapCharacteristic",
    "domain": "Common",
    "description": "A characteristic which value is a mapped object"
  },
  "MapCharacteristicValueSpecification": {
    "name": "MapCharacteristicValueSpecification",
    "domain": "Common",
    "description": "A specification for a characteristic for which the value is a mapped object"
  },
  "Measurement": {
    "name": "Measurement",
    "domain": "Common",
    "description": "A counter/KPI to be used by the threshold rule"
  },
  "MeasurementCollectionJob": {
    "name": "MeasurementCollectionJob",
    "domain": "Common",
    "description": "Used to control the periodic collection of performance indicators, implemented as a sub-entity of the PM Measurement Job."
  },
  "MeasurementCollectionJobRef": {
    "name": "MeasurementCollectionJobRef",
    "domain": "Common"
  },
  "MeasurementJob": {
    "name": "MeasurementJob",
    "domain": "Common",
    "description": "A PM measurement job is the administrative entity defined by a client application to perform a periodic activity related to PM data.  The PM activities may be production of measurements, collection of measurements or PM objective monitoring (scheduled evaluation of thresholds)."
  },
  "MeasurementProductionJob": {
    "name": "MeasurementProductionJob",
    "domain": "Common",
    "description": "Used to control the periodic collection of performance indicators, implemented as a sub-entity of the PM Measurement Job."
  },
  "MeasurementProductionJobAVCN": {
    "name": "MeasurementProductionJobAVCN",
    "domain": "Common",
    "description": "This is a notification generated from the entity MeasurementProductionJob"
  },
  "MediumCharacteristic": {
    "name": "MediumCharacteristic",
    "domain": "Common",
    "description": "Describes the contact medium characteristics that could be used to contact a party (an individual or an organization)"
  },
  "MEntity": {
    "name": "MEntity",
    "domain": "Common",
    "description": "MEntity represents an entity that describes the common set of attributes shared by all concrete entities (e.g. Resource, Service, ..) in the Entity Inventory."
  },
  "MergeTopologyGraphJob": {
    "name": "MergeTopologyGraphJob",
    "domain": "Common",
    "description": "Merges two or more Graphs into a single graph."
  },
  "Milestone": {
    "name": "Milestone",
    "domain": "Common",
    "description": "Milestone represents an action or event marking a significant change or stage in a process like an order process."
  },
  "Money": {
    "name": "Money",
    "domain": "Common",
    "description": "A base / value business entity used to represent money"
  },
  "Monitor": {
    "name": "Monitor",
    "domain": "Common",
    "description": "Monitoring of resources"
  },
  "MonitoredClassCriteria": {
    "name": "MonitoredClassCriteria",
    "domain": "Common",
    "description": "Specifies a monitored object class (a string) in conjunction with a filter object."
  },
  "MonitoredInstancesCriteria": {
    "name": "MonitoredInstancesCriteria",
    "domain": "Common",
    "description": "List of monitored instances"
  },
  "MonitoredObjectsCriteria": {
    "name": "MonitoredObjectsCriteria",
    "domain": "Common",
    "description": "Monitored objects are specified by the MonitoredObjectsCriteria."
  },
  "MonthlyScheduleDayOfWeekDefinition": {
    "name": "MonthlyScheduleDayOfWeekDefinition",
    "domain": "Common"
  },
  "MultiLineString": {
    "name": "MultiLineString",
    "domain": "Common",
    "description": "A collection of distinct LineStrings"
  },
  "Multilingual": {
    "name": "Multilingual",
    "domain": "Common",
    "description": "Serialization format for multilingual text"
  },
  "MultilingualConverter": {
    "name": "MultilingualConverter",
    "domain": "Common",
    "description": "REST resource for multilingual conversion from the base language"
  },
  "MultiPoint": {
    "name": "MultiPoint",
    "domain": "Common",
    "description": "A collection of Points"
  },
  "MutlilingualEntry": {
    "name": "MutlilingualEntry",
    "domain": "Common"
  },
  "NetworkFunction": {
    "name": "NetworkFunction",
    "domain": "Common"
  },
  "NonFunctionalTestExecution": {
    "name": "NonFunctionalTestExecution",
    "domain": "Common",
    "description": "REST resource for the non-functional test execution lifecycle"
  },
  "NonFunctionalTestExecutionRef": {
    "name": "NonFunctionalTestExecutionRef",
    "domain": "Common",
    "description": "A reference to a non-funcitonal test execution"
  },
  "NonFunctionalTestExecutionRefOrValue": {
    "name": "NonFunctionalTestExecutionRefOrValue",
    "domain": "Common"
  },
  "NonFunctionalTestModel": {
    "name": "NonFunctionalTestModel",
    "domain": "Common",
    "description": "A managed non-functional test model resource"
  },
  "NonFunctionalTestModelDefinition": {
    "name": "NonFunctionalTestModelDefinition",
    "domain": "Common",
    "description": "Non-functional test model definition"
  },
  "NonFunctionalTestModelRef": {
    "name": "NonFunctionalTestModelRef",
    "domain": "Common",
    "description": "A reference to a managed non-functional test model resource"
  },
  "NonFunctionalTestResult": {
    "name": "NonFunctionalTestResult",
    "domain": "Common",
    "description": "A managed non-functional test result resource"
  },
  "NonFunctionalTestResultDefinition": {
    "name": "NonFunctionalTestResultDefinition",
    "domain": "Common",
    "description": "Non-functional test result definition"
  },
  "Note": {
    "name": "Note",
    "domain": "Common",
    "description": "Extra information about a given entity"
  },
  "Notification": {
    "name": "Notification",
    "domain": "Common",
    "description": "The notification is sent to each listener who has subscribed to receive it."
  },
  "NumberArrayCharacteristic": {
    "name": "NumberArrayCharacteristic",
    "domain": "Common",
    "description": "A characteristic which the value is a number array"
  },
  "NumberArrayCharacteristicValueSpecification": {
    "name": "NumberArrayCharacteristicValueSpecification",
    "domain": "Common",
    "description": "A specification for a characteristic for which the value is a number array with no specific format "
  },
  "NumberCharacteristic": {
    "name": "NumberCharacteristic",
    "domain": "Common",
    "description": "A characteristic which value is a number"
  },
  "NumberCharacteristicValueSpecification": {
    "name": "NumberCharacteristicValueSpecification",
    "domain": "Common",
    "description": "A specification for a characteristic for which the value is a number of no specific format"
  },
  "Object": {
    "name": "Object",
    "domain": "Common"
  },
  "ObjectArrayCharacteristic": {
    "name": "ObjectArrayCharacteristic",
    "domain": "Common",
    "description": "A characteristic which the value is a object array"
  },
  "ObjectArrayCharacteristicValueSpecification": {
    "name": "ObjectArrayCharacteristicValueSpecification",
    "domain": "Common",
    "description": "A specification for a characteristic for which the value is an array of objects"
  },
  "ObjectCharacteristic": {
    "name": "ObjectCharacteristic",
    "domain": "Common",
    "description": "A characteristic which value is an object"
  },
  "ObjectCharacteristicValueSpecification": {
    "name": "ObjectCharacteristicValueSpecification",
    "domain": "Common",
    "description": "A specification for a characteristic for which the value is any object"
  },
  "ObjectName": {
    "name": "ObjectName",
    "domain": "Common"
  },
  "OnDemandCollection": {
    "name": "OnDemandCollection",
    "domain": "Common",
    "description": ""
  },
  "OrderItemRef": {
    "name": "OrderItemRef",
    "domain": "Common",
    "description": "ProductOrder (ProductOrder) .The product order which the recommendation is related with."
  },
  "OrderRef": {
    "name": "OrderRef",
    "domain": "Common",
    "description": "ProductOrder (ProductOrder) .The product order which the recommendation is related with."
  },
  "PackingEnumType": {
    "name": "PackingEnumType",
    "domain": "Common",
    "description": "Enumeration of supported packing/packaging. All extensions allowed."
  },
  "PackingType": {
    "name": "PackingType",
    "domain": "Common",
    "description": "Specify if the output file(s) are to be packed."
  },
  "PerceivedSeverity": {
    "name": "PerceivedSeverity",
    "domain": "Common",
    "description": "Lists the possible severities that can be allocated to an Alarm. The values are consistent with ITU-T Recommendation X.733.\nOnce an alarm has been cleared, its perceived severity is set to 'cleared' and can no longer be set."
  },
  "PerformanceAlarmSpecification": {
    "name": "PerformanceAlarmSpecification",
    "domain": "Common",
    "description": "The specification of how to populate the alarm fields when generating a threshold crossing alarm"
  },
  "PerformanceConsequence": {
    "name": "PerformanceConsequence",
    "domain": "Common",
    "description": "A Consequence can be applied as a result of a threshold crossing or a threshold ceasing to be crossed"
  },
  "PerformanceIndicatorGroupSpecification": {
    "name": "PerformanceIndicatorGroupSpecification",
    "domain": "Common",
    "description": ""
  },
  "PerformanceIndicatorSpecification": {
    "name": "PerformanceIndicatorSpecification",
    "domain": "Common",
    "description": "Holds the definition of the requested Performance indicator including: its name, value type, collection type, description and units."
  },
  "PerformanceIndicatorSpecificationRef": {
    "name": "PerformanceIndicatorSpecificationRef",
    "domain": "Common",
    "description": "PerformanceIndicatorSpecification reference: A PerformanceIndicatorSpecification is a detailed description of a tangible or intangible object made available externally in the form of a PerformanceIndicatorSpecification to customers or other parties playing a party role."
  },
  "PerformanceIndicatorSpecificationRefOrValue": {
    "name": "PerformanceIndicatorSpecificationRefOrValue",
    "domain": "Common",
    "description": "A PerformanceIndicatorSpecification to be created defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation & @referredType are related to the product entity and not the Related PerformanceIndicatorSpecificationRefOrValue class itself"
  },
  "PerformanceIndicatorSpecRelationship": {
    "name": "PerformanceIndicatorSpecRelationship",
    "domain": "Common",
    "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
  },
  "PerformanceMeasurement": {
    "name": "PerformanceMeasurement",
    "domain": "Common",
    "description": "A measurement of a performance indicator."
  },
  "Permission": {
    "name": "Permission",
    "domain": "Common",
    "description": "The Permission resource represents the entitlement given by an individual (granter) to another individual (user) to get access to a set of his owned manageable assets. One single permission resource can hold information referring to privileges granted for multiple manageable assets."
  },
  "PhoneMedium": {
    "name": "PhoneMedium",
    "domain": "Common",
    "description": "Describes a phone number that could be used to contact a party (an individual or an organization)"
  },
  "Place": {
    "name": "Place",
    "domain": "Common",
    "description": "Place reference. Place defines the places where the products are sold or delivered."
  },
  "PlaceRef": {
    "name": "PlaceRef",
    "domain": "Common",
    "description": "Place reference. PlaceRef defines the placeRefs where the products are sold or delivered."
  },
  "PlaceRefOrValue": {
    "name": "PlaceRefOrValue",
    "domain": "Common",
    "description": "A place defines a place described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the place entity and not the RelatedPlaceRefOrValue class itself"
  },
  "Point": {
    "name": "Point",
    "domain": "Common",
    "description": "GeoJSON: A single position"
  },
  "Policy": {
    "name": "Policy",
    "domain": "Common",
    "description": "A generic Policy"
  },
  "PolicyRef": {
    "name": "PolicyRef",
    "domain": "Common",
    "description": "Reference to a Policy"
  },
  "PolicyRefOrValue": {
    "name": "PolicyRefOrValue",
    "domain": "Common",
    "description": "A reference or value of the Policy Entity"
  },
  "PolicySpecificationRef": {
    "name": "PolicySpecificationRef",
    "domain": "Common",
    "description": "reference to an PolicySpecification object"
  },
  "Polygon": {
    "name": "Polygon",
    "domain": "Common",
    "description": "An array of linear rings"
  },
  "Preference": {
    "name": "Preference",
    "domain": "Common",
    "description": ""
  },
  "PriorityType": {
    "name": "PriorityType",
    "domain": "Common",
    "description": "Possible values for the Priority of an Incident"
  },
  "Privilege": {
    "name": "Privilege",
    "domain": "Common",
    "description": "A Privilege is a detailed information concerning an individual access entitlement."
  },
  "ProbeIntent": {
    "name": "ProbeIntent",
    "domain": "Common",
    "description": "An Probe Intent instance is the formal description of all expectations including requirements, goals, and constraints given to a technical system"
  },
  "ProcessFlow": {
    "name": "ProcessFlow",
    "domain": "Common"
  },
  "ProcessFlowRef": {
    "name": "ProcessFlowRef",
    "domain": "Common",
    "description": "Process Flow ref class is used to provide process main information from Task sub resource."
  },
  "ProcessFlowSpecification": {
    "name": "ProcessFlowSpecification",
    "domain": "Common",
    "description": "ProcessFlowSpecification is a class that allow to describe a processFlow design. A ProcessFlow instance as used in TMF701 will use a ProcessFlowSpecification as reference."
  },
  "ProcessFlowSpecificationRef": {
    "name": "ProcessFlowSpecificationRef",
    "domain": "Common",
    "description": "A reference to a ProcessFlowSpecification defined design-time"
  },
  "ProcessFlowSpecificationRelationship": {
    "name": "ProcessFlowSpecificationRelationship",
    "domain": "Common",
    "description": "A relationship (triggers, delegates, etc...) between/among ProcessFlow specifications."
  },
  "ProcessFlowStateType": {
    "name": "ProcessFlowStateType",
    "domain": "Common",
    "description": "Valid values for the lifecycle state of the processFlow"
  },
  "Proposal": {
    "name": "Proposal",
    "domain": "Common",
    "description": ""
  },
  "ProtocolTransferData": {
    "name": "ProtocolTransferData",
    "domain": "Common"
  },
  "ProvisioningArtifact": {
    "name": "ProvisioningArtifact",
    "domain": "Common",
    "description": "A managed provisioning artifact resource"
  },
  "ProvisioningArtifactDefinition": {
    "name": "ProvisioningArtifactDefinition",
    "domain": "Common",
    "description": "Provisioning artifact definition"
  },
  "ProvisioningArtifactRef": {
    "name": "ProvisioningArtifactRef",
    "domain": "Common",
    "description": "A reference to a managed provisioning artifact resource"
  },
  "Push": {
    "name": "Push",
    "domain": "Common"
  },
  "QualificationRef": {
    "name": "QualificationRef",
    "domain": "Common",
    "description": "It could be a serviceQualification or a productOfferingQualification that has been executed previously and captured in the productOrder to provide eligibility information"
  },
  "Quantity": {
    "name": "Quantity",
    "domain": "Common",
    "description": "An amount in a given unit"
  },
  "QuantityType": {
    "name": "QuantityType",
    "domain": "Common",
    "description": "Representation of a quantity of something. I can also be used to represent a quantity range"
  },
  "QueryTask": {
    "name": "QueryTask",
    "domain": "Common",
    "description": "A task being executed in response of a query request."
  },
  "RdxmlExpression": {
    "name": "RdxmlExpression",
    "domain": "Common",
    "description": "RdxmlExpression is the ontology-encoded form of the Intent as RDF-XML"
  },
  "Receiver": {
    "name": "Receiver",
    "domain": "Common",
    "description": "Receivers of the communication message."
  },
  "ReceiverRef": {
    "name": "ReceiverRef",
    "domain": "Common",
    "description": "Receiver reference. The receiver is the party role who will receive the settlement note."
  },
  "Record": {
    "name": "Record",
    "domain": "Common",
    "description": "A record in a worklog."
  },
  "RelatedChangeRequestRef": {
    "name": "RelatedChangeRequestRef",
    "domain": "Common",
    "description": "An existing Change Request that has some form of correlation with the given Change Request."
  },
  "RelatedChannel": {
    "name": "RelatedChannel",
    "domain": "Common",
    "description": "Related channel to another entity. May be online web, mobile app, social ,etc."
  },
  "RelatedEntity": {
    "name": "RelatedEntity",
    "domain": "Common",
    "description": "A reference to an entity, where the type of the entity is not known in advance."
  },
  "RelatedEntityRef": {
    "name": "RelatedEntityRef",
    "domain": "Common",
    "description": "A reference to an entity, where the type of the entity is not known in advance."
  },
  "RelatedEntityRefOrValue": {
    "name": "RelatedEntityRefOrValue",
    "domain": "Common",
    "description": "A reference to an entity, where the type of the entity is not known in advance. A related entity defines a entity described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Entity and not the RelatedEntityRefOrValue class itself"
  },
  "RelatedEntitySpecification": {
    "name": "RelatedEntitySpecification",
    "domain": "Common",
    "description": "A reference to an entity specification, where the type of the entity specification is not known in advance."
  },
  "RelatedExpectationRefOrValue": {
    "name": "RelatedExpectationRefOrValue",
    "domain": "Common",
    "description": "A reference to an expectation by value if it is doesn't exist yet or by reference if it already exists"
  },
  "RelatedGeographicAddressRefOrValue": {
    "name": "RelatedGeographicAddressRefOrValue",
    "domain": "Common",
    "description": "#TODO"
  },
  "RelatedGeographicLocationRefOrValue": {
    "name": "RelatedGeographicLocationRefOrValue",
    "domain": "Common",
    "description": "#TODO"
  },
  "RelatedObject": {
    "name": "RelatedObject",
    "domain": "Common",
    "description": "Defines objects linked with trouble ticket."
  },
  "RelatedPlace": {
    "name": "RelatedPlace",
    "domain": "Common",
    "description": "A  Place and an associated role as installation adress, delivery address, etc...."
  },
  "RelatedPlaceRefOrValue": {
    "name": "RelatedPlaceRefOrValue",
    "domain": "Common",
    "description": "Related Entity reference. A related place defines a place described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the place entity and not the RelatedPlaceRefOrValue class itself"
  },
  "ReportIncident": {
    "name": "ReportIncident",
    "domain": "Common",
    "description": "An Incident is a record of an event that has altered the operational state of a entity (Resource, Service or Customers Product)"
  },
  "ReportingPeriod": {
    "name": "ReportingPeriod",
    "domain": "Common",
    "description": "Possible values for the reporting period"
  },
  "Request": {
    "name": "Request",
    "domain": "Common",
    "description": "A response to a request"
  },
  "Reservation": {
    "name": "Reservation",
    "domain": "Common",
    "description": "reservation api resource"
  },
  "ReservationItem": {
    "name": "ReservationItem",
    "domain": "Common",
    "description": "An identified part of the reservation. A reservation is decomposed into one or more reservation items."
  },
  "ReservationItemActionType": {
    "name": "ReservationItemActionType",
    "domain": "Common",
    "description": "action to be performed on the entity"
  },
  "ReservationItemStateType": {
    "name": "ReservationItemStateType",
    "domain": "Common"
  },
  "ReservationStateType": {
    "name": "ReservationStateType",
    "domain": "Common"
  },
  "Resolution": {
    "name": "Resolution",
    "domain": "Common",
    "description": "The way one or more change request has been implementation through a direct remedy or task"
  },
  "ResolveIncident": {
    "name": "ResolveIncident",
    "domain": "Common",
    "description": "An incident resolution is an action taken to resolve/repair the root cause of an incident or problem, or to implement a workaround"
  },
  "Response": {
    "name": "Response",
    "domain": "Common",
    "description": "A response to a request"
  },
  "ResponseError": {
    "name": "ResponseError",
    "domain": "Common",
    "description": "Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)"
  },
  "RetrieveGeographicLocation": {
    "name": "RetrieveGeographicLocation",
    "domain": "Common"
  },
  "RetrieveLocationRelation": {
    "name": "RetrieveLocationRelation",
    "domain": "Common"
  },
  "RootCause": {
    "name": "RootCause",
    "domain": "Common",
    "description": "The name of RootCause, for example:Power Down"
  },
  "ScheduleDefinition": {
    "name": "ScheduleDefinition",
    "domain": "Common",
    "description": "The schedule definition for running jobs."
  },
  "Sender": {
    "name": "Sender",
    "domain": "Common",
    "description": "Sender of the communication message."
  },
  "SetAssetGroup": {
    "name": "SetAssetGroup",
    "domain": "Common",
    "description": "Defines a group of assets (entities) to which access can be controlled, using a predefined name that implies a list of entity types"
  },
  "ShipmentTrackingRef": {
    "name": "ShipmentTrackingRef",
    "domain": "Common",
    "description": "ShipmentTracking reference"
  },
  "SimpleThresholdRule": {
    "name": "SimpleThresholdRule",
    "domain": "Common",
    "description": "A threshold rule that is based on explicit definition of attributes that represent a Boolean JsonLdExpression"
  },
  "SiteRelationship": {
    "name": "SiteRelationship",
    "domain": "Common"
  },
  "SpecCharacteristic": {
    "name": "SpecCharacteristic",
    "domain": "Common",
    "description": "A characteristic quality or distinctive feature of a Specification.  The characteristic can be take on a discrete value, such as color, can take on a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain characteristics, such as color, may be configured during the ordering or some other process."
  },
  "SpecCharacteristicValue": {
    "name": "SpecCharacteristicValue",
    "domain": "Common",
    "description": "A number or text that can be assigned to a SpecCharacteristic"
  },
  "SpecCharRelationship": {
    "name": "SpecCharRelationship",
    "domain": "Common",
    "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among productSpecCharacteristics."
  },
  "SpecificationCharacteristic": {
    "name": "SpecificationCharacteristic",
    "domain": "Common",
    "description": "A characteristic quality or distinctive feature of a Specification.  The characteristic can be take on a discrete value, such as color, can take on a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain characteristics, such as color, may be configured during the ordering or some other process."
  },
  "SpecificationCharacteristicRelationship": {
    "name": "SpecificationCharacteristicRelationship",
    "domain": "Common",
    "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among productSpecCharacteristics."
  },
  "SpecificationCharacteristicValue": {
    "name": "SpecificationCharacteristicValue",
    "domain": "Common",
    "description": "A number or text that can be assigned to a SpecificationCharacteristic"
  },
  "StatusChange": {
    "name": "StatusChange",
    "domain": "Common",
    "description": "Holds the status notification reasons and associated date the status changed, populated by the server"
  },
  "Stream": {
    "name": "Stream",
    "domain": "Common",
    "description": ""
  },
  "Street": {
    "name": "Street",
    "domain": "Common",
    "description": "A street is a road in a city or locality that has buildings that are usually close together along one or both sides"
  },
  "StreetSegment": {
    "name": "StreetSegment",
    "domain": "Common",
    "description": "StreetSegment corresponds to a part of a street referenced by a number or a set of number. Sometimes a suffix is added."
  },
  "StringArrayCharacteristic": {
    "name": "StringArrayCharacteristic",
    "domain": "Common",
    "description": "A characteristic which the value is a string array"
  },
  "StringArrayCharacteristicValueSpecification": {
    "name": "StringArrayCharacteristicValueSpecification",
    "domain": "Common",
    "description": "A specification for a characteristic for which the value is an array of strings"
  },
  "StringCharacteristic": {
    "name": "StringCharacteristic",
    "domain": "Common",
    "description": "A characteristic which value is a string"
  },
  "StringCharacteristicValueSpecification": {
    "name": "StringCharacteristicValueSpecification",
    "domain": "Common",
    "description": "A specification for a characteristic for which the value is a string"
  },
  "SubAddress": {
    "name": "SubAddress",
    "domain": "Common",
    "description": "Representation of a SubAddress \nIt is used for addressing within a property in an urban area (country properties are often defined differently). It may refer to a building, a building cluster, or a floor of a multistory building."
  },
  "SubObjList": {
    "name": "SubObjList",
    "domain": "Common",
    "description": "The name of SubObjList"
  },
  "SupportedLanguages": {
    "name": "SupportedLanguages",
    "domain": "Common",
    "description": "Enumeration for the supported languages in JADL multilingual support"
  },
  "TargetEntityRef": {
    "name": "TargetEntityRef",
    "domain": "Common",
    "description": "The entity which will be changed or configured while the change request is executed."
  },
  "TargetEntitySchema": {
    "name": "TargetEntitySchema",
    "domain": "Common",
    "description": "The reference object to the schema and type of target entity which is described by a specification"
  },
  "TargetPerformanceIndicatorSpecificationSchema": {
    "name": "TargetPerformanceIndicatorSpecificationSchema",
    "domain": "Common",
    "description": "The reference object to the schema and type of target performance indicator specification which is described by performance indicator specification"
  },
  "Task": {
    "name": "Task",
    "domain": "Common",
    "description": "A step or task along in the process of implementation a Change Request."
  },
  "TaskFlow": {
    "name": "TaskFlow",
    "domain": "Common"
  },
  "TaskFlowRef": {
    "name": "TaskFlowRef",
    "domain": "Common"
  },
  "TaskFlowRelationship": {
    "name": "TaskFlowRelationship",
    "domain": "Common",
    "description": "Describes relationship between taskFlow"
  },
  "TaskFlowSpecification": {
    "name": "TaskFlowSpecification",
    "domain": "Common",
    "description": "TaskFlowSpecification is a class that allow to describe a TaskFlow specification design. A TaskFlow instance as used in TMF701 will use a TaskFlowSpecification as reference."
  },
  "TaskFlowSpecificationRef": {
    "name": "TaskFlowSpecificationRef",
    "domain": "Common",
    "description": "A reference to a TaskFlowSpecification defined design-time"
  },
  "TaskFlowSpecificationRelationship": {
    "name": "TaskFlowSpecificationRelationship",
    "domain": "Common",
    "description": "A relationship between TaskFlow specifications."
  },
  "TaskFlowStateType": {
    "name": "TaskFlowStateType",
    "domain": "Common",
    "description": "Valid values for the lifecycle state of the taskFlow"
  },
  "TaskStateType": {
    "name": "TaskStateType",
    "domain": "Common",
    "description": "Possible values for the state of a task"
  },
  "TaxDefinition": {
    "name": "TaxDefinition",
    "domain": "Common",
    "description": "Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. There are many different types of tax (Federal Tax levied by the US Government, State Tax levied by the State of California,\u00e2\u20ac\u00a6)."
  },
  "Template": {
    "name": "Template",
    "domain": "Common"
  },
  "TestAgreement": {
    "name": "TestAgreement",
    "domain": "Common"
  },
  "TestCase": {
    "name": "TestCase",
    "domain": "Common",
    "description": "A managed test case resource"
  },
  "TestCaseDefinition": {
    "name": "TestCaseDefinition",
    "domain": "Common",
    "description": "Test case definition"
  },
  "TestCaseExecution": {
    "name": "TestCaseExecution",
    "domain": "Common",
    "description": "REST resource for the test case execution lifecycle"
  },
  "TestCaseExecutionRef": {
    "name": "TestCaseExecutionRef",
    "domain": "Common",
    "description": "A reference to a test case execution"
  },
  "TestCaseExecutionRefOrValue": {
    "name": "TestCaseExecutionRefOrValue",
    "domain": "Common"
  },
  "TestCaseRef": {
    "name": "TestCaseRef",
    "domain": "Common",
    "description": "A reference to a managed test case artifact"
  },
  "TestCaseResult": {
    "name": "TestCaseResult",
    "domain": "Common",
    "description": "A managed test case result resource"
  },
  "TestCaseResultDefinition": {
    "name": "TestCaseResultDefinition",
    "domain": "Common",
    "description": "Test case result definition"
  },
  "TestContact": {
    "name": "TestContact",
    "domain": "Common"
  },
  "TestDataInstance": {
    "name": "TestDataInstance",
    "domain": "Common",
    "description": "A managed test data instance resource"
  },
  "TestDataInstanceDefinition": {
    "name": "TestDataInstanceDefinition",
    "domain": "Common",
    "description": "Test data instance definition"
  },
  "TestDataInstanceRef": {
    "name": "TestDataInstanceRef",
    "domain": "Common",
    "description": "A reference to a managed test data instance resource"
  },
  "TestDataSchema": {
    "name": "TestDataSchema",
    "domain": "Common",
    "description": "A managed test data schema resource"
  },
  "TestDataSchemaDefinition": {
    "name": "TestDataSchemaDefinition",
    "domain": "Common",
    "description": "Test data schema definition"
  },
  "TestDataSchemaRef": {
    "name": "TestDataSchemaRef",
    "domain": "Common",
    "description": "A reference to a managed test data schema resource"
  },
  "TestEnvironmentAllocationExecution": {
    "name": "TestEnvironmentAllocationExecution",
    "domain": "Common",
    "description": "REST resource for test environment allocation lifecycle"
  },
  "TestEnvironmentProvisioningExecution": {
    "name": "TestEnvironmentProvisioningExecution",
    "domain": "Common",
    "description": "REST resource for test environment provisioning lifecycle"
  },
  "TestExecution": {
    "name": "TestExecution",
    "domain": "Common",
    "description": "The base for all Test Execution resources"
  },
  "TestExecutionRef": {
    "name": "TestExecutionRef",
    "domain": "Common",
    "description": "A reference to an execution of a test activity"
  },
  "TestInfo": {
    "name": "TestInfo",
    "domain": "Common",
    "description": "General information about the artifact"
  },
  "TestResourceAPI": {
    "name": "TestResourceAPI",
    "domain": "Common",
    "description": "A managed test resource API resource"
  },
  "TestResourceAPIDefinition": {
    "name": "TestResourceAPIDefinition",
    "domain": "Common",
    "description": "Test resource API definition"
  },
  "TestResourceAPIRef": {
    "name": "TestResourceAPIRef",
    "domain": "Common",
    "description": "A reference to a managed test resource API resource"
  },
  "TestResult": {
    "name": "TestResult",
    "domain": "Common",
    "description": "Base schema for test results"
  },
  "TestScenario": {
    "name": "TestScenario",
    "domain": "Common",
    "description": "A managed test scenario resource"
  },
  "TestScenarioDefinition": {
    "name": "TestScenarioDefinition",
    "domain": "Common",
    "description": "Test scenario definition"
  },
  "TestScenarioRef": {
    "name": "TestScenarioRef",
    "domain": "Common",
    "description": "A reference to a managed test scenario resource"
  },
  "TestSuite": {
    "name": "TestSuite",
    "domain": "Common",
    "description": "A managed test suite resource"
  },
  "TestSuiteDefinition": {
    "name": "TestSuiteDefinition",
    "domain": "Common",
    "description": "Test suite definition"
  },
  "TestSuiteExecution": {
    "name": "TestSuiteExecution",
    "domain": "Common",
    "description": "REST resource for the test suite execution lifecycle"
  },
  "TestSuiteExecutionRef": {
    "name": "TestSuiteExecutionRef",
    "domain": "Common",
    "description": "A reference to a test suite execution"
  },
  "TestSuiteExecutionRefOrValue": {
    "name": "TestSuiteExecutionRefOrValue",
    "domain": "Common"
  },
  "TestSuiteRef": {
    "name": "TestSuiteRef",
    "domain": "Common",
    "description": "A reference to a managed test suite resource"
  },
  "TestSuiteResult": {
    "name": "TestSuiteResult",
    "domain": "Common",
    "description": "A managed test case result resource"
  },
  "TestSuiteResultDefinition": {
    "name": "TestSuiteResultDefinition",
    "domain": "Common",
    "description": "Test suite result definition"
  },
  "TestVersion": {
    "name": "TestVersion",
    "domain": "Common"
  },
  "Threshold": {
    "name": "Threshold",
    "domain": "Common",
    "description": "A threshold base entity containing threshold rules."
  },
  "ThresholdCondition": {
    "name": "ThresholdCondition",
    "domain": "Common"
  },
  "ThresholdJob": {
    "name": "ThresholdJob",
    "domain": "Common"
  },
  "ThresholdRule": {
    "name": "ThresholdRule",
    "domain": "Common",
    "description": "ThresholdRule A base entity for concrete definition of thresholds.This datatype  is  abstract"
  },
  "ThresholdType": {
    "name": "ThresholdType",
    "domain": "Common",
    "description": "The Threshold Type may be either LogicDefinition or PreDefined"
  },
  "Ticket": {
    "name": "Ticket",
    "domain": "Common",
    "description": "A trouble ticket represents a record used for reporting and managing the resolution of resource problems"
  },
  "TicketRelationship": {
    "name": "TicketRelationship",
    "domain": "Common",
    "description": "Represents a relationship between trouble tickets"
  },
  "TimePeriod": {
    "name": "TimePeriod",
    "domain": "Common",
    "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both"
  },
  "Topic": {
    "name": "Topic",
    "domain": "Common",
    "description": "Is a event channel provided by the Event Streaming API"
  },
  "TopologyDiscoveryJob": {
    "name": "TopologyDiscoveryJob",
    "domain": "Common",
    "description": "Represents a task used to discover topology from providers"
  },
  "TopologyQueryJob": {
    "name": "TopologyQueryJob",
    "domain": "Common",
    "description": "Represents a task used to query topology in the service"
  },
  "TroubleTicket": {
    "name": "TroubleTicket",
    "domain": "Common",
    "description": "A trouble ticket is a record of an issue that is created, tracked, and managed by a trouble ticket management system"
  },
  "TroubleTicketRef": {
    "name": "TroubleTicketRef",
    "domain": "Common",
    "description": "TroubleTicket reference, for when a Trouble Ticket is used by other entities"
  },
  "TroubleTicketRelationship": {
    "name": "TroubleTicketRelationship",
    "domain": "Common",
    "description": "Represents a relationship between trouble Trouble Tickets"
  },
  "TroubleTicketStatusType": {
    "name": "TroubleTicketStatusType",
    "domain": "Common",
    "description": "Possible values for the status of the trouble ticket"
  },
  "TurtleExpression": {
    "name": "TurtleExpression",
    "domain": "Common",
    "description": "TurtleExpression is the ontology-encoded form of the Intent as Turtle RDF"
  },
  "UrgencyType": {
    "name": "UrgencyType",
    "domain": "Common",
    "description": "Possible values for the urgency of an Incident"
  },
  "User": {
    "name": "User",
    "domain": "Common",
    "description": "Generic User structure used to define commonalities between sub concepts of PartyUser and Financial User."
  },
  "UserAsset": {
    "name": "UserAsset",
    "domain": "Common"
  },
  "Userinfo": {
    "name": "Userinfo",
    "domain": "Common",
    "description": "TBD need to add description to entity"
  },
  "UserinfoRef": {
    "name": "UserinfoRef",
    "domain": "Common",
    "description": "TBD need to add description to entity"
  },
  "UserRole": {
    "name": "UserRole",
    "domain": "Common",
    "description": "A UserRole defines access levels to operate over a given function that can be included in an asset."
  },
  "UserRoleRef": {
    "name": "UserRoleRef",
    "domain": "Common",
    "description": "A UserRoleRef is a detailed information concerning an individual access entitlement."
  },
  "ValidFor": {
    "name": "ValidFor",
    "domain": "Common"
  },
  "Value": {
    "name": "Value",
    "domain": "Common"
  },
  "Vertex": {
    "name": "Vertex",
    "domain": "Common",
    "description": "A Vertex is connected by directed Edges to other vertices in a Graph."
  },
  "VertexCollectionRef": {
    "name": "VertexCollectionRef",
    "domain": "Common",
    "description": "Graph vertex collection reference"
  },
  "VertexRef": {
    "name": "VertexRef",
    "domain": "Common"
  },
  "VertexSpecification": {
    "name": "VertexSpecification",
    "domain": "Common",
    "description": "A Vertex is connected by directed Edges to other vertices in a Graph.\nA VertexSpecification is a base class that represents a generic means for implementing a particular type of Vertex. In essence, a VertexSpecification defines the common attributes and relationships of a set of related Vertices, while Vertex defines a specific instance that is based on a particular VertexSpecification."
  },
  "VertexSpecificationCharacteristic": {
    "name": "VertexSpecificationCharacteristic",
    "domain": "Common",
    "description": "This class defines the characteristic features of a vertex specification. Every VertexSpecification has a variety of important attributes, methods, constraints, and relationships, which distinguish a vertex specification from other vertex specifications."
  },
  "VertexSpecificationCharacteristicRelationship": {
    "name": "VertexSpecificationCharacteristicRelationship",
    "domain": "Common",
    "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among VertexSpecificationCharacteristics. The specification characteristic is embedded within the specification whose ID and href are in this entity, and identified by its ID."
  },
  "VertexSpecificationRef": {
    "name": "VertexSpecificationRef",
    "domain": "Common",
    "description": "A Vertex is connected by directed Edges to other vertices in a Graph.\nA VertexSpecification is a base class that represents a generic means for implementing a particular type of Vertex. In essence, a VertexSpecification defines the common attributes and relationships of a set of related Vertices, while Vertex defines a specific instance that is based on a particular VertexSpecification."
  },
  "VodafoneTraining": {
    "name": "VodafoneTraining",
    "domain": "Common",
    "description": "Main Mock Schema"
  },
  "WorkLog": {
    "name": "WorkLog",
    "domain": "Common",
    "description": "A record of the work performed on the change request during the investigation and resolution process."
  },
  "AccountPaymentMethod": {
    "name": "AccountPaymentMethod",
    "domain": "Customer",
    "description": "Reference an internal account that could be billed directly to perform the payment."
  },
  "AccumulatedBalance": {
    "name": "AccumulatedBalance",
    "domain": "Customer",
    "description": "Represents and tracks the aggregated amount remained or owed in certain account which is owned by certain customer for a set of buckets."
  },
  "ActionStatusType": {
    "name": "ActionStatusType",
    "domain": "Customer",
    "description": "Valid values for the Action Status Type"
  },
  "AdjustBalance": {
    "name": "AdjustBalance",
    "domain": "Customer",
    "description": "The AdjustBalance resource allows adjustments to be made to the original BalanceTopup e.g. increment the amount, alter the recharge periodicity. Alternatively, an adjustment can be made to an outstanding reservation request, in which case the reservedValue of the bucket will be adjusted, not the remaining value"
  },
  "AppliedBillingRate": {
    "name": "AppliedBillingRate",
    "domain": "Customer",
    "description": "An applied billing rate presented on a bill. It is created before or during the billing process"
  },
  "AppliedBillingRateCharacteristic": {
    "name": "AppliedBillingRateCharacteristic",
    "domain": "Customer",
    "description": "An applied billing rate has dynamic characteristics according to the its type (characteristics are based on the service type, line of business or on others parameters)"
  },
  "AppliedBillingTaxRate": {
    "name": "AppliedBillingTaxRate",
    "domain": "Customer",
    "description": "The applied billing tax rate represents taxes applied billing rate it refers to. It is calculated during the billing process."
  },
  "AppliedCustomerBillingRate": {
    "name": "AppliedCustomerBillingRate",
    "domain": "Customer",
    "description": "A customer bill displays applied billing rates created before or during the billing process."
  },
  "AppliedPartyBillingRate": {
    "name": "AppliedPartyBillingRate",
    "domain": "Customer",
    "description": "An applied billing rate presented on a party bill. It is created before or during the billing process."
  },
  "AppliedPayment": {
    "name": "AppliedPayment",
    "domain": "Customer",
    "description": "The applied payment is the result of lettering process. It enables to assign automatically or manually part of incoming payment amount to a bill."
  },
  "Appointment": {
    "name": "Appointment",
    "domain": "Customer",
    "description": "An Appointment is an arrangement to do something or meet someone at a particular time, at a place (for face to face appointment) or in a contact medium (for phone appointment)."
  },
  "AppointmentRef": {
    "name": "AppointmentRef",
    "domain": "Customer",
    "description": "Refers an appointment, such as a Customer presentation or internal meeting or site visit"
  },
  "AppointmentStateType": {
    "name": "AppointmentStateType",
    "domain": "Customer",
    "description": "Valid values for the lifecycle state of the appointment"
  },
  "AppointmentStateValues": {
    "name": "AppointmentStateValues",
    "domain": "Customer",
    "description": ""
  },
  "Authorization": {
    "name": "Authorization",
    "domain": "Customer",
    "description": "If special discount or special product offering price or specific condition need an approval for ISP sale representative it is described here."
  },
  "AuthorizePayment": {
    "name": "AuthorizePayment",
    "domain": "Customer",
    "description": "Task resource for operation authorize payment"
  },
  "AuthorizePaymentRef": {
    "name": "AuthorizePaymentRef",
    "domain": "Customer",
    "description": "Operation to payment authorization, prior to payment capture."
  },
  "BalanceAction": {
    "name": "BalanceAction",
    "domain": "Customer",
    "description": "an abstract resource. example extensions are TopupBalance, AdjustBalance"
  },
  "BalanceActionRef": {
    "name": "BalanceActionRef",
    "domain": "Customer",
    "description": "link to the resource that holds balance-related request information"
  },
  "BalanceAdjustment": {
    "name": "BalanceAdjustment",
    "domain": "Customer",
    "description": "#TODO"
  },
  "BalanceDeduct": {
    "name": "BalanceDeduct",
    "domain": "Customer",
    "description": "The Balance Deduct task resource is a detailed description of deduction operation. If balanceReserve Resource ID is contained in the deduct request message, the reserved balance will be performed deduct operation (if part of the reserved balance is deducted, the remain amount will be released); if balanceReserve Resource ID is not contained in the deduct request message, the balance will be deducted directly."
  },
  "BalanceDeductRef": {
    "name": "BalanceDeductRef",
    "domain": "Customer",
    "description": "the resource that deduct balance information"
  },
  "BalanceDeductRollback": {
    "name": "BalanceDeductRollback",
    "domain": "Customer",
    "description": "The Rollback Balance Deduct task resource is a detailed description of rollback deduction"
  },
  "BalanceReserve": {
    "name": "BalanceReserve",
    "domain": "Customer",
    "description": "The Balance Reserve Operation resource is a detailed description of a balance reserve operation requested over a subscription"
  },
  "BalanceReserveRef": {
    "name": "BalanceReserveRef",
    "domain": "Customer",
    "description": "the resource that holds reserved balance information"
  },
  "BalanceTransfer": {
    "name": "BalanceTransfer",
    "domain": "Customer"
  },
  "BalanceUnreserve": {
    "name": "BalanceUnreserve",
    "domain": "Customer",
    "description": "The Balance Unreserve Operation resource is a detailed description of a balance unreserve operation requested over a subscription"
  },
  "BankAccountDebit": {
    "name": "BankAccountDebit",
    "domain": "Customer",
    "description": "A bank account debit method of payment. This could be extended to add any required authorization fields to allow recurring payments"
  },
  "BankAccountTransfer": {
    "name": "BankAccountTransfer",
    "domain": "Customer",
    "description": "A bank transfer method of payment."
  },
  "BankCard": {
    "name": "BankCard",
    "domain": "Customer",
    "description": "A bank card method of payment."
  },
  "BankCardDetails": {
    "name": "BankCardDetails",
    "domain": "Customer",
    "description": "Detailed information for a bank card"
  },
  "BankCardMethod": {
    "name": "BankCardMethod",
    "domain": "Customer"
  },
  "Bill": {
    "name": "Bill",
    "domain": "Customer",
    "description": "The Bill entity is used to model a bill (aka an invoice). It represents a total amount due for all products during the billing period and all significant date."
  },
  "BillCycle": {
    "name": "BillCycle",
    "domain": "Customer",
    "description": "A detailed description of a billing cycle and the various sub steps of a billing cycle."
  },
  "BillCycleRef": {
    "name": "BillCycleRef",
    "domain": "Customer",
    "description": "...."
  },
  "BillCycleSpec": {
    "name": "BillCycleSpec",
    "domain": "Customer",
    "description": "A detailed description of a billing cycle and the various sub steps of a billing cycle."
  },
  "BillCycleSpecification": {
    "name": "BillCycleSpecification",
    "domain": "Customer",
    "description": "A detailed description of a billing cycle and the various sub steps of a billing cycle."
  },
  "BillCycleSpecificationRef": {
    "name": "BillCycleSpecificationRef",
    "domain": "Customer",
    "description": "...."
  },
  "BillCycleSpecRef": {
    "name": "BillCycleSpecRef",
    "domain": "Customer",
    "description": "...."
  },
  "BillFormat": {
    "name": "BillFormat",
    "domain": "Customer",
    "description": "A detailed description of the way in which a bill is presented."
  },
  "BillFormatRef": {
    "name": "BillFormatRef",
    "domain": "Customer",
    "description": "BillFormat reference. A bill format is a description of the way in which a bill is presented."
  },
  "BillFormatRefOrValue": {
    "name": "BillFormatRefOrValue",
    "domain": "Customer",
    "description": "An attachment by value or by reference."
  },
  "BillingAccount": {
    "name": "BillingAccount",
    "domain": "Customer",
    "description": "A party account used for billing purposes. It includes a description of the bill structure (frequency, presentation media, format and so on). It is a specialization of entity PartyAccount."
  },
  "BillingAccountRef": {
    "name": "BillingAccountRef",
    "domain": "Customer",
    "description": "BillingAccount reference. A BillingAccount is a detailed description of a bill structure."
  },
  "BillingCycleSpecification": {
    "name": "BillingCycleSpecification",
    "domain": "Customer",
    "description": "A detailed description of when to initiate a billing cycle and the various sub steps of a billing cycle."
  },
  "BillingCycleSpecificationRef": {
    "name": "BillingCycleSpecificationRef",
    "domain": "Customer",
    "description": "BillingCycleSpecification reference. A description of when to initiate a billing cycle and the various sub steps of a billing cycle."
  },
  "BillingCycleSpecificationRefOrValue": {
    "name": "BillingCycleSpecificationRefOrValue",
    "domain": "Customer",
    "description": "An attachment by value or by reference."
  },
  "BillPresentationMedia": {
    "name": "BillPresentationMedia",
    "domain": "Customer",
    "description": "A mean of communicating a bill, supported by the associated bill format. For example, post mail, email, web page."
  },
  "BillPresentationMediaRef": {
    "name": "BillPresentationMediaRef",
    "domain": "Customer",
    "description": "PresentationMedia reference. A mean of communicating a bill, supported by the associated bill format. For example, post mail, email, web page."
  },
  "BillPresentationMediaRefOrValue": {
    "name": "BillPresentationMediaRefOrValue",
    "domain": "Customer",
    "description": "An attachment by value or by reference."
  },
  "BillRef": {
    "name": "BillRef",
    "domain": "Customer",
    "description": "Bill reference."
  },
  "BillStructure": {
    "name": "BillStructure",
    "domain": "Customer",
    "description": "The structure of the bill for party accounts (billing or settlement)."
  },
  "Bucket": {
    "name": "Bucket",
    "domain": "Customer",
    "description": "A bucket (called UsageVolumProduct in the SID Model) represents and tracks a quantity of usage (remaining or consumed). It could be either a quantity or an amount in a currency. It can represent a fixed number of SMS,MMS, call minutes, quantity of data and so on"
  },
  "BucketBalanceRef": {
    "name": "BucketBalanceRef",
    "domain": "Customer",
    "description": "link to the resource that holds bucket balance information"
  },
  "BucketPaymentMethod": {
    "name": "BucketPaymentMethod",
    "domain": "Customer"
  },
  "BucketRef": {
    "name": "BucketRef",
    "domain": "Customer",
    "description": "link to the resource that holds bucket information"
  },
  "BucketRefOrValue": {
    "name": "BucketRefOrValue",
    "domain": "Customer",
    "description": "A bucket (called UsageVolumProduct in the SID Model) represents and tracks a quantity of usage (remaining or consumed). It could be either a quantity or an amount in a currency. It can represent a fixed number of SMS,MMS, call minutes, quantity of data and so on"
  },
  "BucketRelationship": {
    "name": "BucketRelationship",
    "domain": "Customer",
    "description": "Linked bucket to the one instantiate, such as [isAggregated] if the bucket is a part of other or [aggregator] is the bucket holds others "
  },
  "BucketStatusExampleType": {
    "name": "BucketStatusExampleType",
    "domain": "Customer",
    "description": "Possible values for the bucket status are (for example active,suspended,expired)"
  },
  "CartItem": {
    "name": "CartItem",
    "domain": "Customer",
    "description": "An identified part of the shopping cart. A shopping cart  is decomposed into one or more shopping cart item. Cart item represents a product offering or bundled product offering that user wish to purchase, as well as the pricing of the product offering, reference to product in case of configured characteristic or installation address. Cart items can be related to other cart item to related bundled offerings or reference cart Items to a shipping options"
  },
  "CartItemActionType": {
    "name": "CartItemActionType",
    "domain": "Customer",
    "description": "action to be performed on the product"
  },
  "CartItemRef": {
    "name": "CartItemRef",
    "domain": "Customer",
    "description": "CartIIem reference. A CartItem is an identified part of the shopping cart."
  },
  "CartItemRelationship": {
    "name": "CartItemRelationship",
    "domain": "Customer",
    "description": "Relationship among cart items mainly other than hierarchical relationships such as \"relyOn\", \"dependentOn\", \"shipping\" etc."
  },
  "CartItemStatusType": {
    "name": "CartItemStatusType",
    "domain": "Customer",
    "description": "Possible values for the status of the cart item"
  },
  "CartPrice": {
    "name": "CartPrice",
    "domain": "Customer",
    "description": "An amount, usually of money, that represents the actual price paid by the customer for this item. May represent the total price of the shopping cart or the total of the cart item depending on the relation"
  },
  "CartTerm": {
    "name": "CartTerm",
    "domain": "Customer"
  },
  "Cash": {
    "name": "Cash",
    "domain": "Customer",
    "description": "A cash method of payment. It has no additional data, but it could be extended to add information e.g.: the cashier who took the payment, the person who paid, etc"
  },
  "CashDetails": {
    "name": "CashDetails",
    "domain": "Customer",
    "description": "Cash has no additional data, but it could be extended to add information (e.g.: the cashier who took the payment, the person who paid, etc)"
  },
  "CashMethod": {
    "name": "CashMethod",
    "domain": "Customer"
  },
  "Check": {
    "name": "Check",
    "domain": "Customer",
    "description": "A check method of payment."
  },
  "CheckDetails": {
    "name": "CheckDetails",
    "domain": "Customer",
    "description": "Detailed information of a check"
  },
  "CheckMethod": {
    "name": "CheckMethod",
    "domain": "Customer"
  },
  "CloseCustomerProblemSummary": {
    "name": "CloseCustomerProblemSummary",
    "domain": "Customer",
    "description": "Records the closure activity of a CustomerProblem. There may be more than one CloseCustomerProblemSummary per CustomerProblem because CustomerProblems can be reopened, or a temporary solution may be replaced by a permanent one."
  },
  "CounterType": {
    "name": "CounterType",
    "domain": "Customer",
    "description": "Valid values for this type"
  },
  "CreditProfile": {
    "name": "CreditProfile",
    "domain": "Customer",
    "description": "Credit profile for the party (containing credit scoring, ...). By default only the current credit profile  is retrieved. It can be used as a list to give the party credit profiles history, the first one in the list will be the current one."
  },
  "Customer": {
    "name": "Customer",
    "domain": "Customer"
  },
  "Customer360": {
    "name": "Customer360",
    "domain": "Customer"
  },
  "CustomerBill": {
    "name": "CustomerBill",
    "domain": "Customer",
    "description": "The customer bill. Can be a regular recurring bill or an extra bill on demand by the customer or the csp."
  },
  "CustomerBillOnDemand": {
    "name": "CustomerBillOnDemand",
    "domain": "Customer",
    "description": "This resource is used to manage the creation request of a customer bill in real-time (on demand)."
  },
  "CustomerBillOnDemandStateType": {
    "name": "CustomerBillOnDemandStateType",
    "domain": "Customer",
    "description": "Recommended Enumeration Type (not formal forced in standard): Valid values for 'CustomerBillOnDemand': 'inProgress', 'rejected', 'done', 'terminatedWithError'"
  },
  "CustomerBillRef": {
    "name": "CustomerBillRef",
    "domain": "Customer",
    "description": "Bill reference."
  },
  "CustomerBillRunType": {
    "name": "CustomerBillRunType",
    "domain": "Customer",
    "description": "Recommended Enumeration Type (not formal forced in standard): Valid values for the runType of a bill. The bill could be produced in a regular bill cycle 'onCycle'. Otherwise the bill is produced on a request (e.g. customer request). This could be indicated by 'offCycle'"
  },
  "CustomerBillStateType": {
    "name": "CustomerBillStateType",
    "domain": "Customer",
    "description": "Recommended Enumeration Type (not formal forced in standard): Valid values for the lifecycle state of the bill: new = 'bill is ready to validate or to sent', validated = 'bill is checked (manual / automatic)', sent = 'bill is sent with the channel defined in the billingaccount', settled = 'bill is payed', partiallySettled = 'bill is partially payed', onHold = 'bill will not be in further processing until open issues connected to the bill are solved'"
  },
  "CustomerProblem": {
    "name": "CustomerProblem",
    "domain": "Customer",
    "description": "Represents a problem which affects the Customer experience. CustomerProblem can be raised by the Customer (a complaint) or by the CSP (typically through some analytics system)"
  },
  "CustomerProblemManagement": {
    "name": "CustomerProblemManagement",
    "domain": "Customer"
  },
  "CustomerProblemTask": {
    "name": "CustomerProblemTask",
    "domain": "Customer",
    "description": "A trackable task delegated from the CustomerProblem with a specified due date"
  },
  "CustomerProblemWorkaround": {
    "name": "CustomerProblemWorkaround",
    "domain": "Customer",
    "description": "A resolution (sometimes temporary) for a KnownProblemDescription"
  },
  "DigitalWallet": {
    "name": "DigitalWallet",
    "domain": "Customer",
    "description": "A digital wallet method of payment."
  },
  "DigitalWalletDetails": {
    "name": "DigitalWalletDetails",
    "domain": "Customer",
    "description": "Detailed information of a check"
  },
  "DigitalWalletMethod": {
    "name": "DigitalWalletMethod",
    "domain": "Customer"
  },
  "DirectDebit": {
    "name": "DirectDebit",
    "domain": "Customer",
    "description": "Direct Debit is a fully automated payment instrument which is generally used for recurrent payments. It allows a creditor to initiate the payment order. In doing so, it exempts the debtor from having to send a separate payment order at each due date"
  },
  "Disability": {
    "name": "Disability",
    "domain": "Customer",
    "description": "Lack or inadequate strength or ability."
  },
  "DunningCase": {
    "name": "DunningCase",
    "domain": "Customer",
    "description": "The DunningCase represents a type of cases open for a customer. Whenever a customer enters the dunning process, a dunning case is linked to his customer account debt and it contains all details pertaining to the debt, such as dunning case rules, interactions\u00e2\u20ac\u00a6 The status of a dunning case evolves according to internal or external events (payments made by the customer, payment schedule granted\u00e2\u20ac\u00a6)"
  },
  "DunningCaseRule": {
    "name": "DunningCaseRule",
    "domain": "Customer",
    "description": "The Dunning Case Rule represents an action performed by the company (or on its behalf) to recover a debt"
  },
  "DunningRule": {
    "name": "DunningRule",
    "domain": "Customer",
    "description": "Represents rules to apply to create a dunning case: the events that trigger dunning rules evaluation, the conditions to evaluate and the actions that must be done"
  },
  "DunningRuleRef": {
    "name": "DunningRuleRef",
    "domain": "Customer",
    "description": "Dunning rule reference."
  },
  "DunningScenario": {
    "name": "DunningScenario",
    "domain": "Customer",
    "description": "A dunning scenario describes a company\u00e2\u20ac\u2122s dunning strategy. It must be easily configurable to describe the dunning rules to apply to a case, the order in which applying them, the events that trigger dunning rules evaluation and the actions that must be done"
  },
  "DunningScenarioRef": {
    "name": "DunningScenarioRef",
    "domain": "Customer",
    "description": "A dunning scenario reference"
  },
  "DunningWriteOff": {
    "name": "DunningWriteOff",
    "domain": "Customer",
    "description": "The DunningWriteOff corresponds, in a dunning context, to a credit to definitively balance the CustomerAccount before being able to close it"
  },
  "ImpactedBucket": {
    "name": "ImpactedBucket",
    "domain": "Customer",
    "description": "A resource that references other buckets that have been impacted by the action of type TopupBalance,AdjustBalance,TransferBalance or ReserveBalance"
  },
  "ImpactedBucketItem": {
    "name": "ImpactedBucketItem",
    "domain": "Customer",
    "description": "a resource used by the ImpactedBucket resource to capture the impact of a ImpactedBucket"
  },
  "InitiatePayment": {
    "name": "InitiatePayment",
    "domain": "Customer",
    "description": "Task resource for operation initiate payment"
  },
  "KnownProblemDescription": {
    "name": "KnownProblemDescription",
    "domain": "Customer",
    "description": "A description of a known problem, optionally with some known workarounds. It may be shared by multiple CustomerProblems."
  },
  "LoyaltyPaymentMethod": {
    "name": "LoyaltyPaymentMethod",
    "domain": "Customer",
    "description": "Reference to an account in a loyalty system that could be used to perform the payment."
  },
  "OrderItem": {
    "name": "OrderItem",
    "domain": "Customer",
    "description": "An identified part of the order. A product order is decomposed into one or more order items."
  },
  "OrderItemActionType": {
    "name": "OrderItemActionType",
    "domain": "Customer",
    "description": "action to be performed on the product"
  },
  "OrderItemPrice": {
    "name": "OrderItemPrice",
    "domain": "Customer",
    "description": "An amount, usually of money, that represents the actual price paid by the Customer for this item or this order"
  },
  "OrderItemRelationship": {
    "name": "OrderItemRelationship",
    "domain": "Customer"
  },
  "OrderPrice": {
    "name": "OrderPrice",
    "domain": "Customer",
    "description": "An amount, usually of money, that represents the actual price paid by the Customer for this item or this order"
  },
  "OrderRelationship": {
    "name": "OrderRelationship",
    "domain": "Customer"
  },
  "OrderTerm": {
    "name": "OrderTerm",
    "domain": "Customer",
    "description": "Description of a productTerm linked to this orderItem. This represent a commitment with a duration"
  },
  "PartnerBillRunType": {
    "name": "PartnerBillRunType",
    "domain": "Customer",
    "description": "Recommended Enumeration Type (not formal forced in standard): Valid values for the runType of a bill. The bill could be produced in a regular bill cycle 'onCycle'. Otherwise the bill is produced on a request (e.g. Partner request). This could be indicated by 'offCycle'"
  },
  "PartnerBillStateType": {
    "name": "PartnerBillStateType",
    "domain": "Customer",
    "description": "Recommended Enumeration Type (not formal forced in standard): Valid values for the lifecycle state of the bill: new = 'bill is ready to validate or to sent', validated = 'bill is checked (manual / automatic)', sent = 'bill is sent with the channel defined in the billingaccount', settled = 'bill is payed', partiallySettled = 'bill is partially payed', onHold = 'bill will not be in further processing until open issues connected to the bill are solved'"
  },
  "PartyRoleProductOfferingRiskAssessment": {
    "name": "PartyRoleProductOfferingRiskAssessment",
    "domain": "Customer",
    "description": "This is a task resource allowing assessment of the risks associated with a party or party role that considers acquiring a specific product offering"
  },
  "PartyRoleRiskAssessment": {
    "name": "PartyRoleRiskAssessment",
    "domain": "Customer",
    "description": "This is a task resource allowing assessment of the risks associated with a party role"
  },
  "Payment": {
    "name": "Payment",
    "domain": "Customer",
    "description": "The Payment resource represents a performed payment. It contains both information about the payment and the payment method used to perform it."
  },
  "PaymentItem": {
    "name": "PaymentItem",
    "domain": "Customer",
    "description": "The paymentItem is the result of lettering process. It enables to assign automatically or manually part of incoming payment amount to a bill"
  },
  "PaymentMethod": {
    "name": "PaymentMethod",
    "domain": "Customer",
    "description": "A Payment Method is a pure-virtual super-class that defines a specific method of payment such as Direct Debit, Cash, Digital Wallet,Tokenized Card, Bank Account Transfer, Bank Account Debit, Bank Card, Voucher, Check, Bucket PaymentMethod, Account PaymentMethod, and Loyalty PaymentMethod with all details associated. Use the @type attribute to specify the concrete type in the API calls."
  },
  "PaymentMethodRef": {
    "name": "PaymentMethodRef",
    "domain": "Customer",
    "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit)."
  },
  "PaymentMethodRefOrValue": {
    "name": "PaymentMethodRefOrValue",
    "domain": "Customer",
    "description": "link to the resource that holds information about the payment mean used to complete the operation"
  },
  "PaymentPlan": {
    "name": "PaymentPlan",
    "domain": "Customer",
    "description": "Defines a plan for payment (when a party wants to spread his payments)"
  },
  "PaymentRef": {
    "name": "PaymentRef",
    "domain": "Customer",
    "description": "If an immediate payment has been done at the product order submission, the payment information are captured and stored (as a reference) in the order."
  },
  "PaymentRefOrValue": {
    "name": "PaymentRefOrValue",
    "domain": "Customer",
    "description": "link to the resource information about the payment operation"
  },
  "PaymentStatusExampleType": {
    "name": "PaymentStatusExampleType",
    "domain": "Customer",
    "description": "Possible values for the status of a payment"
  },
  "PointOfInteraction": {
    "name": "PointOfInteraction",
    "domain": "Customer",
    "description": "POI consists of hardware and software which enables a Cardholder and/or an Acceptor to perform a Local Card transaction. This is also referred to as a Physical/EMV Terminal. It may be Attended or Unattended."
  },
  "Price": {
    "name": "Price",
    "domain": "Customer",
    "description": "Provides all amounts (tax included, duty free, tax rate), used currency and percentage to apply for Price Alteration."
  },
  "PriceType": {
    "name": "PriceType",
    "domain": "Customer",
    "description": "Describes the type of price (ex: oneTime, recurring, etc)"
  },
  "ProductOfferingRiskAssessment": {
    "name": "ProductOfferingRiskAssessment",
    "domain": "Customer",
    "description": "This is a task resource allowing assessment of the risks associated with a product offering. For example, the risk associated with iPhone X will probably be higher than the risk for a battery"
  },
  "ProductOrder": {
    "name": "ProductOrder",
    "domain": "Customer",
    "description": "A Product Order is a type of order which  can  be used to place an order between a customer and a service provider or between a service provider and a partner and vice versa,"
  },
  "ProductOrderItem": {
    "name": "ProductOrderItem",
    "domain": "Customer",
    "description": "An identified part of the order. A product order is decomposed into one or more order items."
  },
  "ProductOrderItemRef": {
    "name": "ProductOrderItemRef",
    "domain": "Customer",
    "description": "Reference to an order item that can typically be queried with another API."
  },
  "ProductOrderItemStateType": {
    "name": "ProductOrderItemStateType",
    "domain": "Customer",
    "description": "Possible values for the state of the product order item"
  },
  "ProductOrderRef": {
    "name": "ProductOrderRef",
    "domain": "Customer",
    "description": "ProductOrder (ProductOrder) .The product order which the recommendation is related with."
  },
  "ProductOrderRiskAssessment": {
    "name": "ProductOrderRiskAssessment",
    "domain": "Customer",
    "description": "This is a task resource allowing assessment of the risks associated with a product order - presumably submitted by a party role and containing one or more product offerings"
  },
  "ProductOrderStateType": {
    "name": "ProductOrderStateType",
    "domain": "Customer",
    "description": "Possible values for the state of the order"
  },
  "QueryProductRecommendation": {
    "name": "QueryProductRecommendation",
    "domain": "Customer",
    "description": "Recommendation API is used to recommend offering quickly based on the history and real-time context of customer. It is a real-time and personalized recommendation API. It is usually provided by e-commerce or BSS, CRM system in omni-channel."
  },
  "Quote": {
    "name": "Quote",
    "domain": "Customer",
    "description": "Quote can be used to negotiate service and product acquisition or modification between a customer and a service provider. Quote contain list of quote items, a reference to customer (partyRole), a list of productOffering and attached prices and conditions."
  },
  "QuoteItem": {
    "name": "QuoteItem",
    "domain": "Customer",
    "description": "A quote items describe an action to be performed on a productOffering or a product in order to get pricing elements and condition."
  },
  "QuoteItemRef": {
    "name": "QuoteItemRef",
    "domain": "Customer",
    "description": "It's a Quote item that has been executed previously."
  },
  "QuoteItemRelationship": {
    "name": "QuoteItemRelationship",
    "domain": "Customer",
    "description": "Used to describe relationship between quote item. These relationship could have an impact on pricing and conditions"
  },
  "QuotePrice": {
    "name": "QuotePrice",
    "domain": "Customer",
    "description": "Description of price and discount awarded"
  },
  "QuoteRef": {
    "name": "QuoteRef",
    "domain": "Customer",
    "description": "It's a Quote that has been executed previously"
  },
  "RecurringPeriodType": {
    "name": "RecurringPeriodType",
    "domain": "Customer",
    "description": "Valid values for this type"
  },
  "Refund": {
    "name": "Refund",
    "domain": "Customer",
    "description": "The Refund resource represents a performed Refund. It contains both information about the refund and the payment method used to perform it."
  },
  "RefundStatusExampleType": {
    "name": "RefundStatusExampleType",
    "domain": "Customer",
    "description": "Possible values for the status of a refund"
  },
  "RelatedTopupBalance": {
    "name": "RelatedTopupBalance",
    "domain": "Customer",
    "description": "Related Entity reference. A related balance topup defines a relationship via a role to another balance topup. Used in the PrepayBalanceManagement API to track child topups that are related to the parent (initiating balance topup resource). PrepayBalanceManagement defines the child role"
  },
  "ReserveBalance": {
    "name": "ReserveBalance",
    "domain": "Customer",
    "description": "The ReserveBalance resource allows adjustments to be made to the original BalanceTopup eg increment the amount, alter the recharge periodicity"
  },
  "ReserveBalanceRef": {
    "name": "ReserveBalanceRef",
    "domain": "Customer",
    "description": "The ReserveBalance resource allows adjustments to be made to the original BalanceTopup eg increment the amount, alter the recharge periodicity"
  },
  "RiskAssessment": {
    "name": "RiskAssessment",
    "domain": "Customer",
    "description": "This is a generalized task resource allowing assessment of risks - it is expected that the resource will be specialized to reflect specific risks, such as risks associated with a party, or with an order, etc."
  },
  "RiskAssessmentResult": {
    "name": "RiskAssessmentResult",
    "domain": "Customer",
    "description": "This resource reflects the risk assessment"
  },
  "RiskScore": {
    "name": "RiskScore",
    "domain": "Customer",
    "description": "This resource reflects a score for a specific risk"
  },
  "RiskType": {
    "name": "RiskType",
    "domain": "Customer",
    "description": "Types of risk that can be assessed"
  },
  "SearchTimeSlot": {
    "name": "SearchTimeSlot",
    "domain": "Customer",
    "description": "This task resource is used to retrieve available time slots. One of this available time slot is after used to create or reschedule an appointment"
  },
  "SearchTimeSlotStateType": {
    "name": "SearchTimeSlotStateType",
    "domain": "Customer",
    "description": "Valid values for the lifecycle state of the searchTimeSlot"
  },
  "SettlementMethod": {
    "name": "SettlementMethod",
    "domain": "Customer",
    "description": "Is the way in which the CSP provides the payment"
  },
  "SettlementNoteAdvice": {
    "name": "SettlementNoteAdvice",
    "domain": "Customer",
    "description": "The settlement is about transferring money receiving by a CSP to a partner. The settlement is notified to the partner with a settlement note advice containing details in settlement lines."
  },
  "SettlementNoteImage": {
    "name": "SettlementNoteImage",
    "domain": "Customer",
    "description": "Is the image of the settlement note"
  },
  "SettlementNoteItem": {
    "name": "SettlementNoteItem",
    "domain": "Customer",
    "description": "Concerns a product identified by its catalogue reference. It could also follow a period delimited by a start and an end date."
  },
  "ShoppingCart": {
    "name": "ShoppingCart",
    "domain": "Customer",
    "description": "Shopping Cart resource is used for the temporarily selection and reservation of product offerings in e-commerce, call center and retail purchase. Shopping cart supports purchase of both physical and digital goods and service (e.g. handset, telecom network service). Shopping Cart contain list of cart items, a reference to customer (partyRole) or contact medium in case customer not exist, and the total items price including promotions"
  },
  "ShoppingCartRef": {
    "name": "ShoppingCartRef",
    "domain": "Customer",
    "description": "ShoppingCart (ShoppingCartRef) . The shopping cart which the recommendation is related with."
  },
  "ShoppingCartRiskAssessment": {
    "name": "ShoppingCartRiskAssessment",
    "domain": "Customer",
    "description": "This is a task resource allowing assessment of the risks associated with a shopping cart - presumably created by a party role and containing one or more product offerings"
  },
  "TaxItem": {
    "name": "TaxItem",
    "domain": "Customer",
    "description": "A tax item is created for each tax rate and tax type used in the bill."
  },
  "TimeSlot": {
    "name": "TimeSlot",
    "domain": "Customer"
  },
  "TokenizedCard": {
    "name": "TokenizedCard",
    "domain": "Customer",
    "description": "A Tokenized Card method of payment."
  },
  "TokenizedCardDetails": {
    "name": "TokenizedCardDetails",
    "domain": "Customer",
    "description": "Detailed information for a stored tokenized card"
  },
  "TokenizedCardMethod": {
    "name": "TokenizedCardMethod",
    "domain": "Customer"
  },
  "TopupBalance": {
    "name": "TopupBalance",
    "domain": "Customer",
    "description": "Represents a detailed description of a recharge operation requested over a bucket (defined by a specific product or reference to a product (i.e.: a commercial id such as an msisidn) and a service type)"
  },
  "TransferBalance": {
    "name": "TransferBalance",
    "domain": "Customer"
  },
  "UsageType": {
    "name": "UsageType",
    "domain": "Customer",
    "description": "Valid values for the usage type are"
  },
  "Voucher": {
    "name": "Voucher",
    "domain": "Customer",
    "description": "A voucher method of payment."
  },
  "VoucherDetails": {
    "name": "VoucherDetails",
    "domain": "Customer",
    "description": "Detailed information of a voucher"
  },
  "VoucherMethod": {
    "name": "VoucherMethod",
    "domain": "Customer"
  },
  "Customer360AccountVO": {
    "name": "Customer360AccountVO",
    "domain": "Customer360",
    "description": "Generic Account structure used to define commonalities between sub concepts of PartyAccount and Financial Account."
  },
  "Customer360AgreementVO": {
    "name": "Customer360AgreementVO",
    "domain": "Customer360",
    "description": "An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications."
  },
  "Customer360AppointmentVO": {
    "name": "Customer360AppointmentVO",
    "domain": "Customer360",
    "description": "An Appointment is an arrangement to do something or meet someone at a particular time, at a place (for face to face appointment) or in a contact medium (for phone appointment)."
  },
  "Customer360CustomerBillVO": {
    "name": "Customer360CustomerBillVO",
    "domain": "Customer360",
    "description": "The customer bill. Can be a regular recurring bill or an extra bill on demand by the customer or the csp."
  },
  "Customer360CustomerVO": {
    "name": "Customer360CustomerVO",
    "domain": "Customer360"
  },
  "Customer360InteractionItemVO": {
    "name": "Customer360InteractionItemVO",
    "domain": "Customer360"
  },
  "Customer360LoyaltyBalanceVO": {
    "name": "Customer360LoyaltyBalanceVO",
    "domain": "Customer360",
    "description": "A loyalty balance, containing a balance unit and value."
  },
  "Customer360PartyInteractionVO": {
    "name": "Customer360PartyInteractionVO",
    "domain": "Customer360"
  },
  "Customer360ProductOrderVO": {
    "name": "Customer360ProductOrderVO",
    "domain": "Customer360",
    "description": "A Product Order is a type of order which  can  be used to place an order between a customer and a service provider or between a service provider and a partner and vice versa,"
  },
  "Customer360ProductValueVO": {
    "name": "Customer360ProductValueVO",
    "domain": "Customer360",
    "description": "A product offering procured by a customer or other interested party playing a party role. A product is realized as one or more service(s) and / or resource(s)."
  },
  "Customer360ProductVO": {
    "name": "Customer360ProductVO",
    "domain": "Customer360",
    "description": "A product offering procured by a customer or other interested party playing a party role. A product is realized as one or more service(s) and / or resource(s)."
  },
  "Customer360PromotionVO": {
    "name": "Customer360PromotionVO",
    "domain": "Customer360",
    "description": "Promotion Resource is used to provide the additional discount, voucher, bonus or gift to the customer who meets the pre-defined criteria. Using promotion, the enterprise is able to attract the users and encourage more consumption, especially continuous purchases.   Normally Promotion is not regarded as one type of product or product offering. It is often applied when the customer buys the product offerings with the price or amount surpassing the certain limit."
  },
  "Customer360QuoteVO": {
    "name": "Customer360QuoteVO",
    "domain": "Customer360",
    "description": "Quote can be used to negotiate service and product acquisition or modification between a customer and a service provider. Quote contain list of quote items, a reference to customer (partyRole), a list of productOffering and attached prices and conditions."
  },
  "Customer360RecommendationVO": {
    "name": "Customer360RecommendationVO",
    "domain": "Customer360",
    "description": "Recommendation API is used to recommend offering quickly based on the history and real-time context of customer. It is a real-time and personalized recommendation API. It is usually provided by e-commerce or BSS, CRM system in omni-channel."
  },
  "Customer360ServiceProblemVO": {
    "name": "Customer360ServiceProblemVO",
    "domain": "Customer360",
    "description": "The problem information for Middle B which is abstracted in the service layer from the issued event information by First B"
  },
  "Customer360TroubleTicketVO": {
    "name": "Customer360TroubleTicketVO",
    "domain": "Customer360",
    "description": "A trouble ticket is a record of an issue that is created, tracked, and managed by a trouble ticket management system"
  },
  "Customer360UsageSpecificationVO": {
    "name": "Customer360UsageSpecificationVO",
    "domain": "Customer360",
    "description": "A detailed description of a usage event that are of interest to the business and can have charges applied to it. It is comprised of characteristics, which define all attributes known for a particular type of usage."
  },
  "CompositeMetadataSpecification": {
    "name": "CompositeMetadataSpecification",
    "domain": "DataGovernance",
    "description": "A type of MetadataSpecification that belongs to a grouping of MetadataSpecifications. It inherits of all attributes of MetadataSpecification."
  },
  "DataPolicy": {
    "name": "DataPolicy",
    "domain": "DataGovernance",
    "description": "The description of the data policy."
  },
  "DataSharingAgreement": {
    "name": "DataSharingAgreement",
    "domain": "DataGovernance",
    "description": "An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications."
  },
  "DataSharingAgreementItem": {
    "name": "DataSharingAgreementItem",
    "domain": "DataGovernance",
    "description": "A part of the agreement expressed in terms of a product offering and possibly including specific terms and conditions."
  },
  "DataSharingAgreementRef": {
    "name": "DataSharingAgreementRef",
    "domain": "DataGovernance",
    "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications."
  },
  "DataSharingAgreementSpecification": {
    "name": "DataSharingAgreementSpecification",
    "domain": "DataGovernance",
    "description": "A template of an agreement that can be used when establishing partnerships"
  },
  "DataSharingAgreementSpecificationRef": {
    "name": "DataSharingAgreementSpecificationRef",
    "domain": "DataGovernance",
    "description": "Agreement specification reference. An AgreementSpecification represents a template of an agreement that can be used when establishing partnerships."
  },
  "Metadata": {
    "name": "Metadata",
    "domain": "DataGovernance",
    "description": "The unique identifier of the metadata asset."
  },
  "MetadataCatalog": {
    "name": "MetadataCatalog",
    "domain": "DataGovernance",
    "description": "Additional information to describe the catalog"
  },
  "MetadataCatalogItem": {
    "name": "MetadataCatalogItem",
    "domain": "DataGovernance",
    "description": "An MetadataCatalogItem is an entity that allows any metadata asset or even any object inheriting from RootEntity, to be available to a catalog. The MetadataSpecification and Policy of the catalog governs the content of the MetadataCatalogItem. This API addresses only MetadataSpecification items extended from RootEntity as MetadataCatalogItem.\nThe MetadataCatalogItem resource (JSON format) represents a set of characteristics that define the values given by the MetadataCatalogItem."
  },
  "MetadataCatalogItemRef": {
    "name": "MetadataCatalogItemRef",
    "domain": "DataGovernance",
    "description": "Reference to Metadata Category Item object."
  },
  "MetadataCategory": {
    "name": "MetadataCategory",
    "domain": "DataGovernance",
    "description": "The category resource is used to group metadata catalog items in logical containers. Categories can contain other categories.\nResource IDs for categories are strings and are defined by the catalog application."
  },
  "MetadataCategoryRef": {
    "name": "MetadataCategoryRef",
    "domain": "DataGovernance",
    "description": "Reference to Metadata Category object. The metadata category resource is used to group entity catalog items in logical containers. Categories can contain other categories.\nResource IDs for categories are strings and are defined by the catalog application."
  },
  "MetadataRef": {
    "name": "MetadataRef",
    "domain": "DataGovernance",
    "description": "reference to an Metadata object"
  },
  "MetadataRefOrValue": {
    "name": "MetadataRefOrValue",
    "domain": "DataGovernance",
    "description": "A Metadata asset to be created defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation & @referredType are related to the metadata entity and not the class itself"
  },
  "MetadataRelation": {
    "name": "MetadataRelation",
    "domain": "DataGovernance",
    "description": "MedataRelation is the class that describes a relationship between two or more metadata assets or metadata specifications based on a given relationship type. The role of each endpoint in the relationship is given by an association role. The type of endpoints in the relationship should match the ones as defined in the corresponding association role specification.\n A relationship between entity/ entity specifications may be governed by conditions and rules which are addressed by constraint references in this resource. Constraints for a relationship may include new rules and conditions in addition to those defined for the corresponding association specification"
  },
  "MetadataRelationship": {
    "name": "MetadataRelationship",
    "domain": "DataGovernance",
    "description": "A uni-directionmal relationship from this entity to a target metadata instance"
  },
  "MetadataRelationship_old": {
    "name": "MetadataRelationship_old",
    "domain": "DataGovernance"
  },
  "MetadataRelationSpecificationRef": {
    "name": "MetadataRelationSpecificationRef",
    "domain": "DataGovernance",
    "description": "reference to an MetadataRelationSpecification object"
  },
  "MetadataSpecification": {
    "name": "MetadataSpecification",
    "domain": "DataGovernance",
    "description": "MetadataSpecification is a class that describes the specification of a specific metadata asset"
  },
  "MetadataSpecificationCharacteristic": {
    "name": "MetadataSpecificationCharacteristic",
    "domain": "DataGovernance",
    "description": "A characteristic quality or distinctive feature of a MetadataSpecification."
  },
  "MetadataSpecificationCharacteristicRelationship": {
    "name": "MetadataSpecificationCharacteristicRelationship",
    "domain": "DataGovernance",
    "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among metadatatSpecificationCharacteristics."
  },
  "MetadataSpecificationRef": {
    "name": "MetadataSpecificationRef",
    "domain": "DataGovernance",
    "description": "reference to an MetadataSpecification object"
  },
  "MetadataSpecificationRelationship": {
    "name": "MetadataSpecificationRelationship",
    "domain": "DataGovernance",
    "description": "A migration, substitution, dependency or exclusivity relationship between/among metadata specifications."
  },
  "Account": {
    "name": "Account",
    "domain": "EngagedParty",
    "description": "Generic Account structure used to define commonalities between sub concepts of PartyAccount and Financial Account."
  },
  "AccountBalance": {
    "name": "AccountBalance",
    "domain": "EngagedParty",
    "description": "Balances linked to the account"
  },
  "AccountBalanceRef": {
    "name": "AccountBalanceRef",
    "domain": "EngagedParty",
    "description": "Balances linked to the account"
  },
  "AccountDirectDetails": {
    "name": "AccountDirectDetails",
    "domain": "EngagedParty"
  },
  "AccountDirectMethod": {
    "name": "AccountDirectMethod",
    "domain": "EngagedParty",
    "description": "A payment method using an internal account that could be billed directly to perform the payment"
  },
  "AccountRef": {
    "name": "AccountRef",
    "domain": "EngagedParty",
    "description": "Account reference. A account may be a party account or a financial account."
  },
  "AccountRelationship": {
    "name": "AccountRelationship",
    "domain": "EngagedParty",
    "description": "Significant connection between accounts. For instance an aggregating account for a list of shop branches each having its own billing account."
  },
  "Agreement": {
    "name": "Agreement",
    "domain": "EngagedParty",
    "description": "An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications."
  },
  "AgreementAttachment": {
    "name": "AgreementAttachment",
    "domain": "EngagedParty",
    "description": "Represents a complementary piece of information to describe the agreement. Could be a document, picture, a video or any kind of multimedia content."
  },
  "AgreementAuthorization": {
    "name": "AgreementAuthorization",
    "domain": "EngagedParty",
    "description": "A business participant that is responsible for approving the agreement."
  },
  "AgreementItem": {
    "name": "AgreementItem",
    "domain": "EngagedParty",
    "description": "A part of the agreement expressed in terms of a product offering and possibly including specific terms and conditions."
  },
  "AgreementItemRef": {
    "name": "AgreementItemRef",
    "domain": "EngagedParty",
    "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications."
  },
  "AgreementRef": {
    "name": "AgreementRef",
    "domain": "EngagedParty",
    "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications."
  },
  "AgreementRefOrValue": {
    "name": "AgreementRefOrValue",
    "domain": "EngagedParty",
    "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications."
  },
  "AgreementRelationship": {
    "name": "AgreementRelationship",
    "domain": "EngagedParty",
    "description": "A uni-directionmal relationship from this agreement to another agreement"
  },
  "AgreementSpecCharacteristic": {
    "name": "AgreementSpecCharacteristic",
    "domain": "EngagedParty",
    "description": "A characteristic quality or distinctive feature of an agreement."
  },
  "AgreementSpecCharacteristicValue": {
    "name": "AgreementSpecCharacteristicValue",
    "domain": "EngagedParty",
    "description": "A number or text that can be assigned to an agreement specification characteristic."
  },
  "AgreementSpecification": {
    "name": "AgreementSpecification",
    "domain": "EngagedParty",
    "description": "A template of an agreement that can be used when establishing partnerships"
  },
  "AgreementSpecificationRef": {
    "name": "AgreementSpecificationRef",
    "domain": "EngagedParty",
    "description": "Agreement specification reference. An AgreementSpecification represents a template of an agreement that can be used when establishing partnerships."
  },
  "AgreementSpecificationRelationship": {
    "name": "AgreementSpecificationRelationship",
    "domain": "EngagedParty",
    "description": "A relationship between agreement specifications. Typical relationships are substitution and dependency."
  },
  "AgreementTermOrCondition": {
    "name": "AgreementTermOrCondition",
    "domain": "EngagedParty",
    "description": "Aspects of the agreement not formally specified elsewhere in the agreement and that cannot be captured elsewhere in a formal notation, or automatically monitored and require a more human level of management."
  },
  "AiContract": {
    "name": "AiContract",
    "domain": "EngagedParty",
    "description": "An Ai Contract represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications."
  },
  "AiContractSpecification": {
    "name": "AiContractSpecification",
    "domain": "EngagedParty",
    "description": "A template of an agreement that can be used when establishing partnerships"
  },
  "AiContractViolation": {
    "name": "AiContractViolation",
    "domain": "EngagedParty"
  },
  "AlternateShipmentProposal": {
    "name": "AlternateShipmentProposal",
    "domain": "EngagedParty",
    "description": "Alternate shipment proposal is used when the requested shipment is not valid as specified in the request. An alternate proposal could be a distinct shipmentSpecification close to the requested one or the same specification as requested but with a different carrier or shipping options"
  },
  "AlternateWorkProposal": {
    "name": "AlternateWorkProposal",
    "domain": "EngagedParty",
    "description": "Alternate work proposal is used when the requested unit of work is not valid as specified in the request. An alternate proposal could be a distinct workSpecification close to the requested one or the same specification as requested but with a different parameters."
  },
  "BankAccount": {
    "name": "BankAccount",
    "domain": "EngagedParty",
    "description": "Describes the information of a bank account"
  },
  "BankAccountDebitDetails": {
    "name": "BankAccountDebitDetails",
    "domain": "EngagedParty",
    "description": "Detailed information for a bank account debit. Bear in mind that this could be extended to add any required authorization fields to allow recurring payments"
  },
  "BankAccountDebitMethod": {
    "name": "BankAccountDebitMethod",
    "domain": "EngagedParty"
  },
  "BankAccountTransferDetails": {
    "name": "BankAccountTransferDetails",
    "domain": "EngagedParty",
    "description": "Detailed information for a bank account debit. Bear in mind that this could be extended to add any required authorization fields to allow recurring payments"
  },
  "BankAccountTransferMethod": {
    "name": "BankAccountTransferMethod",
    "domain": "EngagedParty"
  },
  "BiometricCredential": {
    "name": "BiometricCredential",
    "domain": "EngagedParty",
    "description": "A Credential based on a login and a password."
  },
  "BusinessPartner": {
    "name": "BusinessPartner",
    "domain": "EngagedParty",
    "description": "When business partner is the BusinessPartner "
  },
  "CancelWorkOrder": {
    "name": "CancelWorkOrder",
    "domain": "EngagedParty"
  },
  "CheckShipmentQualification": {
    "name": "CheckShipmentQualification",
    "domain": "EngagedParty",
    "description": "CheckShipmentQualification is used to validate the eligibility of specific \r\nshipments."
  },
  "CheckShipmentQualificationItem": {
    "name": "CheckShipmentQualificationItem",
    "domain": "EngagedParty",
    "description": "A ShipmentQualificationItem relates to a specific shipment being checked in a qualification operation."
  },
  "CheckWorkQualification": {
    "name": "CheckWorkQualification",
    "domain": "EngagedParty",
    "description": "CheckWorkQualification is used to validate specific units of work"
  },
  "CheckWorkQualificationItem": {
    "name": "CheckWorkQualificationItem",
    "domain": "EngagedParty",
    "description": "A WorkQualificationItem relates to a specific unit of work being checked in a qualification operation."
  },
  "Contact": {
    "name": "Contact",
    "domain": "EngagedParty",
    "description": "An individual or an organization used as a contact point for a given account and accessed via some contact medium."
  },
  "Credential": {
    "name": "Credential",
    "domain": "EngagedParty",
    "description": "Credential is a class that allow to describe an authentification method."
  },
  "DigitalIdentity": {
    "name": "DigitalIdentity",
    "domain": "EngagedParty",
    "description": "DigitalIdentity is a class that allow to describe a digital identity for an individual or a resource or a specific party role. One of these three MUST be provided. If an individual is provided, this identity will be for all her/his partyRole. To avoid confusion it is recommended in this case to not provide partyRoleIdentified."
  },
  "FinancialAccount": {
    "name": "FinancialAccount",
    "domain": "EngagedParty",
    "description": "An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. A financial (account receivable account/account payable) aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party. It is a specialization of entity Account."
  },
  "FinancialAccountRef": {
    "name": "FinancialAccountRef",
    "domain": "EngagedParty",
    "description": "AccountReceivable reference. An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. An account receivable aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party."
  },
  "Individual": {
    "name": "Individual",
    "domain": "EngagedParty",
    "description": "Individual represents a single human being (a man, woman or child). The individual can be a customer, an employee or any other person that the organization needs to store information about."
  },
  "IndividualIdentification": {
    "name": "IndividualIdentification",
    "domain": "EngagedParty",
    "description": "Represents our registration of information used as proof of identity by an individual (passport, national identity card, drivers license, social security number, birth certificate)"
  },
  "IndividualStateType": {
    "name": "IndividualStateType",
    "domain": "EngagedParty",
    "description": "Valid values for the lifecycle state of the individual"
  },
  "InteractionItem": {
    "name": "InteractionItem",
    "domain": "EngagedParty"
  },
  "InteractionRelationship": {
    "name": "InteractionRelationship",
    "domain": "EngagedParty"
  },
  "IssuerRef": {
    "name": "IssuerRef",
    "domain": "EngagedParty",
    "description": "Issuer reference. The issuer is the party role who will issue the settlement note."
  },
  "LanguageAbility": {
    "name": "LanguageAbility",
    "domain": "EngagedParty"
  },
  "LoginPasswordCredential": {
    "name": "LoginPasswordCredential",
    "domain": "EngagedParty",
    "description": "A Credential based on a login and a password."
  },
  "LoyaltyProgramPartner": {
    "name": "LoyaltyProgramPartner",
    "domain": "EngagedParty",
    "description": "A partner engaged in the Loyalty Program"
  },
  "NetworkCredential": {
    "name": "NetworkCredential",
    "domain": "EngagedParty",
    "description": "A Credential based on a login and a password."
  },
  "Organization": {
    "name": "Organization",
    "domain": "EngagedParty",
    "description": "Organization represents a group of people identified by shared interests or purpose. Examples include business, department and enterprise. Because of the complex nature of many businesses, both organizations and organization units are represented by the same data."
  },
  "OrganizationChildRelationship": {
    "name": "OrganizationChildRelationship",
    "domain": "EngagedParty",
    "description": "Child references of an organization in a structure of organizations."
  },
  "OrganizationIdentification": {
    "name": "OrganizationIdentification",
    "domain": "EngagedParty",
    "description": "Represents our registration of information used as proof of identity by an organization"
  },
  "OrganizationParentRelationship": {
    "name": "OrganizationParentRelationship",
    "domain": "EngagedParty",
    "description": "Parent references of an organization in a structure of organizations."
  },
  "OrganizationRef": {
    "name": "OrganizationRef",
    "domain": "EngagedParty"
  },
  "OrganizationStateType": {
    "name": "OrganizationStateType",
    "domain": "EngagedParty",
    "description": "Valid values for the lifecycle state of the organization"
  },
  "OtherName": {
    "name": "OtherName",
    "domain": "EngagedParty",
    "description": "To keep track of other names (for example the old name of a woman before marriage or an artist name)"
  },
  "OtherNameIndividual": {
    "name": "OtherNameIndividual",
    "domain": "EngagedParty",
    "description": "Keeps track of other names, for example the old name of a woman before marriage or an artist name."
  },
  "OtherNameOrganization": {
    "name": "OtherNameOrganization",
    "domain": "EngagedParty",
    "description": "Keeps track of other names, for example the old name of an organization."
  },
  "Partner": {
    "name": "Partner",
    "domain": "EngagedParty",
    "description": "The part played by a party in a given context."
  },
  "Partner360": {
    "name": "Partner360",
    "domain": "EngagedParty"
  },
  "PartnerBill": {
    "name": "PartnerBill",
    "domain": "EngagedParty",
    "description": "The partner bill. Can be a regular recurring bill or an extra bill on demand by the Partner."
  },
  "PartnerBillingAccount": {
    "name": "PartnerBillingAccount",
    "domain": "EngagedParty",
    "description": "A party account used for billing purposes. It includes a description of the bill structure (frequency, presentation media, format and so on). It is a specialization of entity PartyAccount."
  },
  "PartnerBillingAccountRef": {
    "name": "PartnerBillingAccountRef",
    "domain": "EngagedParty",
    "description": "PartnerBillingAccount reference. A PartnerBillingAccount is a detailed description of a bill structure."
  },
  "Partnership": {
    "name": "Partnership",
    "domain": "EngagedParty",
    "description": "A partnership represents a formalized collaboration between various parties, each party playing a role in the partnership. The parties playing a role in the partnership represented by the Partner entity. The structure of a partnership is specified by a PartnershipSpecification which contain all the information for the setup of the partnership, including the list of identified roles and the agreement that should apply."
  },
  "PartnershipRef": {
    "name": "PartnershipRef",
    "domain": "EngagedParty",
    "description": "Partnership reference. A partnership contains all the information for the setup of a partnership of a given kind. This includes the list of identified role types for the partnership with the corresponding agreement specifications."
  },
  "PartnershipSpecification": {
    "name": "PartnershipSpecification",
    "domain": "EngagedParty",
    "description": "A partnership specification contains all the information for the setup of a partnership of a given kind. This includes the list of identified role types for the partnership with the corresponding agreement specifications."
  },
  "PartnershipSpecificationRef": {
    "name": "PartnershipSpecificationRef",
    "domain": "EngagedParty",
    "description": "PartnershipSpecification reference. A partnership specification contains all the information for the setup of a partnership of a given kind. This includes the list of identified role types for the partnership with the corresponding agreement specifications."
  },
  "PartnershipSpecificationRoleRef": {
    "name": "PartnershipSpecificationRoleRef",
    "domain": "EngagedParty"
  },
  "PartnershipType": {
    "name": "PartnershipType",
    "domain": "EngagedParty",
    "description": "A partnership type contains all the information for the setup of a partnership of a given kind. This includes the list of identified role types for the partnership with the corresponding agreement specifications."
  },
  "PartnershipTypeRef": {
    "name": "PartnershipTypeRef",
    "domain": "EngagedParty",
    "description": "PartnershipType reference. A partnership type contains all the information for the setup of a partnership of a given kind. This includes the list of identified role types for the partnership with the corresponding agreement specifications."
  },
  "Party": {
    "name": "Party",
    "domain": "EngagedParty",
    "description": "Generic Party structure used to define commonalities between sub concepts of Individual and Organization."
  },
  "PartyAccount": {
    "name": "PartyAccount",
    "domain": "EngagedParty",
    "description": "Account used for billing or for settlement purposes concerning a given party (an organization or an individual). It is a specialization of entity Account."
  },
  "PartyAccountRef": {
    "name": "PartyAccountRef",
    "domain": "EngagedParty",
    "description": "PartyAccount reference. A party account is an arrangement that a party has with an enterprise that provides products to the party."
  },
  "PartyBill": {
    "name": "PartyBill",
    "domain": "EngagedParty"
  },
  "PartyCreditProfile": {
    "name": "PartyCreditProfile",
    "domain": "EngagedParty",
    "description": "An individual might be evaluated for its worthiness and this evaluation might be based on a credit rating given by a credit agency."
  },
  "PartyInteraction": {
    "name": "PartyInteraction",
    "domain": "EngagedParty"
  },
  "PartyInteractionRef": {
    "name": "PartyInteractionRef",
    "domain": "EngagedParty"
  },
  "PartyInteractionStatusExampleType": {
    "name": "PartyInteractionStatusExampleType",
    "domain": "EngagedParty",
    "description": "Possible values for the status of party interaction (for example: open,inProgress,completed)"
  },
  "PartyOrPartyRoleRef": {
    "name": "PartyOrPartyRoleRef",
    "domain": "EngagedParty",
    "description": "Party reference. A party represents an organization or an individual."
  },
  "PartyPrivacyAgreement": {
    "name": "PartyPrivacyAgreement",
    "domain": "EngagedParty",
    "description": "A specific type of agreement that formalizes the privacy profiles requested for a party"
  },
  "PartyPrivacyAgreementRef": {
    "name": "PartyPrivacyAgreementRef",
    "domain": "EngagedParty",
    "description": "Reference to Party Privacy Agreement resource"
  },
  "PartyPrivacyAgreementStatusExampleType": {
    "name": "PartyPrivacyAgreementStatusExampleType",
    "domain": "EngagedParty",
    "description": "Possible values for the status of party privacy profile agreement (for example: intialized, inProgress, rejected, pendingUpdate, validated)"
  },
  "PartyPrivacyProfile": {
    "name": "PartyPrivacyProfile",
    "domain": "EngagedParty",
    "description": "A Party Privacy Profile represents the set of Privacy settings defined for a Party"
  },
  "PartyPrivacyProfileCharacteristic": {
    "name": "PartyPrivacyProfileCharacteristic",
    "domain": "EngagedParty",
    "description": "A characteristic for an instantiated party profile, where the value indicates the allowed use of the characteristic"
  },
  "PartyPrivacyProfileRef": {
    "name": "PartyPrivacyProfileRef",
    "domain": "EngagedParty",
    "description": "Reference to Party Privacy Profile resource"
  },
  "PartyPrivacyProfileSpecification": {
    "name": "PartyPrivacyProfileSpecification",
    "domain": "EngagedParty",
    "description": "Party Privacy Profile Specification serves as a template for creating Privacy Profiles. The specification defines characteristics for the profile. For example there might be a profile specification for residential customers, and a different specification for partners."
  },
  "PartyPrivacyProfileSpecificationCharacteristic": {
    "name": "PartyPrivacyProfileSpecificationCharacteristic",
    "domain": "EngagedParty",
    "description": "A characteristic of the party privacy profile, whose value(s) would be supplied at runtime. For example, email address"
  },
  "PartyPrivacyProfileSpecificationRef": {
    "name": "PartyPrivacyProfileSpecificationRef",
    "domain": "EngagedParty",
    "description": "Reference to Party Privacy Specification resource"
  },
  "PartyPrivacyProfileSpecificationStatusExampleType": {
    "name": "PartyPrivacyProfileSpecificationStatusExampleType",
    "domain": "EngagedParty",
    "description": "Possible values for the status of party privacy profile Specification (for example: inDesign, active, rejected, retired)"
  },
  "PartyPrivacyProfileStatusExampleType": {
    "name": "PartyPrivacyProfileStatusExampleType",
    "domain": "EngagedParty",
    "description": "Possible values for the status of party privacy profile (for example: created, terminated)"
  },
  "PartyPrivacyRoleSpecification": {
    "name": "PartyPrivacyRoleSpecification",
    "domain": "EngagedParty",
    "description": "A PartyPrivacyRoleSpecification represents a specification of a role defined in the context of a given privacy spesification, such as Customer, User."
  },
  "PartyRef": {
    "name": "PartyRef",
    "domain": "EngagedParty"
  },
  "PartyRefOrValue": {
    "name": "PartyRefOrValue",
    "domain": "EngagedParty"
  },
  "PartyRole": {
    "name": "PartyRole",
    "domain": "EngagedParty",
    "description": "The part played by a party in a given context."
  },
  "PartyRoleRef": {
    "name": "PartyRoleRef",
    "domain": "EngagedParty",
    "description": "Party role reference. A party role represents the part played by a party in a given context."
  },
  "QueryShipmentQualification": {
    "name": "QueryShipmentQualification",
    "domain": "EngagedParty",
    "description": "QueryShipmentQualification is used to retrieve a list of shipments that are valid in the context of the interaction (place, party, shipment parameters, ...)."
  },
  "QueryWorkQualification": {
    "name": "QueryWorkQualification",
    "domain": "EngagedParty",
    "description": "QueryWorkQualification is used to retrieve a list of units of work that are valid in the context of the interaction"
  },
  "RelatedParty": {
    "name": "RelatedParty",
    "domain": "EngagedParty",
    "description": "Related Entity reference. A related party defines party or party role linked to a specific entity."
  },
  "RelatedPartyRef": {
    "name": "RelatedPartyRef",
    "domain": "EngagedParty",
    "description": "RelatedParty reference. A related party defines party or party role linked to a specific entity."
  },
  "RelatedPartyRefOrValue": {
    "name": "RelatedPartyRefOrValue",
    "domain": "EngagedParty",
    "description": "Entity reference. A related party defines party or party role linked to a specific entity."
  },
  "RelatedPartyRole": {
    "name": "RelatedPartyRole",
    "domain": "EngagedParty",
    "description": "Related PartyRole reference. A related partyRole defines party role linked to a specific entity."
  },
  "RelatedPartyWithContactInfo": {
    "name": "RelatedPartyWithContactInfo",
    "domain": "EngagedParty",
    "description": "Related party specialization that includes contact information"
  },
  "RelatedSettlementAccount": {
    "name": "RelatedSettlementAccount",
    "domain": "EngagedParty",
    "description": ""
  },
  "RelatedShipment": {
    "name": "RelatedShipment",
    "domain": "EngagedParty",
    "description": "A related shipment addressable entity"
  },
  "RelatedShippingOrder": {
    "name": "RelatedShippingOrder",
    "domain": "EngagedParty",
    "description": "A related shipping order addressable entity"
  },
  "RelatedWorkOrderItem": {
    "name": "RelatedWorkOrderItem",
    "domain": "EngagedParty",
    "description": "RelatedWorkOrderItem (WorkOrder item). The work order item which triggered this unit of work's creation/change/termination."
  },
  "RoleSpecification": {
    "name": "RoleSpecification",
    "domain": "EngagedParty",
    "description": "A RoleSpecification represents a specification of a role."
  },
  "RoleType": {
    "name": "RoleType",
    "domain": "EngagedParty",
    "description": "A RoleType represents the type of a PartyRole, defined in the context of a given type of partnership, such as Buyer, Seller."
  },
  "RoleTypeRef": {
    "name": "RoleTypeRef",
    "domain": "EngagedParty",
    "description": "RoleType reference."
  },
  "Rule": {
    "name": "Rule",
    "domain": "EngagedParty"
  },
  "RuleRef": {
    "name": "RuleRef",
    "domain": "EngagedParty",
    "description": "Rule reference. Rule is a common pattern or Template for the SLA parameters, metrics, and thresholds"
  },
  "RuleRefOrValue": {
    "name": "RuleRefOrValue",
    "domain": "EngagedParty",
    "description": ""
  },
  "ServiceLevelAgreement": {
    "name": "ServiceLevelAgreement",
    "domain": "EngagedParty",
    "description": "Service Level Agreement (SLA) is a type of agreement that represents targets formally or informally agreed between parties in order to achieve and maintain specified Quality of Service."
  },
  "ServiceLevelAgreementItem": {
    "name": "ServiceLevelAgreementItem",
    "domain": "EngagedParty",
    "description": "A part of the Service Level Agreement representing quality aspect of the agrrement for a product offering and corresponding products/services"
  },
  "ServiceLevelAgreementItemRef": {
    "name": "ServiceLevelAgreementItemRef",
    "domain": "EngagedParty"
  },
  "ServiceLevelAgreementRef": {
    "name": "ServiceLevelAgreementRef",
    "domain": "EngagedParty",
    "description": "SLA reference: SLA(s) requested in a customer order"
  },
  "ServiceLevelAgreementRelationship": {
    "name": "ServiceLevelAgreementRelationship",
    "domain": "EngagedParty",
    "description": "A uni-directionmal relationship to another SLA"
  },
  "ServiceLevelAgreementSpecification": {
    "name": "ServiceLevelAgreementSpecification",
    "domain": "EngagedParty",
    "description": "A specification that can be used when instantiating a service level agreement (SLA)"
  },
  "ServiceLevelAgreementSpecificationRef": {
    "name": "ServiceLevelAgreementSpecificationRef",
    "domain": "EngagedParty",
    "description": "Service Level Agreement specification reference. A Service Level Agreement Specification represents a SLA specification that can be used to instantiate a SLA."
  },
  "ServiceLevelAgreementTemplate": {
    "name": "ServiceLevelAgreementTemplate",
    "domain": "EngagedParty",
    "description": "A template document that can be used for an agreement between parties on offered product/service level quality"
  },
  "ServiceLevelAgreementViolation": {
    "name": "ServiceLevelAgreementViolation",
    "domain": "EngagedParty"
  },
  "SettlementAccount": {
    "name": "SettlementAccount",
    "domain": "EngagedParty",
    "description": "A party account used for settlement purposes. It includes a description of the bill structure (frequency, presentation media, format and so on). It is a specialization of entity PartyAccount."
  },
  "Shipment": {
    "name": "Shipment",
    "domain": "EngagedParty"
  },
  "ShipmentEligibilityUnavailabilityReason": {
    "name": "ShipmentEligibilityUnavailabilityReason",
    "domain": "EngagedParty",
    "description": "Reason for eligibility result if the ShipmentQualification result is no (meaning the Shipment is not valid)"
  },
  "ShipmentItem": {
    "name": "ShipmentItem",
    "domain": "EngagedParty"
  },
  "ShipmentItemActionType": {
    "name": "ShipmentItemActionType",
    "domain": "EngagedParty",
    "description": "action to be performed on the shipment item"
  },
  "ShipmentQualification": {
    "name": "ShipmentQualification",
    "domain": "EngagedParty",
    "description": "ShipmentQualification is used to perform a validation on shipment parameters and options, in relation to a specific carrier."
  },
  "ShipmentQualificationItem": {
    "name": "ShipmentQualificationItem",
    "domain": "EngagedParty",
    "description": "A ShipmentQualificationItem relates to a specific shipment being checked in a qualification operation."
  },
  "ShipmentQualificationItemRelationship": {
    "name": "ShipmentQualificationItemRelationship",
    "domain": "EngagedParty",
    "description": "Structure used to describe relationship between shipmentQualification items from the same shipmentQualification ."
  },
  "ShipmentRef": {
    "name": "ShipmentRef",
    "domain": "EngagedParty",
    "description": "Shipment reference"
  },
  "ShipmentRefOrValue": {
    "name": "ShipmentRefOrValue",
    "domain": "EngagedParty",
    "description": "A shipment defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation &amp; @referredType are related to the shipment entity and not the related ShipmentRefOrValue class itself"
  },
  "ShipmentSpecification": {
    "name": "ShipmentSpecification",
    "domain": "EngagedParty",
    "description": "Definition of the nature of a Shipment. For example, could be a standard ground delivery, overnight express with signature required by an adult, etc."
  },
  "ShipmentSpecificationRef": {
    "name": "ShipmentSpecificationRef",
    "domain": "EngagedParty",
    "description": "Shipment specification reference"
  },
  "ShipmentSpecificationRefOrValue": {
    "name": "ShipmentSpecificationRefOrValue",
    "domain": "EngagedParty",
    "description": "A shipment specification defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation &amp; @referredType are related to the shipment specification entity and not the related ShipmentSpecificationRefOrValue class itself"
  },
  "ShipmentSpecificationRelationship": {
    "name": "ShipmentSpecificationRelationship",
    "domain": "EngagedParty",
    "description": "A migration, substitution, dependency or exclusivity relationship between/among entity specifications."
  },
  "ShippingInstruction": {
    "name": "ShippingInstruction",
    "domain": "EngagedParty",
    "description": "Instructions and details for the carrier"
  },
  "ShippingOrder": {
    "name": "ShippingOrder",
    "domain": "EngagedParty",
    "description": "A Shipping Order is a document used by a business to specify what items are to be transferred from a storage location or warehouse to which person and to which new location. A Shipping Order can typically be sent along with a shipment of goods so that the person receiving them can verify that the document correctly reflects the items that they actually received."
  },
  "ShippingOrderItem": {
    "name": "ShippingOrderItem",
    "domain": "EngagedParty",
    "description": "A list of shipping order items"
  },
  "ShippingOrderItemActionType": {
    "name": "ShippingOrderItemActionType",
    "domain": "EngagedParty",
    "description": "action to be performed on the shipping order item"
  },
  "ShippingOrderProduct": {
    "name": "ShippingOrderProduct",
    "domain": "EngagedParty",
    "description": "The product order item"
  },
  "SignatureRequiredByType": {
    "name": "SignatureRequiredByType",
    "domain": "EngagedParty",
    "description": "Possible values for the signature requirement upon receiving the shipment"
  },
  "Skill": {
    "name": "Skill",
    "domain": "EngagedParty",
    "description": "Skills evaluated for an individual with a level and possibly with a limited validity when an obsolescence is defined (Ex: the first-aid certificate first level is limited to one year and an update training is required each year to keep the level)."
  },
  "SLA": {
    "name": "SLA",
    "domain": "EngagedParty",
    "description": "Part of a business agreement between a Service Provider and a Customer, quantitatively specifying the service performance level the Service Provider commits to deliver."
  },
  "SLAItemRelationship": {
    "name": "SLAItemRelationship",
    "domain": "EngagedParty",
    "description": "relationship to another SLA item"
  },
  "SLAItemSpecification": {
    "name": "SLAItemSpecification",
    "domain": "EngagedParty",
    "description": "A sevice level agreement (SLA) item specification"
  },
  "SLAItemSpecificationRef": {
    "name": "SLAItemSpecificationRef",
    "domain": "EngagedParty",
    "description": "A reference to a service level agreemnent item specification"
  },
  "SLAItemSpecificationRelationship": {
    "name": "SLAItemSpecificationRelationship",
    "domain": "EngagedParty",
    "description": "A relationship to a service level agreemnet item specification"
  },
  "SLARef": {
    "name": "SLARef",
    "domain": "EngagedParty",
    "description": "ServiceLevelAgreement reference: A service level agreement (SLA) is a type of agreement that represents a formal negotiated agreement between two parties designed to create a common understanding about products, services, priorities, responsibilities, and so forth. The SLA is a set of appropriate procedures and targets formally or informally agreed between parties in order to achieve and maintain specified Quality of Service."
  },
  "SLAViolation": {
    "name": "SLAViolation",
    "domain": "EngagedParty"
  },
  "SLAViolationRef": {
    "name": "SLAViolationRef",
    "domain": "EngagedParty"
  },
  "TargetShipmentSchema": {
    "name": "TargetShipmentSchema",
    "domain": "EngagedParty",
    "description": "The reference object to the schema and type of target shipment which is described by shipment specification"
  },
  "TaxExemptionCertificate": {
    "name": "TaxExemptionCertificate",
    "domain": "EngagedParty",
    "description": "A tax exemption certificate represents a tax exemption granted to a party (individual or organization) by a tax jurisdiction which may be a city, state, country,... An exemption has a certificate identifier (received from the jurisdiction that levied the tax) and a validity period. An exemption is per tax types and determines for each type of tax what portion of the tax is exempted (partial by percentage or complete) via the tax definition."
  },
  "TemplateRef": {
    "name": "TemplateRef",
    "domain": "EngagedParty"
  },
  "TokenCredential": {
    "name": "TokenCredential",
    "domain": "EngagedParty",
    "description": "A Credential based on a token."
  },
  "Violation": {
    "name": "Violation",
    "domain": "EngagedParty"
  },
  "Work": {
    "name": "Work",
    "domain": "EngagedParty"
  },
  "WorkEligibilityUnavailabilityReason": {
    "name": "WorkEligibilityUnavailabilityReason",
    "domain": "EngagedParty",
    "description": "Reason for eligibility result if the WorkQualification result is no (meaning the Unit of Work is not valid)"
  },
  "WorkforceEmployeeAssignment": {
    "name": "WorkforceEmployeeAssignment",
    "domain": "EngagedParty",
    "description": "Represents an assignment of a particular WorforceEmployeeRole for a particular unit of work in a specific timeframe. For example, assignment of a person in a network engineer role to a trouble shooting unit of work for at least 2 hours. The assignment is associated with a TimeSlot."
  },
  "WorkforceEmployeeAssignmentStateType": {
    "name": "WorkforceEmployeeAssignmentStateType",
    "domain": "EngagedParty"
  },
  "WorkOrder": {
    "name": "WorkOrder",
    "domain": "EngagedParty"
  },
  "WorkOrderItem": {
    "name": "WorkOrderItem",
    "domain": "EngagedParty",
    "description": "An identified part of the order. A work order is decomposed into one or more order items."
  },
  "WorkOrderItemStateType": {
    "name": "WorkOrderItemStateType",
    "domain": "EngagedParty",
    "description": "Possible values for the state of the order"
  },
  "WorkOrderRef": {
    "name": "WorkOrderRef",
    "domain": "EngagedParty",
    "description": "WorkOrder reference"
  },
  "WorkOrderStateType": {
    "name": "WorkOrderStateType",
    "domain": "EngagedParty",
    "description": "Possible values for the state of the order"
  },
  "WorkPrice": {
    "name": "WorkPrice",
    "domain": "EngagedParty",
    "description": "An amount, usually of money, that represents the actual price paid by the Customer for this item or this order."
  },
  "WorkQualification": {
    "name": "WorkQualification",
    "domain": "EngagedParty"
  },
  "WorkQualificationItem": {
    "name": "WorkQualificationItem",
    "domain": "EngagedParty",
    "description": "A WorkQualificationItem relates to a specific unit of work being checked in a qualification operation."
  },
  "WorkQualificationItemRelationship": {
    "name": "WorkQualificationItemRelationship",
    "domain": "EngagedParty",
    "description": "Structure used to describe relationship between WorkQualification items from the same WorkQualification ."
  },
  "WorkQualificationRelationship": {
    "name": "WorkQualificationRelationship",
    "domain": "EngagedParty",
    "description": "Structure used to describe relationship between WorkQualification item from the same WorkQualification."
  },
  "WorkRef": {
    "name": "WorkRef",
    "domain": "EngagedParty",
    "description": "Unit of Work reference"
  },
  "WorkRefOrValue": {
    "name": "WorkRefOrValue",
    "domain": "EngagedParty",
    "description": "A Unit of Work defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation &amp; @referredType are related to the work entity and not the related WorkRefOrValue class itself"
  },
  "WorkRelationship": {
    "name": "WorkRelationship",
    "domain": "EngagedParty"
  },
  "WorkSpecification": {
    "name": "WorkSpecification",
    "domain": "EngagedParty",
    "description": "Definition of the nature of a Work Unit. For example, could be wiring, equipment installation, etc."
  },
  "WorkSpecificationRef": {
    "name": "WorkSpecificationRef",
    "domain": "EngagedParty",
    "description": "Work specification reference"
  },
  "WorkSpecificationRefOrValue": {
    "name": "WorkSpecificationRefOrValue",
    "domain": "EngagedParty",
    "description": "A work specification defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation &amp; @referredType are related to the work specification entity and not the related WorkSpecificationRefOrValue class itself"
  },
  "WorkSpecificationRelationship": {
    "name": "WorkSpecificationRelationship",
    "domain": "EngagedParty",
    "description": "A migration, substitution, dependency or exclusivity relationship between/among entity specifications."
  },
  "WorkStateType": {
    "name": "WorkStateType",
    "domain": "EngagedParty"
  },
  "AccessPoint": {
    "name": "AccessPoint",
    "domain": "Iot"
  },
  "Activity": {
    "name": "Activity",
    "domain": "Iot"
  },
  "AeroAllergenObserved": {
    "name": "AeroAllergenObserved",
    "domain": "Iot"
  },
  "Agency": {
    "name": "Agency",
    "domain": "Iot"
  },
  "AirQualityObserved": {
    "name": "AirQualityObserved",
    "domain": "Iot"
  },
  "ArrivalEstimation": {
    "name": "ArrivalEstimation",
    "domain": "Iot"
  },
  "Beach": {
    "name": "Beach",
    "domain": "Iot"
  },
  "Building": {
    "name": "Building",
    "domain": "Iot"
  },
  "BuildingOperation": {
    "name": "BuildingOperation",
    "domain": "Iot"
  },
  "CalendarDateRule": {
    "name": "CalendarDateRule",
    "domain": "Iot"
  },
  "CalendarRule": {
    "name": "CalendarRule",
    "domain": "Iot"
  },
  "CrowdFlowObserved": {
    "name": "CrowdFlowObserved",
    "domain": "Iot"
  },
  "Device": {
    "name": "Device",
    "domain": "Iot"
  },
  "DeviceModel": {
    "name": "DeviceModel",
    "domain": "Iot"
  },
  "EVChargingStation": {
    "name": "EVChargingStation",
    "domain": "Iot"
  },
  "FlowerBed": {
    "name": "FlowerBed",
    "domain": "Iot"
  },
  "Frequency": {
    "name": "Frequency",
    "domain": "Iot"
  },
  "Garden": {
    "name": "Garden",
    "domain": "Iot"
  },
  "GreenspaceRecord": {
    "name": "GreenspaceRecord",
    "domain": "Iot"
  },
  "IoTService": {
    "name": "IoTService",
    "domain": "Iot"
  },
  "Museum": {
    "name": "Museum",
    "domain": "Iot"
  },
  "NoiseLevelObserved": {
    "name": "NoiseLevelObserved",
    "domain": "Iot"
  },
  "OffStreetParking": {
    "name": "OffStreetParking",
    "domain": "Iot"
  },
  "OnStreetParking": {
    "name": "OnStreetParking",
    "domain": "Iot"
  },
  "Open311_ServiceRequest": {
    "name": "Open311_ServiceRequest",
    "domain": "Iot"
  },
  "Open311_ServiceType": {
    "name": "Open311_ServiceType",
    "domain": "Iot"
  },
  "ParkingAccess": {
    "name": "ParkingAccess",
    "domain": "Iot"
  },
  "ParkingGroup": {
    "name": "ParkingGroup",
    "domain": "Iot"
  },
  "ParkingSpot": {
    "name": "ParkingSpot",
    "domain": "Iot"
  },
  "PointOfInterest": {
    "name": "PointOfInterest",
    "domain": "Iot"
  },
  "Road": {
    "name": "Road",
    "domain": "Iot"
  },
  "RoadSegment": {
    "name": "RoadSegment",
    "domain": "Iot"
  },
  "Route": {
    "name": "Route",
    "domain": "Iot"
  },
  "SmartPointOfInteraction": {
    "name": "SmartPointOfInteraction",
    "domain": "Iot"
  },
  "SmartSpot": {
    "name": "SmartSpot",
    "domain": "Iot"
  },
  "Station": {
    "name": "Station",
    "domain": "Iot"
  },
  "Stop": {
    "name": "Stop",
    "domain": "Iot"
  },
  "StopTime": {
    "name": "StopTime",
    "domain": "Iot"
  },
  "Streetlight": {
    "name": "Streetlight",
    "domain": "Iot"
  },
  "StreetlightControlCabinet": {
    "name": "StreetlightControlCabinet",
    "domain": "Iot"
  },
  "StreetlightGroup": {
    "name": "StreetlightGroup",
    "domain": "Iot"
  },
  "StreetlightModel": {
    "name": "StreetlightModel",
    "domain": "Iot"
  },
  "TrafficFlowObserved": {
    "name": "TrafficFlowObserved",
    "domain": "Iot"
  },
  "TransferRule": {
    "name": "TransferRule",
    "domain": "Iot"
  },
  "Trip": {
    "name": "Trip",
    "domain": "Iot"
  },
  "UserContext": {
    "name": "UserContext",
    "domain": "Iot"
  },
  "WasteContainer": {
    "name": "WasteContainer",
    "domain": "Iot"
  },
  "WasteContainerIsle": {
    "name": "WasteContainerIsle",
    "domain": "Iot"
  },
  "WasteContainerModel": {
    "name": "WasteContainerModel",
    "domain": "Iot"
  },
  "WaterQualityObserved": {
    "name": "WaterQualityObserved",
    "domain": "Iot"
  },
  "WeatherAlert": {
    "name": "WeatherAlert",
    "domain": "Iot"
  },
  "WeatherForecast": {
    "name": "WeatherForecast",
    "domain": "Iot"
  },
  "WeatherObserved": {
    "name": "WeatherObserved",
    "domain": "Iot"
  },
  "MarketingCampaignRef": {
    "name": "MarketingCampaignRef",
    "domain": "MarketingSales",
    "description": "MarketingCampaign reference. Marketing campaign represents the carrier-initiated marketing activity which aims at the better recognition about its brand and offerings by the market"
  },
  "MarketSegmentRef": {
    "name": "MarketSegmentRef",
    "domain": "MarketingSales",
    "description": "provides references to the corresponding market segment as target of product offerings. A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth."
  },
  "SalesLead": {
    "name": "SalesLead",
    "domain": "MarketingSales",
    "description": "A Sales Lead is the identification of a person or organization that has an interest in the goods and/or services provided in the prospect of them becoming Customers with one or more Subscriptions."
  },
  "SalesLeadPriorityType": {
    "name": "SalesLeadPriorityType",
    "domain": "MarketingSales",
    "description": "Urgency of working this salesLead"
  },
  "SalesLeadStateType": {
    "name": "SalesLeadStateType",
    "domain": "MarketingSales",
    "description": "Valid values for the lifecycle state of a salesLead resource"
  },
  "SalesOpportunityRef": {
    "name": "SalesOpportunityRef",
    "domain": "MarketingSales",
    "description": "Sales Opportunity is an 'opportunity' to generate revenue from a Sales Account or Sales Lead. Opportunities are the pending deals that need to be tracked and on which Sales Team plans and executes Sales Activities (Events and Tasks). "
  },
  "Partner360AccountVO": {
    "name": "Partner360AccountVO",
    "domain": "Partner360",
    "description": "Generic Account structure used to define commonalities between sub concepts of PartyAccount and Financial Account."
  },
  "Partner360AgreementVO": {
    "name": "Partner360AgreementVO",
    "domain": "Partner360",
    "description": "An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a partner price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications."
  },
  "Partner360AppointmentVO": {
    "name": "Partner360AppointmentVO",
    "domain": "Partner360",
    "description": "An Appointment is an arrangement to do something or meet someone at a particular time, at a place (for face to face appointment) or in a contact medium (for phone appointment)."
  },
  "Partner360InteractionItemVO": {
    "name": "Partner360InteractionItemVO",
    "domain": "Partner360"
  },
  "Partner360LoyaltyBalanceVO": {
    "name": "Partner360LoyaltyBalanceVO",
    "domain": "Partner360",
    "description": "A loyalty balance, containing a balance unit and value."
  },
  "Partner360PartnerBillVO": {
    "name": "Partner360PartnerBillVO",
    "domain": "Partner360",
    "description": "The Partner bill. Can be a regular recurring bill or an extra bill on demand by the Partner or the csp."
  },
  "Partner360PartnerVO": {
    "name": "Partner360PartnerVO",
    "domain": "Partner360"
  },
  "Partner360PartyInteractionVO": {
    "name": "Partner360PartyInteractionVO",
    "domain": "Partner360"
  },
  "Partner360ProductOrderVO": {
    "name": "Partner360ProductOrderVO",
    "domain": "Partner360",
    "description": "A Product Order is a type of order which  can  be used to place an order between a Partner and a service provider or between a service provider and a partner and vice versa,"
  },
  "Partner360ProductValueVO": {
    "name": "Partner360ProductValueVO",
    "domain": "Partner360",
    "description": "A product offering procured by a Partner or other interested party playing a party role. A product is realized as one or more service(s) and / or resource(s)."
  },
  "Partner360PromotionVO": {
    "name": "Partner360PromotionVO",
    "domain": "Partner360",
    "description": "Promotion Resource is used to provide the additional discount, voucher, bonus or gift to the Partner who meets the pre-defined criteria. Using promotion, the enterprise is able to attract the users and encourage more consumption, especially continuous purchases.   Normally Promotion is not regarded as one type of product or product offering. It is often applied when the Partner buys the product offerings with the price or amount surpassing the certain limit."
  },
  "Partner360QuoteVO": {
    "name": "Partner360QuoteVO",
    "domain": "Partner360",
    "description": "Quote can be used to negotiate service and product acquisition or modification between a Partner and a service provider. Quote contain list of quote items, a reference to Partner (partyRole), a list of productOffering and attached prices and conditions."
  },
  "Partner360RecommendationVO": {
    "name": "Partner360RecommendationVO",
    "domain": "Partner360",
    "description": "Recommendation API is used to recommend offering quickly based on the history and real-time context of Partner. It is a real-time and personalized recommendation API. It is usually provided by e-commerce or BSS, CRM system in omni-channel."
  },
  "Partner360ServiceProblemVO": {
    "name": "Partner360ServiceProblemVO",
    "domain": "Partner360",
    "description": "The problem information for Middle B which is abstracted in the service layer from the issued event information by First B"
  },
  "Partner360TroubleTicketVO": {
    "name": "Partner360TroubleTicketVO",
    "domain": "Partner360",
    "description": "A trouble ticket is a record of an issue that is created, tracked, and managed by a trouble ticket management system"
  },
  "Partner360UsageSpecificationVO": {
    "name": "Partner360UsageSpecificationVO",
    "domain": "Partner360",
    "description": "A detailed description of a usage event that are of interest to the business and can have charges applied to it. It is comprised of characteristics, which define all attributes known for a particular type of usage."
  },
  "AlternateFicticious": {
    "name": "AlternateFicticious",
    "domain": "Portability"
  },
  "BasePortabilityOrderItem": {
    "name": "BasePortabilityOrderItem",
    "domain": "Portability",
    "description": "An identified part of the order. A portability order is decomposed into one or more order items."
  },
  "CancelPortabilityOrder": {
    "name": "CancelPortabilityOrder",
    "domain": "Portability",
    "description": "Request for cancellation an existing portability order"
  },
  "ErrorRepresentation": {
    "name": "ErrorRepresentation",
    "domain": "Portability",
    "description": "Tmforum standard error representation"
  },
  "GeographicRegion": {
    "name": "GeographicRegion",
    "domain": "Portability"
  },
  "PortabilityActionType": {
    "name": "PortabilityActionType",
    "domain": "Portability",
    "description": ""
  },
  "PortabilityActivation": {
    "name": "PortabilityActivation",
    "domain": "Portability"
  },
  "PortabilityAvailableDate": {
    "name": "PortabilityAvailableDate",
    "domain": "Portability",
    "description": "."
  },
  "PortabilityDateCalculation": {
    "name": "PortabilityDateCalculation",
    "domain": "Portability",
    "description": "."
  },
  "PortabilityDonorDone": {
    "name": "PortabilityDonorDone",
    "domain": "Portability"
  },
  "PortabilityIdentification": {
    "name": "PortabilityIdentification",
    "domain": "Portability",
    "description": ""
  },
  "PortabilityMessage": {
    "name": "PortabilityMessage",
    "domain": "Portability",
    "description": "."
  },
  "PortabilityOrder": {
    "name": "PortabilityOrder",
    "domain": "Portability",
    "description": "."
  },
  "PortabilityOrderAttributeValueChangeEvent": {
    "name": "PortabilityOrderAttributeValueChangeEvent",
    "domain": "Portability",
    "description": ""
  },
  "PortabilityOrderAttributeValueChangeEventPayload": {
    "name": "PortabilityOrderAttributeValueChangeEventPayload",
    "domain": "Portability",
    "description": ""
  },
  "PortabilityOrderCancellationEvent": {
    "name": "PortabilityOrderCancellationEvent",
    "domain": "Portability",
    "description": ""
  },
  "PortabilityOrderCancellationEventPayload": {
    "name": "PortabilityOrderCancellationEventPayload",
    "domain": "Portability",
    "description": ""
  },
  "PortabilityOrderCreateEvent": {
    "name": "PortabilityOrderCreateEvent",
    "domain": "Portability",
    "description": ""
  },
  "PortabilityOrderCreateEventPayload": {
    "name": "PortabilityOrderCreateEventPayload",
    "domain": "Portability",
    "description": ""
  },
  "PortabilityOrderItem": {
    "name": "PortabilityOrderItem",
    "domain": "Portability"
  },
  "PortabilityOrderItemRelationship": {
    "name": "PortabilityOrderItemRelationship",
    "domain": "Portability"
  },
  "PortabilityOrderItemStateType": {
    "name": "PortabilityOrderItemStateType",
    "domain": "Portability",
    "description": ""
  },
  "PortabilityOrderPortedServiceEvent": {
    "name": "PortabilityOrderPortedServiceEvent",
    "domain": "Portability",
    "description": ""
  },
  "PortabilityOrderPortedServiceEventPayload": {
    "name": "PortabilityOrderPortedServiceEventPayload",
    "domain": "Portability",
    "description": ""
  },
  "PortabilityOrderRef": {
    "name": "PortabilityOrderRef",
    "domain": "Portability",
    "description": "The portability order which the reference is related with."
  },
  "PortabilityOrderRelationship": {
    "name": "PortabilityOrderRelationship",
    "domain": "Portability"
  },
  "PortabilityOrderStateChangeEvent": {
    "name": "PortabilityOrderStateChangeEvent",
    "domain": "Portability",
    "description": ""
  },
  "PortabilityOrderStateChangeEventPayload": {
    "name": "PortabilityOrderStateChangeEventPayload",
    "domain": "Portability",
    "description": ""
  },
  "PortabilityOrderStateType": {
    "name": "PortabilityOrderStateType",
    "domain": "Portability",
    "description": ""
  },
  "PortabilityPriorityType": {
    "name": "PortabilityPriorityType",
    "domain": "Portability",
    "description": ""
  },
  "PortabilityServiceProvider": {
    "name": "PortabilityServiceProvider",
    "domain": "Portability"
  },
  "PortabilitySubject": {
    "name": "PortabilitySubject",
    "domain": "Portability",
    "description": ""
  },
  "PostAddress": {
    "name": "PostAddress",
    "domain": "Portability"
  },
  "ServicePortabilityOrderItem": {
    "name": "ServicePortabilityOrderItem",
    "domain": "Portability"
  },
  "Zoning": {
    "name": "Zoning",
    "domain": "Portability"
  },
  "AllowedProductAction": {
    "name": "AllowedProductAction",
    "domain": "Product",
    "description": "Defines an action that can be taken on a product in the inventory as part of a product order. It is expected that this entity will be attached to product catalog items such as specifications and offerings"
  },
  "AlternateProduct": {
    "name": "AlternateProduct",
    "domain": "Product",
    "description": "In the context of a product offering qualification, this data structure is useful to describe alternate product than can be proposed"
  },
  "AlternateProductOfferingProposal": {
    "name": "AlternateProductOfferingProposal",
    "domain": "Product",
    "description": "Alternate product Offering proposal is used when the requested product offering is not available with characteristic and date asked for. An alternate proposal could be a distinct product offering or product Spec close to requested one or same as requested but with a different activation date."
  },
  "BaseProductRefOrValue": {
    "name": "BaseProductRefOrValue",
    "domain": "Product",
    "description": "In the context of a product order or a product offering qualification, this data structure captures the product information useful to order or qualified  an existing subscribed product or to a new one. This is a subset of relevant product attributes for ordering and qualification"
  },
  "BundledGroupProductOffering": {
    "name": "BundledGroupProductOffering",
    "domain": "Product",
    "description": "Represents a potential containment of a product offering within another product offering as part of a group."
  },
  "BundledGroupProductOfferingOption": {
    "name": "BundledGroupProductOfferingOption",
    "domain": "Product",
    "description": "Defines a group between a parent product offering and multiple child offerings, allowing (for example) choosing a minimum of 2 and a maximum of 6 offerings from within the list of child offerings. And optionally specifying offerings that would be selected by default. For example facilitate the choice of between 2 and 7 channel packs from a list, and cause certain items to be selected by default"
  },
  "BundledProductOffering": {
    "name": "BundledProductOffering",
    "domain": "Product",
    "description": "A type of ProductOffering that belongs to a grouping of ProductOfferings made available to the market. It inherits of all attributes of ProductOffering."
  },
  "BundledProductOfferingOption": {
    "name": "BundledProductOfferingOption",
    "domain": "Product",
    "description": "A set of numbers that specifies the lower and upper limits for a ProductOffering that can be procured as part of the related BundledProductOffering. Values can range from 0 to unbounded"
  },
  "BundledProductOfferingPriceRelationship": {
    "name": "BundledProductOfferingPriceRelationship",
    "domain": "Product",
    "description": "This represents a bundling pricing relationship, allowing a price to be composed of multiple other prices (e.g. a recurring charge and a onetime charge)."
  },
  "BundledProductOfferingRef": {
    "name": "BundledProductOfferingRef",
    "domain": "Product",
    "description": "BundledProductOffering Reference. A type of ProductOffering that belongs to a grouping of ProductOfferings made available to the market. It inherits of all attributes of ProductOffering."
  },
  "BundledProductSpecification": {
    "name": "BundledProductSpecification",
    "domain": "Product",
    "description": "A type of ProductSpecification that belongs to a grouping of ProductSpecifications made available to the market. It inherits of all attributes of ProductSpecification."
  },
  "CancelProductOrder": {
    "name": "CancelProductOrder",
    "domain": "Product",
    "description": "Request for cancellation an existing product order"
  },
  "Catalog": {
    "name": "Catalog",
    "domain": "Product",
    "description": "A collection of Product Offerings, intended for a specific DistributionChannel, enhanced with additional information such as SLA parameters, invoicing and shipping details"
  },
  "Category": {
    "name": "Category",
    "domain": "Product",
    "description": "The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other categories and/or product offerings, resource or service candidates."
  },
  "CategoryRef": {
    "name": "CategoryRef",
    "domain": "Product",
    "description": "The category for grouping recommendations"
  },
  "ConsumptionSummary": {
    "name": "ConsumptionSummary",
    "domain": "Product",
    "description": "The consumption counters (called ConsumptionSummary in the SID model) detail for example the different kind of consumption done on the bucket."
  },
  "EligibilityUnavailabilityReason": {
    "name": "EligibilityUnavailabilityReason",
    "domain": "Product",
    "description": "Reason for eligibility result if the productOfferingQualification result is no (meaning the productOffering or productSpec is not available)."
  },
  "LoyaltyAccount": {
    "name": "LoyaltyAccount",
    "domain": "Product",
    "description": "A loyalty account, containing loyalty balances."
  },
  "LoyaltyAccountRef": {
    "name": "LoyaltyAccountRef",
    "domain": "Product",
    "description": "Reference to a loyalty account."
  },
  "LoyaltyAction": {
    "name": "LoyaltyAction",
    "domain": "Product"
  },
  "LoyaltyActionRef": {
    "name": "LoyaltyActionRef",
    "domain": "Product"
  },
  "LoyaltyBalance": {
    "name": "LoyaltyBalance",
    "domain": "Product",
    "description": "A loyalty balance, containing a balance unit and value."
  },
  "LoyaltyBurn": {
    "name": "LoyaltyBurn",
    "domain": "Product",
    "description": "A specialised event to process direct loyalty points redemption for purchases"
  },
  "LoyaltyCondition": {
    "name": "LoyaltyCondition",
    "domain": "Product",
    "description": "A condition, comprised of a attribute that will be tested against a value."
  },
  "LoyaltyConditionRef": {
    "name": "LoyaltyConditionRef",
    "domain": "Product"
  },
  "LoyaltyEarn": {
    "name": "LoyaltyEarn",
    "domain": "Product",
    "description": "A specialised event to process direct loyalty points earnings."
  },
  "LoyaltyEvent": {
    "name": "LoyaltyEvent",
    "domain": "Product",
    "description": "A loyalty event notification."
  },
  "LoyaltyEventType": {
    "name": "LoyaltyEventType",
    "domain": "Product",
    "description": "An event type used to match filter incoming loyalty events."
  },
  "LoyaltyEventTypeRef": {
    "name": "LoyaltyEventTypeRef",
    "domain": "Product"
  },
  "LoyaltyExecutionPoint": {
    "name": "LoyaltyExecutionPoint",
    "domain": "Product"
  },
  "LoyaltyProgramMember": {
    "name": "LoyaltyProgramMember",
    "domain": "Product",
    "description": "A person or group that opts in to a loyalty program."
  },
  "LoyaltyProgramMemberRef": {
    "name": "LoyaltyProgramMemberRef",
    "domain": "Product"
  },
  "LoyaltyProgramPartnerRef": {
    "name": "LoyaltyProgramPartnerRef",
    "domain": "Product"
  },
  "LoyaltyProgramProduct": {
    "name": "LoyaltyProgramProduct",
    "domain": "Product",
    "description": "An instance of a loyalty program specification, linked to a specified loyalty member."
  },
  "LoyaltyProgramProductRef": {
    "name": "LoyaltyProgramProductRef",
    "domain": "Product"
  },
  "LoyaltyProgramProductSpec": {
    "name": "LoyaltyProgramProductSpec",
    "domain": "Product",
    "description": "A reference to a loyalty program specification."
  },
  "LoyaltyProgramProductSpecRef": {
    "name": "LoyaltyProgramProductSpecRef",
    "domain": "Product"
  },
  "LoyaltyRule": {
    "name": "LoyaltyRule",
    "domain": "Product",
    "description": "Loyalty rule, containing conditions, event types and actions."
  },
  "LoyaltyRuleAction": {
    "name": "LoyaltyRuleAction",
    "domain": "Product",
    "description": "Resource containing a the ID of a action to link to a loyalty rule."
  },
  "LoyaltyRuleCondition": {
    "name": "LoyaltyRuleCondition",
    "domain": "Product",
    "description": "Resource containing a the ID of a condition to link to a loyalty rule."
  },
  "LoyaltyRuleEventType": {
    "name": "LoyaltyRuleEventType",
    "domain": "Product",
    "description": "Resource containing a the ID of a event type to link to a loyalty rule."
  },
  "NetworkProduct": {
    "name": "NetworkProduct",
    "domain": "Product",
    "description": "An instantiated network product (specialization of a product) subscribed by a customer."
  },
  "NetworkProductRef": {
    "name": "NetworkProductRef",
    "domain": "Product",
    "description": "Reference of a product"
  },
  "OrderStateType": {
    "name": "OrderStateType",
    "domain": "Product",
    "description": "Possible values for the state of the order"
  },
  "POPAlteration": {
    "name": "POPAlteration",
    "domain": "Product",
    "description": "Is an amount, usually of money, that modifies the price charged for an order item."
  },
  "POPCharge": {
    "name": "POPCharge",
    "domain": "Product",
    "description": "This is representing a product offering price (charge) based on both the basic cost to develop and produce products and the enterprises policy on revenue targets. This price may be further revised through discounting (a Product Offering Price that reflects an alteration)."
  },
  "PriceAlteration": {
    "name": "PriceAlteration",
    "domain": "Product",
    "description": "Is an amount, usually of money, that modifies the price charged for an order item."
  },
  "PricingLogicAlgorithm": {
    "name": "PricingLogicAlgorithm",
    "domain": "Product",
    "description": "The PricingLogicAlgorithm entity represents an instantiation of an interface specification to external rating function (without a modeled bahavior in SID). Some of the parameters of the interface definiition may be already set (such as price per unit) and some may be gathered during the rating process from the event (such as call duration) or from ProductCharacteristicValues (such as assigned bandwidth)"
  },
  "Product": {
    "name": "Product",
    "domain": "Product",
    "description": "A product offering procured by a customer or other interested party playing a party role. A product is realized as one or more service(s) and / or resource(s)."
  },
  "ProductActionType": {
    "name": "ProductActionType",
    "domain": "Product",
    "description": "action to be performed on the product"
  },
  "ProductCharacteristic": {
    "name": "ProductCharacteristic",
    "domain": "Product",
    "description": "Characteristics of the product to instantiate or to modify"
  },
  "ProductConfiguration": {
    "name": "ProductConfiguration",
    "domain": "Product",
    "description": "A representation of how a Product operates or functions in terms of characteristics and related Products(s)"
  },
  "ProductConfigurationSpecification": {
    "name": "ProductConfigurationSpecification",
    "domain": "Product",
    "description": "The definition of how a Product operates or functions in terms of CharacteristicSpecification(s) and related ProductSpecification(s)"
  },
  "ProductInventoryRelationship": {
    "name": "ProductInventoryRelationship",
    "domain": "Product",
    "description": "Linked products to the one instantiate, such as [bundled] if the product is a bundle and you want to describe the bundled products inside this bundle; [reliesOn] if the product needs another already owned product to rely on (e.g. an option on an already owned mobile access product) [targets] or [isTargeted] (depending on the way of expressing the link) for any other kind of links that may be useful"
  },
  "ProductOffering": {
    "name": "ProductOffering",
    "domain": "Product",
    "description": "Represents entities that are orderable from the provider of the catalog, this resource includes pricing information."
  },
  "ProductOfferingCharacteristic": {
    "name": "ProductOfferingCharacteristic",
    "domain": "Product",
    "description": "A characteristic quality or distinctive feature of a ProductOffering. The characteristic can take on a discrete value, such as offering rank, and will generally not be modifiable at instantiation in product inventory"
  },
  "ProductOfferingPrice": {
    "name": "ProductOfferingPrice",
    "domain": "Product",
    "description": "Is based on both the basic cost to develop and produce products and the enterprises policy on revenue targets. This price may be further revised through discounting (a Product Offering Price that reflects an alteration). The price, applied for a productOffering may also be influenced by the productOfferingTerm, the customer selected, eg: a productOffering can be offered with multiple terms, like commitment periods for the contract. The price may be influenced by this productOfferingTerm. A productOffering may be cheaper with a 24 month commitment than with a 12 month commitment."
  },
  "ProductOfferingPriceAlteration": {
    "name": "ProductOfferingPriceAlteration",
    "domain": "Product",
    "description": "A discount is a reduction in price. It could be a flat fee such as 10 dollars or a percentage, such as 50% off. A discount always applies to, and thus is associated with, one or more other ProdOfferPrices. So a discount would be 10 dollars off the installation fee or 50% off the per-minute rate."
  },
  "ProductOfferingPriceCharge": {
    "name": "ProductOfferingPriceCharge",
    "domain": "Product",
    "description": "An amount, usually of money, that is asked for when a ProductOffering is bought, rented, or leased."
  },
  "ProductOfferingPriceRef": {
    "name": "ProductOfferingPriceRef",
    "domain": "Product",
    "description": "ProductPriceOffering reference. An amount, usually of money, that is asked for or allowed when a ProductOffering is bought, rented, or leased"
  },
  "ProductOfferingPriceRefOrValue": {
    "name": "ProductOfferingPriceRefOrValue",
    "domain": "Product",
    "description": "A new product offering price being created by value or a reference to an existing product offering price that alreasy created. The polymorphic attributes @type, @schemaLocation & @referredType are related to the product offering price and not to this ReforValue structure"
  },
  "ProductOfferingPriceRelationship": {
    "name": "ProductOfferingPriceRelationship",
    "domain": "Product",
    "description": "Describes a non-composite relationship between product offering prices. For example one price might be an discount alteration for another price."
  },
  "ProductOfferingQualification": {
    "name": "ProductOfferingQualification",
    "domain": "Product",
    "description": "ProductOfferingQualification is used to perform a commercial eligibility. It allows to retrieve a list of productOffering that are commercially available in the context of the interaction (defined be place, channel, party, product)."
  },
  "ProductOfferingQualificationItem": {
    "name": "ProductOfferingQualificationItem",
    "domain": "Product"
  },
  "ProductOfferingQualificationItemRef": {
    "name": "ProductOfferingQualificationItemRef",
    "domain": "Product",
    "description": "It's a productOfferingQualification item that has been executed previously."
  },
  "ProductOfferingQualificationRef": {
    "name": "ProductOfferingQualificationRef",
    "domain": "Product",
    "description": "It's a productOfferingQualification that has been executed previously"
  },
  "ProductOfferingQualificationStateType": {
    "name": "ProductOfferingQualificationStateType",
    "domain": "Product",
    "description": "Possible values for the state of the product offering qualification & item"
  },
  "ProductOfferingRef": {
    "name": "ProductOfferingRef",
    "domain": "Product",
    "description": "ProductOffering reference. A product offering represents entities that are orderable from the provider of the catalog, this resource includes pricing information."
  },
  "ProductOfferingRelationship": {
    "name": "ProductOfferingRelationship",
    "domain": "Product",
    "description": "A relationship between two product Offerings."
  },
  "ProductOfferingTerm": {
    "name": "ProductOfferingTerm",
    "domain": "Product",
    "description": "A condition under which a ProductOffering is made available to Customers. For instance, a productOffering can be offered with multiple commitment periods."
  },
  "ProductPrice": {
    "name": "ProductPrice",
    "domain": "Product",
    "description": "An amount, usually of money, that represents the actual price paid by a Customer for a purchase, a rent or a lease of a Product. The price is valid for a defined period of time."
  },
  "ProductPriceValue": {
    "name": "ProductPriceValue",
    "domain": "Product",
    "description": "Provides all amounts (tax included, duty free, tax rate), used currency and percentage to apply for Price Alteration."
  },
  "ProductRef": {
    "name": "ProductRef",
    "domain": "Product"
  },
  "ProductRefOrValue": {
    "name": "ProductRefOrValue",
    "domain": "Product",
    "description": "A product to be created defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation & @referredType are related to the product entity and not the RelatedProductRefOrValue class itself"
  },
  "ProductRelationship": {
    "name": "ProductRelationship",
    "domain": "Product",
    "description": "Linked products to the one instantiate, such as [bundled] if the product is a bundle and you want to describe the bundled products inside this bundle; [reliesOn] if the product needs another already owned product to rely on (e.g. an option on an already owned mobile access product) [targets] or [isTargeted] (depending on the way of expressing the link) for any other kind of links that may be useful"
  },
  "ProductRequest": {
    "name": "ProductRequest",
    "domain": "Product"
  },
  "ProductRestriction": {
    "name": "ProductRestriction",
    "domain": "Product",
    "description": "In the context of a product order or a product offering qualification, this data structure captures the product information useful to order or qualified  an existing subscribed product or to a new one. This is a subset of relevant product attributes for ordering and qualification"
  },
  "ProductSpecification": {
    "name": "ProductSpecification",
    "domain": "Product",
    "description": "Is a detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to customers or other parties playing a party role."
  },
  "ProductSpecificationCharacteristic": {
    "name": "ProductSpecificationCharacteristic",
    "domain": "Product",
    "description": "A characteristic quality or distinctive feature of a ProductSpecification.  The characteristic can be take on a discrete value, such as color, can take on a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain characteristics, such as color, may be configured during the ordering or some other process."
  },
  "ProductSpecificationCharacteristicRelationship": {
    "name": "ProductSpecificationCharacteristicRelationship",
    "domain": "Product",
    "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among productSpecificationCharacteristics."
  },
  "ProductSpecificationCharacteristicValueUse": {
    "name": "ProductSpecificationCharacteristicValueUse",
    "domain": "Product",
    "description": "A use of the ProductSpecificationCharacteristicValue by a ProductOffering to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering level. For example, a characteristic 'Color' might have values White, Blue, Green, and Red. But, the list of values can be restricted to e.g. White and Blue in an associated product offering. It should be noted that the list of values in 'ProductSpecificationCharacteristicValueUse' is a strict subset of the list of values as defined in the corresponding product specification characteristics."
  },
  "ProductSpecificationRef": {
    "name": "ProductSpecificationRef",
    "domain": "Product",
    "description": "Product specification reference: A ProductSpecification is a detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to customers or other parties playing a party role."
  },
  "ProductSpecificationRelationship": {
    "name": "ProductSpecificationRelationship",
    "domain": "Product",
    "description": "A migration, substitution, dependency or exclusivity relationship between/among product specifications."
  },
  "ProductStatusType": {
    "name": "ProductStatusType",
    "domain": "Product",
    "description": "Possible values for the status of the product"
  },
  "ProductStockReservationRef": {
    "name": "ProductStockReservationRef",
    "domain": "Product",
    "description": "Product Stock Reservation reference"
  },
  "ProductTerm": {
    "name": "ProductTerm",
    "domain": "Product",
    "description": "Description of a productTerm linked to this product. This represent a commitment with a duration"
  },
  "Promotion": {
    "name": "Promotion",
    "domain": "Product",
    "description": "Promotion is used to provide the additional discount, voucher, bonus or gift to the customer who meets the pre-defined criteria. Using promotion, the enterprise is able to attract the users and encourage more consumption, especially continuous purchases. Normally Promotion is not regarded as one type of product or product offering. It is often applied when the customer buys the product offerings with the price or amount surpassing the certain limit."
  },
  "PromotionAction": {
    "name": "PromotionAction",
    "domain": "Product",
    "description": "Action of the promotion. When the customer meets the conditions in the promotion pattern, the customer can be given the benefits in the action."
  },
  "PromotionCriteria": {
    "name": "PromotionCriteria",
    "domain": "Product",
    "description": "Set of criteria to be followed by all parties."
  },
  "PromotionCriteriaGroup": {
    "name": "PromotionCriteriaGroup",
    "domain": "Product",
    "description": "Set of group criteria to promotion. Fulfilling these criteria, parties will receice benefits"
  },
  "PromotionPattern": {
    "name": "PromotionPattern",
    "domain": "Product",
    "description": "Contains the conditions and benefits of the promotion toan eligible party"
  },
  "QualificationItemRelationship": {
    "name": "QualificationItemRelationship",
    "domain": "Product",
    "description": "Structure used to describe relationship between productOfferingQualification item from the same ProductOfferingQualification."
  },
  "QueryUsageConsumption": {
    "name": "QueryUsageConsumption",
    "domain": "Product",
    "description": "An QueryUsageConsumption allows to manage the calculation request of an usage consumption"
  },
  "QuoteItemStateType": {
    "name": "QuoteItemStateType",
    "domain": "Product",
    "description": "Possible values for the state of the quote item"
  },
  "QuoteStateType": {
    "name": "QuoteStateType",
    "domain": "Product",
    "description": "Possible values for the state of the quote"
  },
  "QuoteTerm": {
    "name": "QuoteTerm",
    "domain": "Product",
    "description": "Description of  aproduct Term linked to this quoteItem. This represent a commitment with a duration"
  },
  "RatedProductUsage": {
    "name": "RatedProductUsage",
    "domain": "Product",
    "description": "An occurrence of employing a product for its intended purpose with all rating details"
  },
  "Recommendation": {
    "name": "Recommendation",
    "domain": "Product",
    "description": "Recommendation API is used to recommend offering quickly based on the history and real-time context of customer. It is a real-time and personalized recommendation API. It is usually provided by e-commerce or BSS, CRM system in omni-channel."
  },
  "RecommendationItem": {
    "name": "RecommendationItem",
    "domain": "Product",
    "description": "A list of recommendation items. Every item is a product offering and its rank."
  },
  "RelatedProductOrderItem": {
    "name": "RelatedProductOrderItem",
    "domain": "Product",
    "description": "RelatedProductOrderItem (ProductOrder item) .The product order item which triggered product creation/change/termination."
  },
  "TargetProductSchema": {
    "name": "TargetProductSchema",
    "domain": "Product",
    "description": "The reference object to the schema and type of target product which is described by product specification"
  },
  "Usage": {
    "name": "Usage",
    "domain": "Product",
    "description": "An occurrence of employing a Product, Service, or Resource for its intended purpose, which is of interest to the business and can have charges applied to it. It is comprised of characteristics, which represent attributes of usage."
  },
  "UsageCharacteristic": {
    "name": "UsageCharacteristic",
    "domain": "Product",
    "description": "Provides the value of a given characteristic"
  },
  "UsageConsumption": {
    "name": "UsageConsumption",
    "domain": "Product",
    "description": "An usage consumption enables to know at a given point the balances and the consumption counters related to various buckets (SMS, Voice, Data for example). It could be calculated for a device identified by a public key (msisdn number for a mobile device for example or PSTN or VOIP number for a fix device), for a subscribed offer or option or for an user."
  },
  "UsageConsumptionProductRef": {
    "name": "UsageConsumptionProductRef",
    "domain": "Product"
  },
  "UsageSpecCharacteristic": {
    "name": "UsageSpecCharacteristic",
    "domain": "Product",
    "description": "A detailed description of an attribute that defines a particular type of usage, described by its name, category, type, presence and a set of allowed values"
  },
  "UsageSpecCharacteristicValue": {
    "name": "UsageSpecCharacteristicValue",
    "domain": "Product",
    "description": "A value that can be assigned to a UsageSpecCharacteristic."
  },
  "UsageSpecification": {
    "name": "UsageSpecification",
    "domain": "Product",
    "description": "A detailed description of a usage event that are of interest to the business and can have charges applied to it. It is comprised of characteristics, which define all attributes known for a particular type of usage."
  },
  "UsageSpecificationRef": {
    "name": "UsageSpecificationRef",
    "domain": "Product",
    "description": "UsageSpecification reference. UsageSpecification is a detailed description of a usage event that are of interest to the business and can have charges applied to it. It is comprised of characteristics, which define all attributes known for a particular type of usage."
  },
  "UsageStatusType": {
    "name": "UsageStatusType",
    "domain": "Product",
    "description": "Possible values for the status of the Usage"
  },
  "Warranty": {
    "name": "Warranty",
    "domain": "Product"
  },
  "WarrantyProduct": {
    "name": "WarrantyProduct",
    "domain": "Product"
  },
  "WarrantyProductSpecification": {
    "name": "WarrantyProductSpecification",
    "domain": "Product"
  },
  "WarrantyProductSpecificationRef": {
    "name": "WarrantyProductSpecificationRef",
    "domain": "Product"
  },
  "WarrantyRef": {
    "name": "WarrantyRef",
    "domain": "Product"
  },
  "WarrantyRelationship": {
    "name": "WarrantyRelationship",
    "domain": "Product",
    "description": "Linked products to the one instantiate, such as [bundled] if the product is a bundle and you want to describe the bundled products inside this bundle; [reliesOn] if the product needs another already owned product to rely on (e.g. an option on an already owned mobile access product) [targets] or [isTargeted] (depending on the way of expressing the link) for any other kind of links that may be useful"
  },
  "WarrantySpecification": {
    "name": "WarrantySpecification",
    "domain": "Product"
  },
  "WarrantySpecificationRef": {
    "name": "WarrantySpecificationRef",
    "domain": "Product"
  },
  "WarrantySpecificationRelationship": {
    "name": "WarrantySpecificationRelationship",
    "domain": "Product",
    "description": "A migration, substitution, dependency or exclusivity relationship between/among entity specifications."
  },
  "WarrantyStateType": {
    "name": "WarrantyStateType",
    "domain": "Product",
    "description": "Valid values for the lifecycle state of the service"
  },
  "AckAlarms": {
    "name": "AckAlarms",
    "domain": "Resource",
    "description": "Task resource for the acknowledge alarms operation"
  },
  "AdjustProductStock": {
    "name": "AdjustProductStock",
    "domain": "Resource",
    "description": "AdjustProductStock is used to log and execute on or several Product Stock level change"
  },
  "AdjustProductStockItem": {
    "name": "AdjustProductStockItem",
    "domain": "Resource",
    "description": "A list of AdjustProductStock items. Every item is a ProductStock adjustement request."
  },
  "AffectedService": {
    "name": "AffectedService",
    "domain": "Resource",
    "description": ""
  },
  "Alarm": {
    "name": "Alarm",
    "domain": "Resource",
    "description": "This resource represents an alarm supporting the information model defined in ITU-T X.733."
  },
  "AlarmedObject": {
    "name": "AlarmedObject",
    "domain": "Resource",
    "description": "Identifies the managed object instance associated with the alarm."
  },
  "AlarmRef": {
    "name": "AlarmRef",
    "domain": "Resource"
  },
  "AlarmRefOrValue": {
    "name": "AlarmRefOrValue",
    "domain": "Resource",
    "description": "An alarm defined by reference or value. The polymorphic attributes @type, @schemaLocation & @referredType are related to the alarm entity and not the RelatedAlarmRefOrValue class itself"
  },
  "AlarmType": {
    "name": "AlarmType",
    "domain": "Resource",
    "description": "Categorizes the alarm (X.733 8.1.1, 3GPP TS 32.111-2 Annex A)"
  },
  "AlternateProductStock": {
    "name": "AlternateProductStock",
    "domain": "Resource",
    "description": "AlternateProductStock is used to log and execute Alternate about product  stock availability"
  },
  "AlternateResourceProposal": {
    "name": "AlternateResourceProposal",
    "domain": "Resource",
    "description": "Alternate resource proposal is used when the requested resource is not available with characteristic and date asked for. An alternate proposal could be a distinct resourceSpecification close to requested one or same as requested but with a different activation date"
  },
  "API": {
    "name": "API",
    "domain": "Resource",
    "description": "An Application Program Interface (API) is a set of routines, protocols, and tools for building software applications."
  },
  "APIRef": {
    "name": "APIRef",
    "domain": "Resource",
    "description": "API reference. An API, an abbreviation of application program interface, is a set of routines, protocols, and tools for building software applications."
  },
  "APISpecification": {
    "name": "APISpecification",
    "domain": "Resource",
    "description": "A base class used to define the invariant characteristics and behavior (attributes, constraints, and relationships) of an API."
  },
  "AppliedCapacityAmount": {
    "name": "AppliedCapacityAmount",
    "domain": "Resource",
    "description": "The amount of ResourceCapacityDemand applied to a CapacityAmount."
  },
  "AppliedResourceCapacity": {
    "name": "AppliedResourceCapacity",
    "domain": "Resource"
  },
  "CancelResourceOrder": {
    "name": "CancelResourceOrder",
    "domain": "Resource",
    "description": "Request for cancellation an existing resource order"
  },
  "CancelResourceReservation": {
    "name": "CancelResourceReservation",
    "domain": "Resource"
  },
  "CategoryType": {
    "name": "CategoryType",
    "domain": "Resource"
  },
  "CheckProductStock": {
    "name": "CheckProductStock",
    "domain": "Resource",
    "description": "CheckProductStock is used to log and execute check about product stock availability"
  },
  "CheckProductStockItem": {
    "name": "CheckProductStockItem",
    "domain": "Resource",
    "description": "CheckProductStockItem is used to log and execute query about one product (or configured product) stock availability"
  },
  "CheckResourceQualification": {
    "name": "CheckResourceQualification",
    "domain": "Resource",
    "description": "CheckResourceQualification is used to perform a technical eligibility on service configuration(s). It allows to retrieve services that are technically available in the context of the interaction (place, party, service characteristics, ...)."
  },
  "CheckResourceQualificationItem": {
    "name": "CheckResourceQualificationItem",
    "domain": "Resource",
    "description": "A ResourceQualificationItem relates to a specific resource being checked in a qualification operation."
  },
  "ClearAlarms": {
    "name": "ClearAlarms",
    "domain": "Resource",
    "description": "Task resource for clear alarms operation"
  },
  "CommentAlarms": {
    "name": "CommentAlarms",
    "domain": "Resource",
    "description": "Task resource for comment alarms operation"
  },
  "ConcreteResource": {
    "name": "ConcreteResource",
    "domain": "Resource"
  },
  "ConcreteResourceMapping": {
    "name": "ConcreteResourceMapping",
    "domain": "Resource",
    "description": "Individual mapping from an abstract resource to a list of concrete resources"
  },
  "Connection": {
    "name": "Connection",
    "domain": "Resource",
    "description": "An edge in a resource graph."
  },
  "ConnectionPointRef": {
    "name": "ConnectionPointRef",
    "domain": "Resource",
    "description": "Connection point reference. A connection point provides a service access point (SAP) for input and/or output of the resource function."
  },
  "ConnectionPointSpecificationRef": {
    "name": "ConnectionPointSpecificationRef",
    "domain": "Resource",
    "description": "Connection point specification reference. A connection point provides a service access point (SAP) for input and/or output of the resource function."
  },
  "ConnectionSpecification": {
    "name": "ConnectionSpecification",
    "domain": "Resource",
    "description": "A specification for an edge in a resource graph."
  },
  "CorrelatedAlarm": {
    "name": "CorrelatedAlarm",
    "domain": "Resource",
    "description": "Indicates the alarms attached to this alarm as correlated alarms from a correlation point of view. An alarm can be correlated to one or more underlying alarms. There might be multiple levels of alarm correlation and an underlying alarm in one relation can be itself a parent alarm for other underlying alarms."
  },
  "CrossedThresholdInformation": {
    "name": "CrossedThresholdInformation",
    "domain": "Resource",
    "description": "Identifies the details of the threshold that has been crossed."
  },
  "DataAccessEndpoint": {
    "name": "DataAccessEndpoint",
    "domain": "Resource",
    "description": "This is the endpoint exposed by the IoT Device to authorized users."
  },
  "DeviceCommons": {
    "name": "DeviceCommons",
    "domain": "Resource"
  },
  "EndpointRef": {
    "name": "EndpointRef",
    "domain": "Resource",
    "description": "A vertex in a resource graph."
  },
  "EndpointSpecificationRef": {
    "name": "EndpointSpecificationRef",
    "domain": "Resource",
    "description": "A specification for a vertex in a resource graph."
  },
  "GroupAlarms": {
    "name": "GroupAlarms",
    "domain": "Resource",
    "description": "Task resource for group alarms operation"
  },
  "Heal": {
    "name": "Heal",
    "domain": "Resource",
    "description": "Task Resource used to request healing of a Resource Function"
  },
  "HealPolicyRef": {
    "name": "HealPolicyRef",
    "domain": "Resource",
    "description": "Heal policy reference."
  },
  "HostingPlatformRequirement": {
    "name": "HostingPlatformRequirement",
    "domain": "Resource",
    "description": "A HostingPlatformRequirement implements a HostingPlatformRequirementSpecification for a specific InstalledSoftware."
  },
  "HostingPlatformRequirementSpecification": {
    "name": "HostingPlatformRequirementSpecification",
    "domain": "Resource",
    "description": "This is a base class that is used to define the invariant characteristics and behavior (attributes, constraints, and relationships) of a HostingPlatformRequirement Resource."
  },
  "InstalledSoftware": {
    "name": "InstalledSoftware",
    "domain": "Resource",
    "description": "A SoftwareSpecification deployed using the SoftwareSupportPackage on platform which meets the HostingPlatformRequirements"
  },
  "IotDataEvent": {
    "name": "IotDataEvent",
    "domain": "Resource",
    "description": "#TODO"
  },
  "IotDevice": {
    "name": "IotDevice",
    "domain": "Resource",
    "description": "#TODO"
  },
  "IotDeviceSpecification": {
    "name": "IotDeviceSpecification",
    "domain": "Resource",
    "description": "#TODO"
  },
  "IotManagementEvent": {
    "name": "IotManagementEvent",
    "domain": "Resource",
    "description": "Generic IotManagementEvent structure used to define commonalities between sub concepts of PartyIotManagementEvent and Financial IotManagementEvent."
  },
  "IotService": {
    "name": "IotService",
    "domain": "Resource",
    "description": "#TODO"
  },
  "IotServiceSpecification": {
    "name": "IotServiceSpecification",
    "domain": "Resource",
    "description": "#TODO"
  },
  "LogicalResource": {
    "name": "LogicalResource",
    "domain": "Resource",
    "description": "Logic resource is a type of resource that describes the common set of attributes shared by all concrete logical resources (e.g. TPE, MSISDN, IP Addresses) in the inventory."
  },
  "LogicalResourceRef": {
    "name": "LogicalResourceRef",
    "domain": "Resource",
    "description": "reference to the LogicalResource eg MSISDN"
  },
  "LogicalResourceSpecification": {
    "name": "LogicalResourceSpecification",
    "domain": "Resource",
    "description": "This is an example of a derived class of ResourceSpecification, and is used to define the invariant characteristics and behavior (attributes, methods, constraints, and relationships) of a LogicalResource."
  },
  "MacAddressType": {
    "name": "MacAddressType",
    "domain": "Resource",
    "description": "#TODO"
  },
  "Migrate": {
    "name": "Migrate",
    "domain": "Resource",
    "description": "Task resource used to request migration of the Resource Function"
  },
  "ParentAlarm": {
    "name": "ParentAlarm",
    "domain": "Resource",
    "description": "Indicates the alarms attached to this alarm as parent alarms from a correlation point of view. "
  },
  "PhysicalResource": {
    "name": "PhysicalResource",
    "domain": "Resource",
    "description": "Physical resource is a type of resource that describes the common set of attributes shared by all concrete physical resources (e.g. EQUIPMENT) in the inventory."
  },
  "PhysicalResourceSpecification": {
    "name": "PhysicalResourceSpecification",
    "domain": "Resource",
    "description": "This is an example of a derived class of ResourceSpecification, and is used to define the invariant characteristics and behavior (attributes, methods, constraints, and relationships) of a PhysicalResource."
  },
  "ProbableCause": {
    "name": "ProbableCause",
    "domain": "Resource",
    "description": "This resource represents Probable Cause values defined in ITU-T X.733 and 3GPP TS 32.111-2 Annex B."
  },
  "ProductStock": {
    "name": "ProductStock",
    "domain": "Resource",
    "description": "ProductStock is a base class for defining a product (or configured product with values characteristic) stock level."
  },
  "ProductStockRef": {
    "name": "ProductStockRef",
    "domain": "Resource",
    "description": "ProductStockRef is a reference to a product stock"
  },
  "ProductStockRelationship": {
    "name": "ProductStockRelationship",
    "domain": "Resource",
    "description": "Linked product stock  with a type relationship."
  },
  "ProductStockStatusType": {
    "name": "ProductStockStatusType",
    "domain": "Resource",
    "description": "Possible values for the status of the stock  level"
  },
  "ProductStockUsageType": {
    "name": "ProductStockUsageType",
    "domain": "Resource",
    "description": "Possible values for the usage of the stock level - This is illustrative"
  },
  "QueryProductStock": {
    "name": "QueryProductStock",
    "domain": "Resource",
    "description": "QueryProductStock is used to query product stock availability"
  },
  "QueryResourceQualification": {
    "name": "QueryResourceQualification",
    "domain": "Resource",
    "description": "QueryResourceQualification is used to retrieve a list of resources that are technically available in the context of the interaction (place, party, resource characteristics, ...)."
  },
  "QueryServiceQualification": {
    "name": "QueryServiceQualification",
    "domain": "Resource",
    "description": "QueryServiceQualification is used to retrieve a list of services that are technically available in the context of the interaction (place, party, service characteristics, ...)."
  },
  "RealizingResourceRef": {
    "name": "RealizingResourceRef",
    "domain": "Resource",
    "description": "RealizingResource reference. RealizingResource is a link to the resource that realizes the product."
  },
  "RequestedPeriod": {
    "name": "RequestedPeriod",
    "domain": "Resource",
    "description": "The period of time for which user requested to use the resources.\r\nThe user can request on the start date without the end date."
  },
  "ReserveProductStock": {
    "name": "ReserveProductStock",
    "domain": "Resource",
    "description": "ReserveProductStock is used to request a product stock reservation"
  },
  "ReserveProductStockItem": {
    "name": "ReserveProductStockItem",
    "domain": "Resource",
    "description": "ReserveProductStockItem is used to request a stock reservation item for a product"
  },
  "ReserveProductStockRef": {
    "name": "ReserveProductStockRef",
    "domain": "Resource",
    "description": "Product Stock Reservation reference"
  },
  "Resource": {
    "name": "Resource",
    "domain": "Resource",
    "description": "Resource is an abstract entity that describes the common set of attributes shared by all concrete resources (e.g. TPE, EQUIPMENT) in the inventory."
  },
  "ResourceAdministrativeStateType": {
    "name": "ResourceAdministrativeStateType",
    "domain": "Resource",
    "description": "ResourceAdministrativeStateType enumerations"
  },
  "ResourceAlarmRef": {
    "name": "ResourceAlarmRef",
    "domain": "Resource",
    "description": "A set of alarm ids identifying the alarms that are underlying this problem."
  },
  "ResourceCandidate": {
    "name": "ResourceCandidate",
    "domain": "Resource",
    "description": "ResourceCandidate is an entity that makes a resource specification available to a catalog. A ResourceCandidate and its associated resource specification may be published - made visible - in any number of resource catalogs, or in none."
  },
  "ResourceCandidateRef": {
    "name": "ResourceCandidateRef",
    "domain": "Resource",
    "description": "ResourceCandidate is an entity that makes a resource specification available to a catalog. A ResourceCandidate and its associated resource specification may be published - made visible - in any number of resource catalogs, or in none."
  },
  "ResourceCapacityDemand": {
    "name": "ResourceCapacityDemand",
    "domain": "Resource",
    "description": "the amount of capacity that is planned to be consumed or has been consumed."
  },
  "ResourceCatalog": {
    "name": "ResourceCatalog",
    "domain": "Resource",
    "description": "The root entity for resource catalog management.\nA resource catalog is a group of resource specifications made available through resource candidates that an organization provides to the consumers (internal consumers like its employees or B2B customers or B2C customers)."
  },
  "ResourceCategory": {
    "name": "ResourceCategory",
    "domain": "Resource",
    "description": "The (resource) category resource is used to group resource candidates in logical containers. Categories can contain other categories."
  },
  "ResourceCategoryRef": {
    "name": "ResourceCategoryRef",
    "domain": "Resource",
    "description": "The (resource) category resource is used to group resource candidates in logical containers. Categories can contain other categories."
  },
  "ResourceCharacteristic": {
    "name": "ResourceCharacteristic",
    "domain": "Resource"
  },
  "ResourceConfiguration": {
    "name": "ResourceConfiguration",
    "domain": "Resource",
    "description": "A representation of how a Resource operates or functions in terms of characteristics and related Resource(s)"
  },
  "ResourceConfigurationSpecification": {
    "name": "ResourceConfigurationSpecification",
    "domain": "Resource",
    "description": "The definition of how a Resource operates or functions in terms of CharacteristicSpecification(s) and related ResourceSpecification(s)"
  },
  "ResourceEligibilityUnavailabilityReason": {
    "name": "ResourceEligibilityUnavailabilityReason",
    "domain": "Resource",
    "description": "Reason for eligibility result if the ResourceQualification result is no (meaning the Resource is not available)"
  },
  "ResourceEntity": {
    "name": "ResourceEntity",
    "domain": "Resource",
    "description": "Base schema for REST Resources"
  },
  "ResourceFunction": {
    "name": "ResourceFunction",
    "domain": "Resource",
    "description": "A ResourceFunction is a behavior to transform inputs of any nature into outputs of any nature independently from the way it is provided."
  },
  "ResourceFunctionRef": {
    "name": "ResourceFunctionRef",
    "domain": "Resource",
    "description": "Resource Function reference."
  },
  "ResourceFunctionSpecification": {
    "name": "ResourceFunctionSpecification",
    "domain": "Resource",
    "description": "Specifies a function as a behavior to transform inputs of any nature into outputs of any nature independently from the way it is provided, for example a Medium to Large Enterprise Firewall."
  },
  "ResourceFunctionSpecificationRef": {
    "name": "ResourceFunctionSpecificationRef",
    "domain": "Resource",
    "description": "ResourceFunctionSpecification reference."
  },
  "ResourceGraph": {
    "name": "ResourceGraph",
    "domain": "Resource",
    "description": "Resource graph"
  },
  "ResourceGraphRef": {
    "name": "ResourceGraphRef",
    "domain": "Resource",
    "description": "Resource graph reference."
  },
  "ResourceGraphRelationship": {
    "name": "ResourceGraphRelationship",
    "domain": "Resource",
    "description": "Describes links between resource graphs."
  },
  "ResourceGraphSpecification": {
    "name": "ResourceGraphSpecification",
    "domain": "Resource",
    "description": "Resource graph specification."
  },
  "ResourceGraphSpecificationRef": {
    "name": "ResourceGraphSpecificationRef",
    "domain": "Resource",
    "description": "Resource graph specification reference."
  },
  "ResourceGraphSpecificationRelationship": {
    "name": "ResourceGraphSpecificationRelationship",
    "domain": "Resource",
    "description": "Describes link between resource graph specifications."
  },
  "ResourceOperationalStateType": {
    "name": "ResourceOperationalStateType",
    "domain": "Resource",
    "description": "ResourceOperationalStateType enumerations"
  },
  "ResourceOrder": {
    "name": "ResourceOrder",
    "domain": "Resource",
    "description": "A Resource Order is a request to provision a set of Resources (logical and physical) triggered by the request to provision a Service through a Service Order"
  },
  "ResourceOrderItem": {
    "name": "ResourceOrderItem",
    "domain": "Resource",
    "description": "An identified part of the order. A resource order is decomposed into one or more order items."
  },
  "ResourceOrderItemRef": {
    "name": "ResourceOrderItemRef",
    "domain": "Resource"
  },
  "ResourceOrderItemRelationship": {
    "name": "ResourceOrderItemRelationship",
    "domain": "Resource"
  },
  "ResourceOrderItemStateType": {
    "name": "ResourceOrderItemStateType",
    "domain": "Resource",
    "description": "Possible values for the state of the order item"
  },
  "ResourceOrderRef": {
    "name": "ResourceOrderRef",
    "domain": "Resource"
  },
  "ResourceOrderRelationship": {
    "name": "ResourceOrderRelationship",
    "domain": "Resource"
  },
  "ResourceOrderStateType": {
    "name": "ResourceOrderStateType",
    "domain": "Resource",
    "description": "Possible values for the state of the order"
  },
  "ResourcePool": {
    "name": "ResourcePool",
    "domain": "Resource",
    "description": "manages resource capacity with the resource state"
  },
  "ResourceQualification": {
    "name": "ResourceQualification",
    "domain": "Resource",
    "description": "ResourceQualification is used to perform a technical eligibility. It allows to retrieve a list of resources that are technically available in the context of the interaction (place, party, resource characteristics, ...)."
  },
  "ResourceQualificationItem": {
    "name": "ResourceQualificationItem",
    "domain": "Resource",
    "description": "A ResourceQualificationItem relates to a specific resource being checked in a qualification operation."
  },
  "ResourceQualificationItemRelationship": {
    "name": "ResourceQualificationItemRelationship",
    "domain": "Resource",
    "description": "Structure used to describe relationship between resourceQualification items from the same resourceQualification."
  },
  "ResourceQualificationRelationship": {
    "name": "ResourceQualificationRelationship",
    "domain": "Resource"
  },
  "ResourceRef": {
    "name": "ResourceRef",
    "domain": "Resource"
  },
  "ResourceRefOrValue": {
    "name": "ResourceRefOrValue",
    "domain": "Resource",
    "description": "Resource is an abstract entity that describes the common set of attributes shared by all concrete resources. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Resource entity and not the related ResourceRefOrValue class itself"
  },
  "ResourceRelationship": {
    "name": "ResourceRelationship",
    "domain": "Resource",
    "description": "Linked resources to the one instantiate, such as [bundled] if the resource is a bundle and you want to describe the bundled resources inside this bundle; [reliesOn] if the resource needs another already owned resource to rely on (e.g. an option on an already owned mobile access resource) [targets] or [isTargeted] (depending on the way of expressing the link) for any other kind of links that may be useful"
  },
  "ResourceReservation": {
    "name": "ResourceReservation",
    "domain": "Resource"
  },
  "ResourceReservationItem": {
    "name": "ResourceReservationItem",
    "domain": "Resource"
  },
  "ResourceReservationItemRef": {
    "name": "ResourceReservationItemRef",
    "domain": "Resource",
    "description": "Reference to a reservation item that can typically be queried with another API."
  },
  "ResourceReservationRef": {
    "name": "ResourceReservationRef",
    "domain": "Resource"
  },
  "ResourceSpecification": {
    "name": "ResourceSpecification",
    "domain": "Resource",
    "description": "Resources are physical or non-physical components (or some combination of these) within an enterprise's infrastructure or inventory. They are typically consumed or used by services (for example a physical port assigned to a service) or contribute to the realization of a Product (for example, a SIM card). They can be drawn from the Application, Computing and Network domains, and include, for example, Network Elements, software, IT systems, content and information, and technology components.\nA ResourceSpecification is a base class that represents a generic means for implementing a particular type of Resource. In essence, a ResourceSpecification defines the common attributes and relationships of a set of related Resources, while Resource defines a specific instance that is based on a particular ResourceSpecification."
  },
  "ResourceSpecificationCharacteristic": {
    "name": "ResourceSpecificationCharacteristic",
    "domain": "Resource",
    "description": "This class defines the characteristic features of a resource specification. Every ResourceSpecification has a variety of important attributes, methods, constraints, and\nrelationships, which distinguish a resource specification from other resource specifications."
  },
  "ResourceSpecificationCharacteristicRelationship": {
    "name": "ResourceSpecificationCharacteristicRelationship",
    "domain": "Resource",
    "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among ResourceSpecificationCharacteristics. The specification characteristic is embedded within the specification whose ID and href are in this entity, and identified by its ID."
  },
  "ResourceSpecificationRef": {
    "name": "ResourceSpecificationRef",
    "domain": "Resource",
    "description": "Resources are physical or non-physical components (or some combination of these) within an enterprise's infrastructure or inventory. They are typically consumed or used by services (for example a physical port assigned to a service) or contribute to the realization of a Product (for example, a SIM card). They can be drawn from the Application, Computing and Network domains, and include, for example, Network Elements, software, IT systems, content and information, and technology components.\nA ResourceSpecification is an abstract base class for representing a generic means for implementing a particular type of Resource. In essence, a ResourceSpecification defines the common attributes and relationships of a set of related Resources, while Resource defines a specific instance that is based on a particular ResourceSpecification."
  },
  "ResourceSpecificationRelationship": {
    "name": "ResourceSpecificationRelationship",
    "domain": "Resource",
    "description": "A migration, substitution, dependency or exclusivity relationship between/among resource specifications."
  },
  "ResourceStateType": {
    "name": "ResourceStateType",
    "domain": "Resource",
    "description": "Valid values for the lifecycle state of the resource"
  },
  "ResourceStatusType": {
    "name": "ResourceStatusType",
    "domain": "Resource",
    "description": "ResourceStatusType enumerations"
  },
  "ResourceUsageStateType": {
    "name": "ResourceUsageStateType",
    "domain": "Resource",
    "description": "ResourceUsageStateType enumerations"
  },
  "Scale": {
    "name": "Scale",
    "domain": "Resource",
    "description": "Task Resource used to request scaling of a Resource Function"
  },
  "ScheduleRef": {
    "name": "ScheduleRef",
    "domain": "Resource",
    "description": "Schedule reference."
  },
  "SoftwareRef": {
    "name": "SoftwareRef",
    "domain": "Resource",
    "description": "Software Ref"
  },
  "SoftwareResource": {
    "name": "SoftwareResource",
    "domain": "Resource",
    "description": "Abstract class describing the common set of attributes shared by all concrete software resources (e.g. API, InstalledSoftware)"
  },
  "SoftwareResourceSpecification": {
    "name": "SoftwareResourceSpecification",
    "domain": "Resource",
    "description": "An abstract base class used to define the invariant characteristics and behavior (attributes, constraints, and relationships) of a SoftwareResource."
  },
  "SoftwareSpecification": {
    "name": "SoftwareSpecification",
    "domain": "Resource",
    "description": "A base class used to define the invariant characteristics and behavior (attributes, constraints, and relationships) of an InstalledSoftware"
  },
  "SoftwareSupportPackage": {
    "name": "SoftwareSupportPackage",
    "domain": "Resource",
    "description": "A SofwareSupportPackage represents the package acquired by a consumer from a software vendor. It can be materialized as one or several files (data) downloaded online or copied on a physical support. It contains all files required for deployment and installation such as installation manager and at minimum, one of the files constitutes the set of machine readable instructions that will be executed automatically after it is installed."
  },
  "SoftwareSupportPackageRef": {
    "name": "SoftwareSupportPackageRef",
    "domain": "Resource",
    "description": "Reference to a SoftwareSupportPackage"
  },
  "SoftwareSupportPackageSpecification": {
    "name": "SoftwareSupportPackageSpecification",
    "domain": "Resource",
    "description": "A base class used to define the invariant characteristics and behavior (attributes, constraints, and relationships) of a SoftwareSupportPackage"
  },
  "SupportingResource": {
    "name": "SupportingResource",
    "domain": "Resource"
  },
  "TargetResourceSchema": {
    "name": "TargetResourceSchema",
    "domain": "Resource",
    "description": "The reference object to the schema and type of target resource which is described by resource specification"
  },
  "ThresholdRef": {
    "name": "ThresholdRef",
    "domain": "Resource"
  },
  "UnAckAlarms": {
    "name": "UnAckAlarms",
    "domain": "Resource",
    "description": "Task resource for unacknowledge alarms operation"
  },
  "UnGroupAlarms": {
    "name": "UnGroupAlarms",
    "domain": "Resource",
    "description": "Task resource for ungroup alarms operation"
  },
  "UsageConsumptionLogicalResourceRef": {
    "name": "UsageConsumptionLogicalResourceRef",
    "domain": "Resource",
    "description": "reference to the LogicalResource eg MSISDN"
  },
  "AlternateServiceProposal": {
    "name": "AlternateServiceProposal",
    "domain": "Service",
    "description": "Alternate service proposal is used when the requested service is not available with characteristic and date asked for. An alternate proposal could be a distinct serviceSpecification close to requested one or same as requested but with a different activation date"
  },
  "AppliedConsequence": {
    "name": "AppliedConsequence",
    "domain": "Service",
    "description": "An Applied Consequence defines the action (prescribed action or notification) to take when a \nMeasureThresholdRuleViolation occurs."
  },
  "BaseService": {
    "name": "BaseService",
    "domain": "Service",
    "description": "In the context of a service order and depending on the action requested (add/modify/delete/noChange) this data structure captures the configuration to apply to an existing subscribed service or to a new one"
  },
  "CancelServiceOrder": {
    "name": "CancelServiceOrder",
    "domain": "Service",
    "description": "Request for cancellation an existing Service order"
  },
  "CheckServiceQualification": {
    "name": "CheckServiceQualification",
    "domain": "Service",
    "description": "CheckServiceQualification is used to perform a technical eligibility on service configuration(s). It allows to retrieve services that are technically available in the context of the interaction (place, party, service characteristics, ...)."
  },
  "CheckServiceQualificationItem": {
    "name": "CheckServiceQualificationItem",
    "domain": "Service",
    "description": "A ServiceQualificationItem relates to a specific service being checked in a qualification operation."
  },
  "FirstAlert": {
    "name": "FirstAlert",
    "domain": "Service",
    "description": "Indicates what first alerted the system to the problem. It is not the root cause of the Service Problem. Examples: Threshold crossing alert"
  },
  "ImpactPattern": {
    "name": "ImpactPattern",
    "domain": "Service",
    "description": "Define the patterns of impact (optional), such as other service characteristics- Used when defining impact through another pattern than the pre-defined attributes"
  },
  "MeasureThresholdRuleViolation": {
    "name": "MeasureThresholdRuleViolation",
    "domain": "Service",
    "description": "A measureThresholdRuleViolation is a violation of a rule that defines the in the \nMericDefMeasureThresholdRule."
  },
  "MetricDefMeasureConsequence": {
    "name": "MetricDefMeasureConsequence",
    "domain": "Service",
    "description": "A MetricDefMeasureConsequence defines the action (prescribed action or notification) to take when a \nMetricDefMeasureThresholdRule is crossed."
  },
  "MetricDefMeasureThresholdRule": {
    "name": "MetricDefMeasureThresholdRule",
    "domain": "Service",
    "description": "A MetricDefMeasureThresholdRule is a rule that defines the condition (raise or clear) to achieve to apply \nconsequences when a threshold is crossed or ceased to be crossed. It also defines the severity of the \nraise or clear of the threshold."
  },
  "ProblemAcknowledgement": {
    "name": "ProblemAcknowledgement",
    "domain": "Service",
    "description": "Task resource that requests acknowledgement of problems by the problem handler."
  },
  "ProblemGroup": {
    "name": "ProblemGroup",
    "domain": "Service",
    "description": "Task resource that requests Service Problems to be grouped together into a parent and set of children"
  },
  "ProblemUnacknowledgement": {
    "name": "ProblemUnacknowledgement",
    "domain": "Service",
    "description": "Task resource that requests unacknowledgement of problems, rolling back the status of the problems from Acknowledged to Submitted."
  },
  "ProblemUngroup": {
    "name": "ProblemUngroup",
    "domain": "Service",
    "description": "Task resource that requests Service Problems to be ungrouped from a parent"
  },
  "QualityOfService": {
    "name": "QualityOfService",
    "domain": "Service",
    "description": "This object represents expected quality of service in terms of quality key index (KQI or KPI) with their associated service level objective and specification"
  },
  "RelatedServiceOrderItem": {
    "name": "RelatedServiceOrderItem",
    "domain": "Service",
    "description": "RelatedServiceOrderItem (a ServiceOrder item) .The service order item which triggered service creation/change/termination."
  },
  "Service": {
    "name": "Service",
    "domain": "Service",
    "description": "Service is a base class for defining the Service hierarchy. All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService and ResourceFacingService."
  },
  "ServiceCandidate": {
    "name": "ServiceCandidate",
    "domain": "Service",
    "description": "ServiceCandidate is an entity that makes a service specification available to a catalog. A\nServiceCandidate and its associated service specification may be published - made visible - in any number of service catalogs, or in none. One service specification can be composed of other service specifications."
  },
  "ServiceCandidateRef": {
    "name": "ServiceCandidateRef",
    "domain": "Service",
    "description": "ServiceCandidate reference. ServiceCandidate is an entity that makes a ServiceSpecification available to a catalog."
  },
  "ServiceCatalog": {
    "name": "ServiceCatalog",
    "domain": "Service",
    "description": "The root entity for service catalog management.\nA service catalog is a group of service specifications made available through service candidates that an organization provides to the consumers (internal consumers like its employees or B2B customers or B2C customers). \nA service catalog typically includes name, description and time period that is valid for. It will have a list of ServiceCandidate catalog items. A ServiceCandidate is an entity that makes a ServiceSpecification available to a catalog.\nA ServiceCandidate and its associated ServiceSpecification may be \"published\" - made visible -in any number of ServiceCatalogs, or in none."
  },
  "ServiceCategory": {
    "name": "ServiceCategory",
    "domain": "Service",
    "description": "The (service) category resource is used to group service candidates in logical containers. Categories can contain other categories."
  },
  "ServiceCategoryRef": {
    "name": "ServiceCategoryRef",
    "domain": "Service",
    "description": "The (service) category resource is used to group service candidates in logical containers. Categories can contain other categories."
  },
  "ServiceCharacteristic": {
    "name": "ServiceCharacteristic",
    "domain": "Service",
    "description": "is a list of name value pairs that define the service characteristics"
  },
  "ServiceConfiguration": {
    "name": "ServiceConfiguration",
    "domain": "Service",
    "description": "A representation of how a Service operates or functions in terms of characteristics and related Service(s)"
  },
  "ServiceConfigurationSpecfication": {
    "name": "ServiceConfigurationSpecfication",
    "domain": "Service"
  },
  "ServiceEligibilityUnavailabilityReason": {
    "name": "ServiceEligibilityUnavailabilityReason",
    "domain": "Service",
    "description": "Reason for eligibility result if the ServiceQualification result is no (meaning the Service is not available)"
  },
  "ServiceFeatureSpecification": {
    "name": "ServiceFeatureSpecification",
    "domain": "Service",
    "description": "Specification for service features"
  },
  "ServiceLevelObjective": {
    "name": "ServiceLevelObjective",
    "domain": "Service",
    "description": "Service level objectives are defined in terms of parameters and metrics, thresholds, and tolerances \nassociated with the parameters."
  },
  "ServiceLevelObjectiveRef": {
    "name": "ServiceLevelObjectiveRef",
    "domain": "Service",
    "description": "A set of Service Level Objectives that are contained in the Service Level Specification."
  },
  "ServiceLevelSpecConsequence": {
    "name": "ServiceLevelSpecConsequence",
    "domain": "Service",
    "description": "Some consequences for the provider of the Service are resulted when the service level objective\ndoes not meet."
  },
  "ServiceLevelSpecification": {
    "name": "ServiceLevelSpecification",
    "domain": "Service",
    "description": "A Service Level Specification represents a pre-defined or negotiated set of Service Level \nObjectives. In addition, certain consequences are associated with not meeting the Service Level \nObjectives. Service Level Agreements are expressed in terms of Service Level Specifications."
  },
  "ServiceLevelSpecificationRef": {
    "name": "ServiceLevelSpecificationRef",
    "domain": "Service",
    "description": "A Service Level Specification represents a pre-defined or negotiated set of Service Level \nObjectives. In addition, certain consequences are associated with not meeting the Service Level \nObjectives. Service Level Agreements are expressed in terms of Service Level Specifications."
  },
  "ServiceLevelSpecParameter": {
    "name": "ServiceLevelSpecParameter",
    "domain": "Service",
    "description": "Service Level Specification parameters can be one of two types. A Key Quality Indicator (KQI) \nprovides a measurement of a specific aspect of the performance of a Product (i.e., Product \nSpecification, Product Offering, or Product) or a Service (i.e., Service Specification or Service)."
  },
  "ServiceOfferingQualificationRef": {
    "name": "ServiceOfferingQualificationRef",
    "domain": "Service",
    "description": "It could be a serviceQualification or a productOfferingQualification that has been executed previously and captured in the productOrder to provide eligibility information"
  },
  "ServiceOrder": {
    "name": "ServiceOrder",
    "domain": "Service"
  },
  "ServiceOrderActionType": {
    "name": "ServiceOrderActionType",
    "domain": "Service",
    "description": "string"
  },
  "ServiceOrderErrorMessage": {
    "name": "ServiceOrderErrorMessage",
    "domain": "Service",
    "description": "A ServiceOrderErrorMessage represents an error that causes a status change in a service order."
  },
  "ServiceOrderItem": {
    "name": "ServiceOrderItem",
    "domain": "Service"
  },
  "ServiceOrderItemErrorMessage": {
    "name": "ServiceOrderItemErrorMessage",
    "domain": "Service",
    "description": "AServiceOrderItemErrorMessage represents an error that causes a status change in a service order item."
  },
  "ServiceOrderItemRef": {
    "name": "ServiceOrderItemRef",
    "domain": "Service"
  },
  "ServiceOrderItemRelationship": {
    "name": "ServiceOrderItemRelationship",
    "domain": "Service",
    "description": "Linked service order item to the one containing this attribute"
  },
  "ServiceOrderItemStateType": {
    "name": "ServiceOrderItemStateType",
    "domain": "Service",
    "description": "Possible values for the state of the order item"
  },
  "ServiceOrderJeopardyAlert": {
    "name": "ServiceOrderJeopardyAlert",
    "domain": "Service",
    "description": "A ServiceOrderJeopardyAlert represents a predicted exception during a service order processing that would brings risk to complete successfully the ordetr."
  },
  "ServiceOrderMilestone": {
    "name": "ServiceOrderMilestone",
    "domain": "Service",
    "description": "ServiceOrderMilestone represents an action or event marking a significant change or stage in processing of a service order."
  },
  "ServiceOrderRef": {
    "name": "ServiceOrderRef",
    "domain": "Service",
    "description": "Service Order reference. Useful to understand the which was the Service order through which the service was instantiated in the service inventory"
  },
  "ServiceOrderRelationship": {
    "name": "ServiceOrderRelationship",
    "domain": "Service",
    "description": "Linked service order to the one containing this attribute"
  },
  "ServiceOrderStateType": {
    "name": "ServiceOrderStateType",
    "domain": "Service",
    "description": "Possible values for the state of the order"
  },
  "ServiceProblem": {
    "name": "ServiceProblem",
    "domain": "Service",
    "description": "The problem information for Middle B which is abstracted in the service layer from the issued event information by First B"
  },
  "ServiceProblemEventRecord": {
    "name": "ServiceProblemEventRecord",
    "domain": "Service",
    "description": "A record of an event (related to a service problem) received from another system"
  },
  "ServiceProblemRef": {
    "name": "ServiceProblemRef",
    "domain": "Service"
  },
  "ServiceProblemStateType": {
    "name": "ServiceProblemStateType",
    "domain": "Service",
    "description": "Possible values for the state of the ServiceProblem"
  },
  "ServiceQualification": {
    "name": "ServiceQualification",
    "domain": "Service",
    "description": "ServiceQualification is used to perform a technical eligibility. It allows to retrieve a list of services that are technically available in the context of the interaction (place, party, service characteristics, ...)."
  },
  "ServiceQualificationItem": {
    "name": "ServiceQualificationItem",
    "domain": "Service",
    "description": "A ServiceQualificationItem relates to a specific service being checked in a qualification operation."
  },
  "ServiceQualificationItemRelationship": {
    "name": "ServiceQualificationItemRelationship",
    "domain": "Service",
    "description": "Structure used to describe relationship between serviceQualification items from the same serviceQualification."
  },
  "ServiceQualificationRelationship": {
    "name": "ServiceQualificationRelationship",
    "domain": "Service"
  },
  "ServiceRef": {
    "name": "ServiceRef",
    "domain": "Service",
    "description": "Service reference, for when Service is used by other entities"
  },
  "ServiceRefOrValue": {
    "name": "ServiceRefOrValue",
    "domain": "Service",
    "description": "A Service to be created defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation & @referredType are related to the Service entity and not the RelatedServiceRefOrValue class itself"
  },
  "ServiceRelationship": {
    "name": "ServiceRelationship",
    "domain": "Service"
  },
  "ServiceRelationshipType": {
    "name": "ServiceRelationshipType",
    "domain": "Service",
    "description": "Possible values for service relationship type"
  },
  "ServiceSpecCharacteristic": {
    "name": "ServiceSpecCharacteristic",
    "domain": "Service",
    "description": "This class represents the key features of this service specification. For example, bandwidth is a characteristic of many different types of services; if bandwidth is a relevant characteristic (e.g., from the point-of-view of a Customer obtaining this Service via a Product) then bandwidth would be a ServiceSpecCharacteristic for that particular Service."
  },
  "ServiceSpecCharacteristicValue": {
    "name": "ServiceSpecCharacteristicValue",
    "domain": "Service",
    "description": "A ServiceSpecCharacteristicValue object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a ServiceSpecCharacteristic object. The values of the attributes in the ServiceSpecCharacteristicValue object describe the values of the attributes that a corresponding ServiceSpecCharacteristic object can take on."
  },
  "ServiceSpecCharRelationship": {
    "name": "ServiceSpecCharRelationship",
    "domain": "Service",
    "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among serviceSpecCharacteristics."
  },
  "ServiceSpecification": {
    "name": "ServiceSpecification",
    "domain": "Service",
    "description": "ServiceSpecification is a class that offers characteristics to describe a type of service.\nFunctionally, it acts as a template by which Services may be instantiated. By sharing the same specification, these services would therefore share the same set of characteristics."
  },
  "ServiceSpecificationRef": {
    "name": "ServiceSpecificationRef",
    "domain": "Service",
    "description": "Service specification reference: ServiceSpecification(s) required to realize a ProductSpecification."
  },
  "ServiceSpecRelationship": {
    "name": "ServiceSpecRelationship",
    "domain": "Service",
    "description": "A dependency, substitution or exclusivity relationship between/among service specifications."
  },
  "ServiceStateType": {
    "name": "ServiceStateType",
    "domain": "Service",
    "description": "Valid values for the lifecycle state of the service"
  },
  "ServiceTest": {
    "name": "ServiceTest",
    "domain": "Service",
    "description": "A service test is an entity that exists for a controlled test invocation on a service. The service \ntest is executed according to a schedule and contains service test configuration parameters that are to be \napplied at execution time, and service test measures that result."
  },
  "ServiceTestCharacteristic": {
    "name": "ServiceTestCharacteristic",
    "domain": "Service",
    "description": "The configuration of the service test is set by the service test characteristic."
  },
  "ServiceTestSpecification": {
    "name": "ServiceTestSpecification",
    "domain": "Service",
    "description": "The service test specification describes the service test in terms of parameters to be configured and \nmeasures to be taken."
  },
  "ServiceTestSpecificationRef": {
    "name": "ServiceTestSpecificationRef",
    "domain": "Service",
    "description": "The service test specification used by the service test."
  },
  "ServiceTestSpecRelationship": {
    "name": "ServiceTestSpecRelationship",
    "domain": "Service",
    "description": "A substitution, dependency or exclusivity relationship between/among service specifications."
  },
  "ServiceUsage": {
    "name": "ServiceUsage",
    "domain": "Service",
    "description": "An occurrence of usage on a Service derived from various resource usages. It is comprised of characteristics, which represent attributes of service usage."
  },
  "ServiceUsageCharacteristic": {
    "name": "ServiceUsageCharacteristic",
    "domain": "Service",
    "description": "Provides the value of a given characteristic"
  },
  "ServiceUsageSpecCharRelationship": {
    "name": "ServiceUsageSpecCharRelationship",
    "domain": "Service",
    "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among serviceUsageSpecCharacteristics."
  },
  "ServiceUsageSpecification": {
    "name": "ServiceUsageSpecification",
    "domain": "Service",
    "description": "A detailed description of a service usage event that are of interest to the business. It is comprised of characteristics, which define all attributes known for a particular type of usage."
  },
  "ServiceUsageSpecificationRef": {
    "name": "ServiceUsageSpecificationRef",
    "domain": "Service",
    "description": "UsageSpecification reference. UsageSpecification is a detailed description of a service usage event that are of interest to the business. It is comprised of characteristics, which define all attributes known for a particular type of usage."
  },
  "ServiceUsageSpecRelationship": {
    "name": "ServiceUsageSpecRelationship",
    "domain": "Service",
    "description": "A dependency, substitution or exclusivity relationship between/among service usage specifications."
  },
  "ServiceUsageStatusType": {
    "name": "ServiceUsageStatusType",
    "domain": "Service",
    "description": "Possible values for the status of the Usage"
  },
  "SupportingService": {
    "name": "SupportingService",
    "domain": "Service",
    "description": "A collection of services that support this service (links between CFS -> RFS)"
  },
  "TargetServiceSchema": {
    "name": "TargetServiceSchema",
    "domain": "Service",
    "description": "The reference object to the schema and type of target service which is described by service specification"
  },
  "TerminationError": {
    "name": "TerminationError",
    "domain": "Service",
    "description": "This indicates an error that caused a qualificationItem to be terminated."
  },
  "TestMeasure": {
    "name": "TestMeasure",
    "domain": "Service",
    "description": "A TestMeasure specifies a measure of a specific aspect of a product, service, or resource test, such as lost packets or connectivity status"
  },
  "TestMeasureDefinition": {
    "name": "TestMeasureDefinition",
    "domain": "Service",
    "description": "A TestMeasureDefinition specifies a measure of a specific aspect of a product, service, or resource test, such as lost packets or connectivity status"
  },
  "TrackingRecord": {
    "name": "TrackingRecord",
    "domain": "Service",
    "description": "Tracking records allow the tracking of modifications on the problem. The tracking records should not be embedded in the problem to allow retrieving the problem without the tracking records"
  },
  "UsageConsumptionServiceRef": {
    "name": "UsageConsumptionServiceRef",
    "domain": "Service",
    "description": "Service reference, for when Service is used by other entities"
  },
  "5GSlice": {
    "name": "5GSlice",
    "domain": "DCS"
  }
}